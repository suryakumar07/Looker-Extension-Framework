{"version":3,"file":"ExtendComponentsProvider.js","names":["ExtendComponentsThemeProvider","children","themeCustomizations","parentTheme","useTheme","theme","useMemo","generateTheme"],"sources":["../../src/ExtendComponentsProvider.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ThemeCustomizations } from '@looker/design-tokens'\nimport { generateTheme } from '@looker/design-tokens'\nimport { ThemeProvider, useTheme } from 'styled-components'\nimport React, { useMemo } from 'react'\nimport type { ReactNode } from 'react'\n\nexport interface ExtendComponentsTheme {\n  themeCustomizations?: ThemeCustomizations\n  children?: ReactNode\n}\n\n/**\n * This component is designed for making adjustments to the Theme without\n * initializing an entire ComponentsProvider. ExtendComponentsThemeProvider\n * will merge the themeCustomizations with the theme already established.\n *\n * This component is intended for use cases where a portion of page carries\n * a different theme than the rest.\n */\nexport const ExtendComponentsThemeProvider = ({\n  children,\n  themeCustomizations,\n}: ExtendComponentsTheme) => {\n  const parentTheme = useTheme()\n\n  const theme = useMemo(() => {\n    return generateTheme(parentTheme, themeCustomizations)\n  }, [parentTheme, themeCustomizations])\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n"],"mappings":";;;;;;;AAMA;AACA;AACA;AAAsC;AAAA;;AAgB/B,IAAMA,6BAA6B,GAAG,SAAhCA,6BAA6B,OAGb;EAAA,IAF3BC,QAAQ,QAARA,QAAQ;IACRC,mBAAmB,QAAnBA,mBAAmB;EAEnB,IAAMC,WAAW,GAAG,IAAAC,0BAAQ,GAAE;EAE9B,IAAMC,KAAK,GAAG,IAAAC,cAAO,EAAC,YAAM;IAC1B,OAAO,IAAAC,2BAAa,EAACJ,WAAW,EAAED,mBAAmB,CAAC;EACxD,CAAC,EAAE,CAACC,WAAW,EAAED,mBAAmB,CAAC,CAAC;EAEtC,OAAO,gCAAC,+BAAa;IAAC,KAAK,EAAEG;EAAM,GAAEJ,QAAQ,CAAiB;AAChE,CAAC;AAAA"}