{"version":3,"file":"useI18n.spec.js","names":["render","i18next","React","useI18n","i18nMockResources","en","AComponent","Something","BComponent","Hello","World","TestComponent","children","props","describe","test","spy","jest","spyOn","expect","init","toHaveBeenCalledTimes","mockRestore","isInitialized","Object","keys","length","mock","calls","toMatchInlineSnapshot"],"sources":["../../../src/I18n/useI18n.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { render } from '@testing-library/react'\nimport i18next from 'i18next'\nimport React from 'react'\nimport type { ReactNode } from 'react'\nimport type { UseI18nProps } from './useI18n'\nimport { useI18n } from './useI18n'\n\nconst i18nMockResources = {\n  en: {\n    AComponent: {\n      Something: 'Something',\n      'Something else': 'Something else',\n    },\n    BComponent: {\n      Hello: 'Hello',\n      World: 'World',\n    },\n  },\n}\ntype TestComponentProps = UseI18nProps & {\n  children?: ReactNode\n}\n\nconst TestComponent = ({ children, ...props }: TestComponentProps) => {\n  useI18n(props)\n  return <>{children}</>\n}\n\ndescribe('useI18n', () => {\n  test('initializes i18next', () => {\n    const spy = jest.spyOn(i18next, 'init')\n    render(<TestComponent />)\n\n    expect(i18next.init).toHaveBeenCalledTimes(1)\n    spy.mockRestore()\n    i18next.isInitialized = false\n  })\n\n  test('updates with new props', () => {\n    const spy = jest.spyOn(i18next, 'addResourceBundle')\n    i18next.isInitialized = true\n    render(<TestComponent resources={i18nMockResources} />)\n    expect(spy).toHaveBeenCalledTimes(Object.keys(i18nMockResources.en).length)\n    spy.mockRestore()\n  })\n\n  test('updates with new locale', () => {\n    const spy = jest.spyOn(i18next, 'changeLanguage')\n    i18next.isInitialized = true\n    render(<TestComponent locale=\"de-DE\" />)\n    expect(spy.mock.calls).toMatchInlineSnapshot(`\n      Array [\n        Array [\n          \"de-DE\",\n        ],\n      ]\n    `)\n    spy.mockRestore()\n  })\n})\n"],"mappings":";;;AAKA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,OAAO,QAAQ,WAAW;AAEnC,MAAMC,iBAAiB,GAAG;EACxBC,EAAE,EAAE;IACFC,UAAU,EAAE;MACVC,SAAS,EAAE,WAAW;MACtB,gBAAgB,EAAE;IACpB,CAAC;IACDC,UAAU,EAAE;MACVC,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE;IACT;EACF;AACF,CAAC;AAKD,MAAMC,aAAa,GAAG,QAAgD;EAAA,IAA/C;MAAEC;IAAuC,CAAC;IAA3BC,KAAK;EACzCV,OAAO,CAACU,KAAK,CAAC;EACd,OAAO,0CAAGD,QAAQ,CAAI;AACxB,CAAC;AAEDE,QAAQ,CAAC,SAAS,EAAE,MAAM;EACxBC,IAAI,CAAC,qBAAqB,EAAE,MAAM;IAChC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACjB,OAAO,EAAE,MAAM,CAAC;IACvCD,MAAM,CAAC,oBAAC,aAAa,OAAG,CAAC;IAEzBmB,MAAM,CAAClB,OAAO,CAACmB,IAAI,CAAC,CAACC,qBAAqB,CAAC,CAAC,CAAC;IAC7CL,GAAG,CAACM,WAAW,EAAE;IACjBrB,OAAO,CAACsB,aAAa,GAAG,KAAK;EAC/B,CAAC,CAAC;EAEFR,IAAI,CAAC,wBAAwB,EAAE,MAAM;IACnC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACjB,OAAO,EAAE,mBAAmB,CAAC;IACpDA,OAAO,CAACsB,aAAa,GAAG,IAAI;IAC5BvB,MAAM,CAAC,oBAAC,aAAa;MAAC,SAAS,EAAEI;IAAkB,EAAG,CAAC;IACvDe,MAAM,CAACH,GAAG,CAAC,CAACK,qBAAqB,CAACG,MAAM,CAACC,IAAI,CAACrB,iBAAiB,CAACC,EAAE,CAAC,CAACqB,MAAM,CAAC;IAC3EV,GAAG,CAACM,WAAW,EAAE;EACnB,CAAC,CAAC;EAEFP,IAAI,CAAC,yBAAyB,EAAE,MAAM;IACpC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACjB,OAAO,EAAE,gBAAgB,CAAC;IACjDA,OAAO,CAACsB,aAAa,GAAG,IAAI;IAC5BvB,MAAM,CAAC,oBAAC,aAAa;MAAC,MAAM,EAAC;IAAO,EAAG,CAAC;IACxCmB,MAAM,CAACH,GAAG,CAACW,IAAI,CAACC,KAAK,CAAC,CAACC,qBAAqB,CAAE;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;IACFb,GAAG,CAACM,WAAW,EAAE;EACnB,CAAC,CAAC;AACJ,CAAC,CAAC"}