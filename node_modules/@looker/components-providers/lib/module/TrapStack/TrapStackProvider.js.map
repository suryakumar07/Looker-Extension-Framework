{"version":3,"file":"TrapStackProvider.js","names":["React","useRef","useMemo","getActiveTrap","TrapStackProvider","activate","context","children","registeredTrapsRef","activeTrapRef","deactivateRef","value","getTrap","id","registeredTraps","current","enableCurrentTrap","newTrap","element","undefined","disableCurrentTrap","addTrap","trap","removeTrap","existingTrap"],"sources":["../../../src/TrapStack/TrapStackProvider.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { Context, ReactNode } from 'react'\nimport React, { useRef, useMemo } from 'react'\nimport type { Trap, TrapStackContextProps, TrapMap } from './types'\nimport { getActiveTrap } from './utils'\n\nexport interface TrapStackProviderProps<O = unknown> {\n  activate: (trap: Trap<O>) => () => void\n  children?: ReactNode\n  context: Context<TrapStackContextProps<O>>\n}\n\n/**\n * Manages \"trap\" behavior (e.g. scroll lock & focus trap)\n * in a stack of elements (e.g. layered Dialogs & Popovers)\n */\nexport const TrapStackProvider = <O,>({\n  activate,\n  context,\n  children,\n}: TrapStackProviderProps<O>) => {\n  // Stores all available trap elements\n  // (map of ids to elements that have traps)\n  const registeredTrapsRef = useRef<TrapMap<O>>({})\n  // Stores the current trap (element) where scrolling is allowed\n  // undefined if no trap is active\n  const activeTrapRef = useRef<HTMLElement>()\n  // Stores the callback to remove the trap behavior\n  const deactivateRef = useRef<() => void>()\n\n  // Create the context value\n  const value = useMemo(() => {\n    const getTrap = (id?: string): Trap<O> | undefined => {\n      const registeredTraps = registeredTrapsRef.current\n      return id ? registeredTraps[id] : getActiveTrap(registeredTraps)\n    }\n\n    const enableCurrentTrap = () => {\n      const newTrap = getTrap()\n      if (newTrap?.element !== activeTrapRef.current) {\n        // Disable the existing trap and update the activeTrapRef\n        // (whether there's a new trap or not)\n        activeTrapRef.current = newTrap?.element\n        deactivateRef.current?.()\n        deactivateRef.current = undefined\n        // If there's a new trap, activate it and\n        // save the deactivate function that is returned\n        if (newTrap) {\n          deactivateRef.current = activate(newTrap)\n        }\n      }\n    }\n\n    const disableCurrentTrap = () => {\n      deactivateRef.current?.()\n      deactivateRef.current = undefined\n      activeTrapRef.current = undefined\n    }\n\n    const addTrap = (id: string, trap: Trap<O>) => {\n      registeredTrapsRef.current[id] = trap\n      enableCurrentTrap()\n    }\n\n    const removeTrap = (id: string) => {\n      const existingTrap = getTrap(id)\n      if (existingTrap) {\n        const registeredTraps = registeredTrapsRef.current\n        delete registeredTraps[id]\n        enableCurrentTrap()\n      }\n    }\n\n    return {\n      activeTrapRef,\n      addTrap,\n      disableCurrentTrap,\n      enableCurrentTrap,\n      getTrap,\n      removeTrap,\n    }\n  }, [activate])\n\n  return <context.Provider value={value}>{children}</context.Provider>\n}\n"],"mappings":";;AA2BA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAE9C,SAASC,aAAa,QAAQ,SAAS;AAYvC,OAAO,MAAMC,iBAAiB,GAAG,CAAK;EACpCC,QAAQ;EACRC,OAAO;EACPC;AACyB,CAAC,KAAK;EAG/B,MAAMC,kBAAkB,GAAGP,MAAM,CAAa,CAAC,CAAC,CAAC;EAGjD,MAAMQ,aAAa,GAAGR,MAAM,EAAe;EAE3C,MAAMS,aAAa,GAAGT,MAAM,EAAc;;EAG1C,MAAMU,KAAK,GAAGT,OAAO,CAAC,MAAM;IAC1B,MAAMU,OAAO,GAAIC,EAAW,IAA0B;MACpD,MAAMC,eAAe,GAAGN,kBAAkB,CAACO,OAAO;MAClD,OAAOF,EAAE,GAAGC,eAAe,CAACD,EAAE,CAAC,GAAGV,aAAa,CAACW,eAAe,CAAC;IAClE,CAAC;IAED,MAAME,iBAAiB,GAAG,MAAM;MAC9B,MAAMC,OAAO,GAAGL,OAAO,EAAE;MACzB,IAAI,CAAAK,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,OAAO,MAAKT,aAAa,CAACM,OAAO,EAAE;QAAA;QAG9CN,aAAa,CAACM,OAAO,GAAGE,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,OAAO;QACxC,yBAAAR,aAAa,CAACK,OAAO,0DAArB,2BAAAL,aAAa,CAAY;QACzBA,aAAa,CAACK,OAAO,GAAGI,SAAS;QAGjC,IAAIF,OAAO,EAAE;UACXP,aAAa,CAACK,OAAO,GAAGV,QAAQ,CAACY,OAAO,CAAC;QAC3C;MACF;IACF,CAAC;IAED,MAAMG,kBAAkB,GAAG,MAAM;MAAA;MAC/B,0BAAAV,aAAa,CAACK,OAAO,2DAArB,4BAAAL,aAAa,CAAY;MACzBA,aAAa,CAACK,OAAO,GAAGI,SAAS;MACjCV,aAAa,CAACM,OAAO,GAAGI,SAAS;IACnC,CAAC;IAED,MAAME,OAAO,GAAG,CAACR,EAAU,EAAES,IAAa,KAAK;MAC7Cd,kBAAkB,CAACO,OAAO,CAACF,EAAE,CAAC,GAAGS,IAAI;MACrCN,iBAAiB,EAAE;IACrB,CAAC;IAED,MAAMO,UAAU,GAAIV,EAAU,IAAK;MACjC,MAAMW,YAAY,GAAGZ,OAAO,CAACC,EAAE,CAAC;MAChC,IAAIW,YAAY,EAAE;QAChB,MAAMV,eAAe,GAAGN,kBAAkB,CAACO,OAAO;QAClD,OAAOD,eAAe,CAACD,EAAE,CAAC;QAC1BG,iBAAiB,EAAE;MACrB;IACF,CAAC;IAED,OAAO;MACLP,aAAa;MACbY,OAAO;MACPD,kBAAkB;MAClBJ,iBAAiB;MACjBJ,OAAO;MACPW;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,OAAO,oBAAC,OAAO,CAAC,QAAQ;IAAC,KAAK,EAAEM;EAAM,GAAEJ,QAAQ,CAAoB;AACtE,CAAC"}