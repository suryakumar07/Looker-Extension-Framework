function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { addQueryParams, StatusCode } from './transport';
export class BaseTransport {
  constructor(options) {
    this.options = options;

    _defineProperty(this, "observer", undefined);

    this.options = options;
  }

  ok(res) {
    return res.statusCode >= StatusCode.OK && res.statusCode <= StatusCode.IMUsed;
  }

  makeUrl(path, options, queryParams) {
    var base = options.base_url;

    if (!path.match(/^(http:\/\/|https:\/\/)/gi)) {
      path = "".concat(base).concat(path);
    }

    path = addQueryParams(path, queryParams);
    return path;
  }

}
//# sourceMappingURL=baseTransport.js.map