{"version":3,"file":"generateFontFamilies.js","names":["pickBy","identity","fontFacesToFamily","generateFontFamilies","defaultFonts","fallbacks","customFonts","fontFamilies","Object","entries","map","key","fontFace"],"sources":["../../../../src/utils/typography/generateFontFamilies.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport pickBy from 'lodash/pickBy'\nimport identity from 'lodash/identity'\nimport type { FontFamilyChoices } from '../../system'\nimport type {\n  FontFamilies,\n  FontFamilyFallbacks,\n} from '../../system/typography/font_families'\nimport { fontFacesToFamily } from './fontFacesToFamily'\n\nexport const generateFontFamilies = (\n  defaultFonts: FontFamilyChoices,\n  fallbacks: FontFamilyFallbacks,\n  customFonts?: Partial<FontFamilyChoices>\n) => {\n  const fontFamilies: FontFamilyChoices = {\n    ...defaultFonts,\n    ...pickBy(customFonts, identity),\n  }\n\n  Object.entries(fontFamilies).map(\n    ([key, fontFace]) =>\n      (fontFamilies[key as FontFamilies] = fontFacesToFamily(\n        fontFace,\n        fallbacks[key as FontFamilies]\n      ))\n  )\n\n  return fontFamilies\n}\n"],"mappings":";;;;AAKA,OAAOA,MAAM,MAAM,eAAe;AAClC,OAAOC,QAAQ,MAAM,iBAAiB;AAMtC,SAASC,iBAAiB,QAAQ,qBAAqB;AAEvD,OAAO,MAAMC,oBAAoB,GAAG,CAClCC,YAA+B,EAC/BC,SAA8B,EAC9BC,WAAwC,KACrC;EACH,MAAMC,YAA+B,mCAChCH,YAAY,GACZJ,MAAM,CAACM,WAAW,EAAEL,QAAQ,CAAC,CACjC;EAEDO,MAAM,CAACC,OAAO,CAACF,YAAY,CAAC,CAACG,GAAG,CAC9B,CAAC,CAACC,GAAG,EAAEC,QAAQ,CAAC,KACbL,YAAY,CAACI,GAAG,CAAiB,GAAGT,iBAAiB,CACpDU,QAAQ,EACRP,SAAS,CAACM,GAAG,CAAiB,CAC9B,CACL;EAED,OAAOJ,YAAY;AACrB,CAAC"}