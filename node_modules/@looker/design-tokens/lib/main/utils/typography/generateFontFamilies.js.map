{"version":3,"file":"generateFontFamilies.js","names":["generateFontFamilies","defaultFonts","fallbacks","customFonts","fontFamilies","pickBy","identity","Object","entries","map","key","fontFace","fontFacesToFamily"],"sources":["../../../../src/utils/typography/generateFontFamilies.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport pickBy from 'lodash/pickBy'\nimport identity from 'lodash/identity'\nimport type { FontFamilyChoices } from '../../system'\nimport type {\n  FontFamilies,\n  FontFamilyFallbacks,\n} from '../../system/typography/font_families'\nimport { fontFacesToFamily } from './fontFacesToFamily'\n\nexport const generateFontFamilies = (\n  defaultFonts: FontFamilyChoices,\n  fallbacks: FontFamilyFallbacks,\n  customFonts?: Partial<FontFamilyChoices>\n) => {\n  const fontFamilies: FontFamilyChoices = {\n    ...defaultFonts,\n    ...pickBy(customFonts, identity),\n  }\n\n  Object.entries(fontFamilies).map(\n    ([key, fontFace]) =>\n      (fontFamilies[key as FontFamilies] = fontFacesToFamily(\n        fontFace,\n        fallbacks[key as FontFamilies]\n      ))\n  )\n\n  return fontFamilies\n}\n"],"mappings":";;;;;;;;;AAKA;AACA;AAMA;AAAuD;AAAA;AAEhD,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoB,CAC/BC,YAA+B,EAC/BC,SAA8B,EAC9BC,WAAwC,EACrC;EACH,IAAMC,YAA+B,mCAChCH,YAAY,GACZ,IAAAI,kBAAM,EAACF,WAAW,EAAEG,oBAAQ,CAAC,CACjC;EAEDC,MAAM,CAACC,OAAO,CAACJ,YAAY,CAAC,CAACK,GAAG,CAC9B;IAAA;MAAEC,GAAG;MAAEC,QAAQ;IAAA,OACZP,YAAY,CAACM,GAAG,CAAiB,GAAG,IAAAE,oCAAiB,EACpDD,QAAQ,EACRT,SAAS,CAACQ,GAAG,CAAiB,CAC/B;EAAA,CAAC,CACL;EAED,OAAON,YAAY;AACrB,CAAC;AAAA"}