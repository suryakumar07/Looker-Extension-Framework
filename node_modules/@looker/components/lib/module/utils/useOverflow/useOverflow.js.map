{"version":3,"file":"useOverflow.js","names":["useCallback","useEffect","useState","useResize","useCallbackRef","useOverflow","ref","element","callbackRef","hasOverflow","setHasOverflow","height","setHeight","handleResize","offsetHeight","scrollHeight"],"sources":["../../../../src/utils/useOverflow/useOverflow.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useResize } from '../useResize'\nimport { useCallbackRef } from '../useCallbackRef'\n\nexport type UseOverflowProps = {\n  hasOverflow: boolean\n}\n\nexport const useOverflow = (\n  ref?: Ref<HTMLElement>\n): [boolean, (node: HTMLElement | null) => void] => {\n  const [element, callbackRef] = useCallbackRef(ref)\n  const [hasOverflow, setHasOverflow] = useState(false)\n  const [height, setHeight] = useState(0)\n\n  const handleResize = useCallback(() => {\n    if (element) {\n      setHeight(element.offsetHeight)\n    }\n  }, [element])\n\n  useResize(element, handleResize)\n\n  useEffect(() => {\n    if (element) {\n      setHasOverflow(element.offsetHeight < element.scrollHeight)\n    }\n  }, [height, element])\n\n  return [hasOverflow, callbackRef]\n}\n"],"mappings":";;AAMA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,cAAc,QAAQ,mBAAmB;AAMlD,OAAO,MAAMC,WAAW,GACtBC,GAAsB,IAC4B;EAClD,MAAM,CAACC,OAAO,EAAEC,WAAW,CAAC,GAAGJ,cAAc,CAACE,GAAG,CAAC;EAClD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMW,YAAY,GAAGb,WAAW,CAAC,MAAM;IACrC,IAAIO,OAAO,EAAE;MACXK,SAAS,CAACL,OAAO,CAACO,YAAY,CAAC;IACjC;EACF,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEbJ,SAAS,CAACI,OAAO,EAAEM,YAAY,CAAC;EAEhCZ,SAAS,CAAC,MAAM;IACd,IAAIM,OAAO,EAAE;MACXG,cAAc,CAACH,OAAO,CAACO,YAAY,GAAGP,OAAO,CAACQ,YAAY,CAAC;IAC7D;EACF,CAAC,EAAE,CAACJ,MAAM,EAAEJ,OAAO,CAAC,CAAC;EAErB,OAAO,CAACE,WAAW,EAAED,WAAW,CAAC;AACnC,CAAC"}