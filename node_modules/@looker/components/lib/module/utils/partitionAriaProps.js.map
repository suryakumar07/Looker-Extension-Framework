{"version":3,"file":"partitionAriaProps.js","names":["partitionAriaProps","props","aria","remainder","Object","entries","forEach","key","value","startsWith"],"sources":["../../../src/utils/partitionAriaProps.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type React from 'react'\n\n/**\n * Partitions an object into 2 objects, the first containing all aria related prop keys and their respective values\n * and the second containing all other prop keys and their respective values\n *\n * @param {T extends React.AriaAttribute} props\n * @returns {Array} A tuple where the first object contains all aria related props and the second object contains the remaining props\n */\nexport const partitionAriaProps = <T extends React.AriaAttributes>(\n  props: T\n) => {\n  const aria: { [key: string]: string } = {}\n  const remainder: { [key: string]: string } = {}\n\n  Object.entries(props).forEach(([key, value]) =>\n    key.startsWith('aria-') ? (aria[key] = value) : (remainder[key] = value)\n  )\n\n  return [aria, remainder]\n}\n"],"mappings":";;AAcA,OAAO,MAAMA,kBAAkB,GAC7BC,KAAQ,IACL;EACH,MAAMC,IAA+B,GAAG,CAAC,CAAC;EAC1C,MAAMC,SAAoC,GAAG,CAAC,CAAC;EAE/CC,MAAM,CAACC,OAAO,CAACJ,KAAK,CAAC,CAACK,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KACzCD,GAAG,CAACE,UAAU,CAAC,OAAO,CAAC,GAAIP,IAAI,CAACK,GAAG,CAAC,GAAGC,KAAK,GAAKL,SAAS,CAACI,GAAG,CAAC,GAAGC,KAAM,CACzE;EAED,OAAO,CAACN,IAAI,EAAEC,SAAS,CAAC;AAC1B,CAAC"}