{"version":3,"file":"useSafeLayoutEffect.js","names":["React","createContext","useContext","useEffect","useLayoutEffect","reactUseLayoutEffect","SafeSSRContext","SafeSSRProvider","children","useSafeLayoutEffect","args","value","isSSR","window"],"sources":["../../../src/utils/useSafeLayoutEffect.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useLayoutEffect as reactUseLayoutEffect,\n} from 'react'\n\nexport const SafeSSRContext = createContext(false)\n\n/**\n * Avoid the React useLayoutEffect when using renderToString\n * on the client side\n */\nexport const SafeSSRProvider = ({\n  children,\n}: React.PropsWithChildren<unknown>) => {\n  return <SafeSSRContext.Provider value>{children}</SafeSSRContext.Provider>\n}\n\n/**\n * Avoids the React useLayoutEffect error by falling back to useEffect.\n * Note: A component that calls useLayoutEffect will most likely\n * not behave correctly in SSR. Instead, consider delaying rendering\n * until client-side JS loads, via useEffect.\n */\nexport const useSafeLayoutEffect: typeof reactUseLayoutEffect = (...args) => {\n  const value = useContext(SafeSSRContext)\n  // SSR is detected via undefined window, or set with SafeSSRProvider\n  const isSSR = value || typeof window === 'undefined'\n\n  const useLayoutEffect = isSSR ? useEffect : reactUseLayoutEffect\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useLayoutEffect(...args)\n}\n"],"mappings":";;AAKA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,SAAS,EACTC,eAAe,IAAIC,oBAAoB,QAClC,OAAO;AAEd,OAAO,MAAMC,cAAc,GAAGL,aAAa,CAAC,KAAK,CAAC;;AAMlD,OAAO,MAAMM,eAAe,GAAG,CAAC;EAC9BC;AACgC,CAAC,KAAK;EACtC,OAAO,oBAAC,cAAc,CAAC,QAAQ;IAAC,KAAK;EAAA,GAAEA,QAAQ,CAA2B;AAC5E,CAAC;;AAQD,OAAO,MAAMC,mBAAgD,GAAG,CAAC,GAAGC,IAAI,KAAK;EAC3E,MAAMC,KAAK,GAAGT,UAAU,CAACI,cAAc,CAAC;EAExC,MAAMM,KAAK,GAAGD,KAAK,IAAI,OAAOE,MAAM,KAAK,WAAW;EAEpD,MAAMT,eAAe,GAAGQ,KAAK,GAAGT,SAAS,GAAGE,oBAAoB;EAEhE,OAAOD,eAAe,CAAC,GAAGM,IAAI,CAAC;AACjC,CAAC"}