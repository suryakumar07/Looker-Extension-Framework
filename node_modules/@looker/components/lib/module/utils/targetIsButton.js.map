{"version":3,"file":"targetIsButton.js","names":["checkForButton","element","containingAncestor","parentElement","tagName","targetIsButton","e","target","currentTarget"],"sources":["../../../src/utils/targetIsButton.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { MouseEvent as ReactMouseEvent } from 'react'\n\nconst checkForButton = (\n  element: Element,\n  containingAncestor: Element\n): boolean => {\n  if (element === containingAncestor) return false\n  if (!element.parentElement) return false\n  if (element.tagName === 'BUTTON') {\n    return true\n  }\n  return checkForButton(element.parentElement, containingAncestor)\n}\n/**\n * Walks up the dom tree from an event's target to its currentTarget\n * to determine whether a mousedown/click was located within a button\n * @param e mouse event\n */\nexport const targetIsButton = (e: ReactMouseEvent<HTMLElement>) => {\n  return checkForButton(e.target as Element, e.currentTarget as Element)\n}\n"],"mappings":";;AAOA,MAAMA,cAAc,GAAG,CACrBC,OAAgB,EAChBC,kBAA2B,KACf;EACZ,IAAID,OAAO,KAAKC,kBAAkB,EAAE,OAAO,KAAK;EAChD,IAAI,CAACD,OAAO,CAACE,aAAa,EAAE,OAAO,KAAK;EACxC,IAAIF,OAAO,CAACG,OAAO,KAAK,QAAQ,EAAE;IAChC,OAAO,IAAI;EACb;EACA,OAAOJ,cAAc,CAACC,OAAO,CAACE,aAAa,EAAED,kBAAkB,CAAC;AAClE,CAAC;AAMD,OAAO,MAAMG,cAAc,GAAIC,CAA+B,IAAK;EACjE,OAAON,cAAc,CAACM,CAAC,CAACC,MAAM,EAAaD,CAAC,CAACE,aAAa,CAAY;AACxE,CAAC"}