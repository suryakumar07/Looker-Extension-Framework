{"version":3,"file":"HoverDisclosure.js","names":["React","useContext","HoverDisclosureContext","HoverDisclosure","children","width","visible","context","isVisible","style","flexBasis","flexShrink"],"sources":["../../../../src/utils/HoverDisclosure/HoverDisclosure.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { CSSProperties, ReactNode } from 'react'\nimport React, { useContext } from 'react'\nimport { HoverDisclosureContext } from './HoverDisclosureContext'\n\nexport interface HoverDisclosureProps {\n  visible?: boolean\n  /**\n   * In some circumstances it's required to reserve space for the hidden content\n   * before it is revealed. Specifying this will reserve a space of the specified\n   * width (in pixels)\n   */\n  width?: number\n  children?: ReactNode\n}\n\nexport const HoverDisclosure = ({\n  children,\n  width,\n  visible,\n}: HoverDisclosureProps) => {\n  const context = useContext(HoverDisclosureContext)\n  const isVisible = visible || context.visible\n\n  const style: CSSProperties = width\n    ? { flexBasis: width, flexShrink: 0, width }\n    : {}\n\n  return <div style={style}>{isVisible ? children : null}</div>\n}\n"],"mappings":";;AAMA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,sBAAsB,QAAQ,0BAA0B;AAajE,OAAO,MAAMC,eAAe,GAAG,CAAC;EAC9BC,QAAQ;EACRC,KAAK;EACLC;AACoB,CAAC,KAAK;EAC1B,MAAMC,OAAO,GAAGN,UAAU,CAACC,sBAAsB,CAAC;EAClD,MAAMM,SAAS,GAAGF,OAAO,IAAIC,OAAO,CAACD,OAAO;EAE5C,MAAMG,KAAoB,GAAGJ,KAAK,GAC9B;IAAEK,SAAS,EAAEL,KAAK;IAAEM,UAAU,EAAE,CAAC;IAAEN;EAAM,CAAC,GAC1C,CAAC,CAAC;EAEN,OAAO;IAAK,KAAK,EAAEI;EAAM,GAAED,SAAS,GAAGJ,QAAQ,GAAG,IAAI,CAAO;AAC/D,CAAC"}