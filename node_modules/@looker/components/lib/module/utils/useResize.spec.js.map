{"version":3,"file":"useResize.spec.js","names":["render","React","useState","ReactDOMServer","useResize","SafeSSRProvider","globalGetBoundingClientRect","Element","prototype","getBoundingClientRect","beforeEach","jest","fn","bottom","height","left","right","toJSON","top","width","x","y","afterEach","ResizeComponent","callback","element","ref","describe","test","expect","toHaveBeenCalledTimes","globalConsole","global","console","error","message","Error","renderToString","not","toHaveBeenCalled"],"sources":["../../../src/utils/useResize.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { render } from '@testing-library/react'\nimport React, { useState } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { useResize, SafeSSRProvider } from './'\n\n/* eslint-disable-next-line @typescript-eslint/unbound-method */\nconst globalGetBoundingClientRect = Element.prototype.getBoundingClientRect\n\nbeforeEach(() => {\n  /* eslint-disable-next-line @typescript-eslint/unbound-method */\n  Element.prototype.getBoundingClientRect = jest.fn(() => {\n    return {\n      bottom: 0,\n      height: 30,\n      left: 0,\n      right: 0,\n      toJSON: jest.fn(),\n      top: 0,\n      width: 360,\n      x: 0,\n      y: 0,\n    }\n  })\n})\n\nafterEach(() => {\n  /* eslint-disable-next-line @typescript-eslint/unbound-method */\n  Element.prototype.getBoundingClientRect = globalGetBoundingClientRect\n})\n\nconst ResizeComponent = ({ callback }: { callback: () => void }) => {\n  const [element, ref] = useState<HTMLDivElement | null>(null)\n  useResize(element, callback)\n  return <div ref={ref} />\n}\n\ndescribe('useResize', () => {\n  test('calls the callback', () => {\n    const callback = jest.fn()\n    render(<ResizeComponent callback={callback} />)\n    expect(callback).toHaveBeenCalledTimes(1)\n  })\n\n  test('No useLayoutEffect warning with SSR', () => {\n    // Throw an error on console.error so the test would fail\n    // with the React useLayoutEffect error\n    const globalConsole = global.console\n    global.console = {\n      ...globalConsole,\n      error: (message: string) => {\n        throw new Error(message)\n      },\n    }\n\n    const callback = jest.fn()\n    // eslint-disable-next-line testing-library/render-result-naming-convention\n    ReactDOMServer.renderToString(\n      <SafeSSRProvider>\n        <ResizeComponent callback={callback} />\n      </SafeSSRProvider>\n    )\n    // useEffect also doesn't run, but it doesn't warn\n    expect(callback).not.toHaveBeenCalled()\n\n    global.console = globalConsole\n  })\n})\n"],"mappings":";;;;AAKA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,SAAS,EAAEC,eAAe,QAAQ,IAAI;;AAG/C,MAAMC,2BAA2B,GAAGC,OAAO,CAACC,SAAS,CAACC,qBAAqB;AAE3EC,UAAU,CAAC,MAAM;EAEfH,OAAO,CAACC,SAAS,CAACC,qBAAqB,GAAGE,IAAI,CAACC,EAAE,CAAC,MAAM;IACtD,OAAO;MACLC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAEN,IAAI,CAACC,EAAE,EAAE;MACjBM,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,GAAG;MACVC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACL,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFC,SAAS,CAAC,MAAM;EAEdf,OAAO,CAACC,SAAS,CAACC,qBAAqB,GAAGH,2BAA2B;AACvE,CAAC,CAAC;AAEF,MAAMiB,eAAe,GAAG,CAAC;EAAEC;AAAmC,CAAC,KAAK;EAClE,MAAM,CAACC,OAAO,EAAEC,GAAG,CAAC,GAAGxB,QAAQ,CAAwB,IAAI,CAAC;EAC5DE,SAAS,CAACqB,OAAO,EAAED,QAAQ,CAAC;EAC5B,OAAO;IAAK,GAAG,EAAEE;EAAI,EAAG;AAC1B,CAAC;AAEDC,QAAQ,CAAC,WAAW,EAAE,MAAM;EAC1BC,IAAI,CAAC,oBAAoB,EAAE,MAAM;IAC/B,MAAMJ,QAAQ,GAAGb,IAAI,CAACC,EAAE,EAAE;IAC1BZ,MAAM,CAAC,oBAAC,eAAe;MAAC,QAAQ,EAAEwB;IAAS,EAAG,CAAC;IAC/CK,MAAM,CAACL,QAAQ,CAAC,CAACM,qBAAqB,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC;EAEFF,IAAI,CAAC,qCAAqC,EAAE,MAAM;IAGhD,MAAMG,aAAa,GAAGC,MAAM,CAACC,OAAO;IACpCD,MAAM,CAACC,OAAO,mCACTF,aAAa;MAChBG,KAAK,EAAGC,OAAe,IAAK;QAC1B,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC;MAC1B;IAAC,EACF;IAED,MAAMX,QAAQ,GAAGb,IAAI,CAACC,EAAE,EAAE;IAE1BT,cAAc,CAACkC,cAAc,CAC3B,oBAAC,eAAe,QACd,oBAAC,eAAe;MAAC,QAAQ,EAAEb;IAAS,EAAG,CACvB,CACnB;IAEDK,MAAM,CAACL,QAAQ,CAAC,CAACc,GAAG,CAACC,gBAAgB,EAAE;IAEvCP,MAAM,CAACC,OAAO,GAAGF,aAAa;EAChC,CAAC,CAAC;AACJ,CAAC,CAAC"}