{"version":3,"file":"useSyncedState.js","names":["useRef","useEffect","useState","useSyncedState","prop","state","setState","isMountedRef","current"],"sources":["../../../src/utils/useSyncedState.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Dispatch, SetStateAction } from 'react'\nimport { useRef, useEffect, useState } from 'react'\n\n/**\n * A version of useState that is synced with a prop\n * @param prop The prop to sync state to\n * @returns the current state value\n */\nexport const useSyncedState = <S>(\n  prop: S\n): [S, Dispatch<SetStateAction<S>>] => {\n  const [state, setState] = useState(prop)\n  const isMountedRef = useRef(false)\n  useEffect(() => {\n    if (isMountedRef.current) {\n      setState(prop)\n    }\n    isMountedRef.current = true\n  }, [prop])\n  return [state, setState]\n}\n"],"mappings":";;AAMA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAOnD,OAAO,MAAMC,cAAc,GACzBC,IAAO,IAC8B;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACE,IAAI,CAAC;EACxC,MAAMG,YAAY,GAAGP,MAAM,CAAC,KAAK,CAAC;EAClCC,SAAS,CAAC,MAAM;IACd,IAAIM,YAAY,CAACC,OAAO,EAAE;MACxBF,QAAQ,CAACF,IAAI,CAAC;IAChB;IACAG,YAAY,CAACC,OAAO,GAAG,IAAI;EAC7B,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EACV,OAAO,CAACC,KAAK,EAAEC,QAAQ,CAAC;AAC1B,CAAC"}