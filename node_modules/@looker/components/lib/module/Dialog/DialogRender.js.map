{"version":3,"file":"DialogRender.js","names":["React","isValidElement","cloneElement","isRenderProp","children","DialogRender","dialog","domProps","undefined","console","warn"],"sources":["../../../src/Dialog/DialogRender.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ReactNode } from 'react'\nimport React, { isValidElement, cloneElement } from 'react'\nimport type { UseDialogResponse, UseDialogResponseDom } from './useDialog'\n\nexport type DialogRenderProp = (props: UseDialogResponseDom) => ReactNode\n\nconst isRenderProp = (\n  children: ReactNode | DialogRenderProp\n): children is DialogRenderProp => typeof children === 'function'\n\ntype DialogRenderProps = UseDialogResponse & {\n  children?: ReactNode\n}\n\nexport const DialogRender = ({\n  children,\n  dialog,\n  domProps,\n}: DialogRenderProps) => {\n  if (children === undefined) {\n    return <>{dialog}</>\n  } else if (isValidElement(children)) {\n    children = cloneElement(children, {\n      ...domProps,\n    })\n  } else if (isRenderProp(children)) {\n    children = children(domProps)\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Element \"${typeof children}\" can't be used as target for Drawer`\n    )\n  }\n\n  return (\n    <>\n      {dialog}\n      {children}\n    </>\n  )\n}\n"],"mappings":";;;;AAMA,OAAOA,KAAK,IAAIC,cAAc,EAAEC,YAAY,QAAQ,OAAO;AAK3D,MAAMC,YAAY,GAChBC,QAAsC,IACL,OAAOA,QAAQ,KAAK,UAAU;AAMjE,OAAO,MAAMC,YAAY,GAAG,CAAC;EAC3BD,QAAQ;EACRE,MAAM;EACNC;AACiB,CAAC,KAAK;EACvB,IAAIH,QAAQ,KAAKI,SAAS,EAAE;IAC1B,OAAO,0CAAGF,MAAM,CAAI;EACtB,CAAC,MAAM,IAAIL,cAAc,CAACG,QAAQ,CAAC,EAAE;IACnCA,QAAQ,GAAGF,YAAY,CAACE,QAAQ,oBAC3BG,QAAQ,EACX;EACJ,CAAC,MAAM,IAAIJ,YAAY,CAACC,QAAQ,CAAC,EAAE;IACjCA,QAAQ,GAAGA,QAAQ,CAACG,QAAQ,CAAC;EAC/B,CAAC,MAAM;IAELE,OAAO,CAACC,IAAI,CACT,YAAW,OAAON,QAAS,sCAAqC,CAClE;EACH;EAEA,OACE,0CACGE,MAAM,EACNF,QAAQ,CACR;AAEP,CAAC"}