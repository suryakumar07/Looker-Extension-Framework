{"version":3,"file":"ReplaceText.spec.js","names":["React","screen","renderWithTheme","Basic","CustomReplace","describe","test","getAllByText","forEach","element","expect","toHaveStyle","container","toMatchInlineSnapshot"],"sources":["../../../src/ReplaceText/ReplaceText.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { screen } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport Basic from './stories/Basic'\nimport CustomReplace from './stories/CustomReplace'\n\ndescribe('ReplaceText', () => {\n  test('globally replaces a case-insensitive string with higlighted text', () => {\n    renderWithTheme(<Basic />)\n    screen.getAllByText(/che/i).forEach(element => {\n      expect(element).toHaveStyle(\n        'font-weight: 600; text-decoration: underline'\n      )\n    })\n  })\n\n  test('accepts custom replace component', () => {\n    const { container } = renderWithTheme(<CustomReplace />)\n    expect(container).toMatchInlineSnapshot(`\n      <div>\n        <em>\n          Che\n        </em>\n        ddar \n        <em>\n          che\n        </em>\n        ese\n      </div>\n    `)\n  })\n})\n"],"mappings":";;AAKA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,aAAa,MAAM,yBAAyB;AAEnDC,QAAQ,CAAC,aAAa,EAAE,MAAM;EAC5BC,IAAI,CAAC,kEAAkE,EAAE,MAAM;IAC7EJ,eAAe,CAAC,oBAAC,KAAK,OAAG,CAAC;IAC1BD,MAAM,CAACM,YAAY,CAAC,MAAM,CAAC,CAACC,OAAO,CAACC,OAAO,IAAI;MAC7CC,MAAM,CAACD,OAAO,CAAC,CAACE,WAAW,CACzB,8CAA8C,CAC/C;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFL,IAAI,CAAC,kCAAkC,EAAE,MAAM;IAC7C,MAAM;MAAEM;IAAU,CAAC,GAAGV,eAAe,CAAC,oBAAC,aAAa,OAAG,CAAC;IACxDQ,MAAM,CAACE,SAAS,CAAC,CAACC,qBAAqB,CAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}