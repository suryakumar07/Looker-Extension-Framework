{"version":3,"file":"NavTreeItem.spec.js","names":["React","renderWithTheme","screen","NavTreeItem","describe","test","nestedLink","getByRole","expect","nodeName","toBe","toHaveAttribute"],"sources":["../../../../src/NavTree/NavTreeItem/NavTreeItem.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { screen } from '@testing-library/react'\nimport { NavTreeItem } from './NavTreeItem'\n\ndescribe('NavTreeItem', () => {\n  test('renders as a link when an href is passed in and disperses link-related props onto nested <a>', () => {\n    renderWithTheme(\n      <NavTreeItem href=\"https://google.com\" target=\"_blank\" rel=\"hello\">\n        Link\n      </NavTreeItem>\n    )\n\n    const nestedLink = screen.getByRole('treeitem')\n    expect(nestedLink.nodeName).toBe('A')\n    expect(nestedLink).toHaveAttribute('href', 'https://google.com')\n    expect(nestedLink).toHaveAttribute('target', '_blank')\n\n    // Note: We expect links with target=\"_blank\" to have \"noopener noreferrer\" autoappended to their rel prop\n    expect(nestedLink).toHaveAttribute('rel', 'hello noopener noreferrer')\n  })\n\n  test('has rel=\"noopener noreferrer\" when it has target=\"_blank\" and no passed-in rel prop value', () => {\n    renderWithTheme(\n      <NavTreeItem itemRole=\"link\" href=\"https://google.com\" target=\"_blank\">\n        Link\n      </NavTreeItem>\n    )\n\n    const nestedLink = screen.getByRole('treeitem')\n\n    expect(nestedLink).toHaveAttribute('target', '_blank')\n    expect(nestedLink).toHaveAttribute('href', 'https://google.com')\n    expect(nestedLink).toHaveAttribute('rel', 'noopener noreferrer')\n  })\n\n  test('does not auto append \"noopener noreferrer\" to link without target=\"_blank\"', () => {\n    renderWithTheme(\n      <NavTreeItem itemRole=\"link\" rel=\"nogouda\" href=\"https://google.com\">\n        Link\n      </NavTreeItem>\n    )\n\n    const nestedLink = screen.getByRole('treeitem')\n\n    expect(nestedLink).toHaveAttribute('href', 'https://google.com')\n    expect(nestedLink).toHaveAttribute('rel', 'nogouda')\n  })\n})\n"],"mappings":";;AAKA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,WAAW,QAAQ,eAAe;AAE3CC,QAAQ,CAAC,aAAa,EAAE,MAAM;EAC5BC,IAAI,CAAC,8FAA8F,EAAE,MAAM;IACzGJ,eAAe,CACb,oBAAC,WAAW;MAAC,IAAI,EAAC,oBAAoB;MAAC,MAAM,EAAC,QAAQ;MAAC,GAAG,EAAC;IAAO,UAEpD,CACf;IAED,MAAMK,UAAU,GAAGJ,MAAM,CAACK,SAAS,CAAC,UAAU,CAAC;IAC/CC,MAAM,CAACF,UAAU,CAACG,QAAQ,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IACrCF,MAAM,CAACF,UAAU,CAAC,CAACK,eAAe,CAAC,MAAM,EAAE,oBAAoB,CAAC;IAChEH,MAAM,CAACF,UAAU,CAAC,CAACK,eAAe,CAAC,QAAQ,EAAE,QAAQ,CAAC;;IAGtDH,MAAM,CAACF,UAAU,CAAC,CAACK,eAAe,CAAC,KAAK,EAAE,2BAA2B,CAAC;EACxE,CAAC,CAAC;EAEFN,IAAI,CAAC,2FAA2F,EAAE,MAAM;IACtGJ,eAAe,CACb,oBAAC,WAAW;MAAC,QAAQ,EAAC,MAAM;MAAC,IAAI,EAAC,oBAAoB;MAAC,MAAM,EAAC;IAAQ,UAExD,CACf;IAED,MAAMK,UAAU,GAAGJ,MAAM,CAACK,SAAS,CAAC,UAAU,CAAC;IAE/CC,MAAM,CAACF,UAAU,CAAC,CAACK,eAAe,CAAC,QAAQ,EAAE,QAAQ,CAAC;IACtDH,MAAM,CAACF,UAAU,CAAC,CAACK,eAAe,CAAC,MAAM,EAAE,oBAAoB,CAAC;IAChEH,MAAM,CAACF,UAAU,CAAC,CAACK,eAAe,CAAC,KAAK,EAAE,qBAAqB,CAAC;EAClE,CAAC,CAAC;EAEFN,IAAI,CAAC,4EAA4E,EAAE,MAAM;IACvFJ,eAAe,CACb,oBAAC,WAAW;MAAC,QAAQ,EAAC,MAAM;MAAC,GAAG,EAAC,SAAS;MAAC,IAAI,EAAC;IAAoB,UAEtD,CACf;IAED,MAAMK,UAAU,GAAGJ,MAAM,CAACK,SAAS,CAAC,UAAU,CAAC;IAE/CC,MAAM,CAACF,UAAU,CAAC,CAACK,eAAe,CAAC,MAAM,EAAE,oBAAoB,CAAC;IAChEH,MAAM,CAACF,UAAU,CAAC,CAACK,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC;EACtD,CAAC,CAAC;AACJ,CAAC,CAAC"}