{"version":3,"file":"types.js","names":[],"sources":["../../../src/Accordion2/types.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ReactNode } from 'react'\nimport type { CompatibleHTMLProps, DensityProp } from '@looker/design-tokens'\nimport type { IconType } from '../Icon'\nimport type { GenericClickProps } from '../utils'\nimport type { ControlledOrUncontrolled } from './controlTypes'\n\nexport type AccordionIndicatorIcons = {\n  close: IconType\n  open: IconType\n}\nexport type AccordionIndicatorPosition = 'left' | 'right'\n\nexport type Accordion2Props = ControlledOrUncontrolled &\n  AccordionIndicatorProps &\n  GenericClickProps<HTMLElement> & {\n    /**\n     * label will act as the \"trigger\" element (i.e. label is always visible, clicking toggles whether children is visible or not)\n     */\n    label: ReactNode\n    /**\n     * A unique ID primarily used to supply aria-controls and aria-labelledby to child AccordionDisclosure and child AccordionContent\n     * Note: This will be auto-generated if left undefined\n     */\n    id?: string\n  }\n\nexport type AccordionIndicatorProps = Omit<\n  CompatibleHTMLProps<HTMLDivElement>,\n  'content'\n> &\n  DensityProp & {\n    /**\n     * Icons for disclosure indicator.\n     *\n     * indicatorPosition === default / 'right' will default to `ExpandMore` / `ExpandLess`\n     * indicatorPosition === 'left' will default to `ArrowRight` / `ArrowDropDown`\n     */\n    indicatorIcons?: AccordionIndicatorIcons\n\n    /**\n     * Determines where the disclosure indicator will sit on\n     * @default right\n     */\n    indicatorPosition?: AccordionIndicatorPosition\n  }\n"],"mappings":""}