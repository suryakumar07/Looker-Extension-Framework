{"version":3,"file":"Aside.js","names":["React","forwardRef","shouldForwardProp","styled","OverflowShadow","useOverflow","commonLayoutCSS","asideWidth","AsideLayout","forwardedRef","collapse","children","props","hasOverflow","ref","displayName","Aside","withConfig","prop","attrs","width","scrollWithin"],"sources":["../../../../../src/Layout/Semantics/Aside/Aside.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport type {\n  CompatibleHTMLProps,\n  ResponsiveValue,\n} from '@looker/design-tokens'\nimport { shouldForwardProp } from '@looker/design-tokens'\nimport styled from 'styled-components'\nimport { OverflowShadow, useOverflow } from '../../../utils'\nimport type { CommonLayoutProps } from '../../utils/common'\nimport { commonLayoutCSS } from '../../utils/common'\nimport type { AsideSizeRamp } from './asideWidth'\nimport { asideWidth } from './asideWidth'\n\nexport type AsideProps = CommonLayoutProps &\n  CompatibleHTMLProps<HTMLElement> & {\n    /**\n     * Prevent `Aside` from being rendered.\n     * @default false\n     */\n    collapse?: boolean\n    /**\n     * To be used within the context of `<Page fixed>` container.\n     * When true, this removes the inner overflow-y scrolling\n     * and allows content within a Layout group to scroll together.\n     * @default false\n     */\n    scrollWithin?: boolean\n    /**\n     * Specify width of aside\n     * @default sidebar\n     */\n    width?: ResponsiveValue<AsideSizeRamp | string>\n  }\n\nconst AsideLayout = forwardRef(\n  (\n    { collapse, children, ...props }: AsideProps,\n    forwardedRef: Ref<HTMLDivElement>\n  ) => {\n    const [hasOverflow, ref] = useOverflow(forwardedRef)\n\n    return collapse ? null : (\n      <OverflowShadow as=\"aside\" hasOverflow={hasOverflow} ref={ref} {...props}>\n        {children}\n      </OverflowShadow>\n    )\n  }\n)\n\nAsideLayout.displayName = 'AsideLayout'\n\nexport const Aside = styled(AsideLayout)\n  .withConfig<AsideProps>({\n    shouldForwardProp: prop => prop === 'collapse' || shouldForwardProp(prop),\n  })\n  .attrs<AsideProps>(({ width = 'sidebar' }) => ({\n    width,\n  }))<AsideProps>`\n${commonLayoutCSS}\n\nflex: 0 0 ${({ width }) => width};\nmax-width: ${({ width }) => width};\nmin-width: ${({ width }) => width};\noverflow: auto;\nwidth: 0;\n${({ scrollWithin }) => scrollWithin && 'height: fit-content;'}\n\n${asideWidth}`\n"],"mappings":";;;;;;AAMA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAKzC,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,EAAEC,WAAW,QAAQ,gBAAgB;AAE5D,SAASC,eAAe,QAAQ,oBAAoB;AAEpD,SAASC,UAAU,QAAQ,cAAc;AAuBzC,MAAMC,WAAW,GAAGP,UAAU,CAC5B,OAEEQ,YAAiC,KAC9B;EAAA,IAFH;MAAEC,QAAQ;MAAEC;IAA+B,CAAC;IAAnBC,KAAK;EAG9B,MAAM,CAACC,WAAW,EAAEC,GAAG,CAAC,GAAGT,WAAW,CAACI,YAAY,CAAC;EAEpD,OAAOC,QAAQ,GAAG,IAAI,GACpB,oBAAC,cAAc;IAAC,EAAE,EAAC,OAAO;IAAC,WAAW,EAAEG,WAAY;IAAC,GAAG,EAAEC;EAAI,GAAKF,KAAK,GACrED,QAAQ,CAEZ;AACH,CAAC,CACF;AAEDH,WAAW,CAACO,WAAW,GAAG,aAAa;AAEvC,OAAO,MAAMC,KAAK,GAAGb,MAAM,CAACK,WAAW,CAAC,CACrCS,UAAU,CAAa;EACtBf,iBAAiB,EAAEgB,IAAI,IAAIA,IAAI,KAAK,UAAU,IAAIhB,iBAAiB,CAACgB,IAAI,CAAC;EAAA;EAAA;AAC3E,CAAC,CAAC,CACDC,KAAK,CAAa,CAAC;EAAEC,KAAK,EAALA,MAAK,GAAG;AAAU,CAAC,MAAM;EAC7CA,KAAK,EAALA;AACF,CAAC,CAAC,CAAC,cAAa;AAClB,GAAkB;AAClB;AACA,YAAU,CAAuB;AACjC,aAAW,CAAuB;AAClC,aAAW,CAAuB;AAClC;AACA;AACA,GAA+D;AAC/D;AACA,GAAa,KATXd,eAAe,EAEL,CAAC;EAAEc;AAAM,CAAC,KAAKA,KAAK,EACnB,CAAC;EAAEA;AAAM,CAAC,KAAKA,KAAK,EACpB,CAAC;EAAEA;AAAM,CAAC,KAAKA,KAAK,EAG/B,CAAC;EAAEC;AAAa,CAAC,KAAKA,YAAY,IAAI,sBAAsB,EAE5Dd,UAAU,CAAE"}