{"version":3,"file":"Panel.js","names":["React","isValidElement","cloneElement","usePanel","isRenderProp","children","Panel","content","props","domProps","panel","console","warn"],"sources":["../../../src/Panel/Panel.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ReactNode } from 'react'\nimport React, { isValidElement, cloneElement } from 'react'\nimport type { PanelProps, PanelRenderProp } from './types'\nimport { usePanel } from './usePanel'\n\nconst isRenderProp = (\n  children: ReactNode | PanelRenderProp\n): children is PanelRenderProp => typeof children === 'function'\n\nexport const Panel = ({ children, content, ...props }: PanelProps) => {\n  const { domProps, panel } = usePanel({ content, ...props })\n\n  if (isValidElement(children)) {\n    children = cloneElement(children, {\n      ...domProps,\n    })\n  } else if (isRenderProp(children)) {\n    children = children(domProps)\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Element \"${typeof children}\" can't be used as target for Panel`\n    )\n  }\n\n  return (\n    <>\n      {children}\n      {panel}\n    </>\n  )\n}\n"],"mappings":";;;;;;AAMA,OAAOA,KAAK,IAAIC,cAAc,EAAEC,YAAY,QAAQ,OAAO;AAE3D,SAASC,QAAQ,QAAQ,YAAY;AAErC,MAAMC,YAAY,GAChBC,QAAqC,IACL,OAAOA,QAAQ,KAAK,UAAU;AAEhE,OAAO,MAAMC,KAAK,GAAG,QAAiD;EAAA,IAAhD;MAAED,QAAQ;MAAEE;IAA8B,CAAC;IAAnBC,KAAK;EACjD,MAAM;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGP,QAAQ;IAAGI;EAAO,GAAKC,KAAK,EAAG;EAE3D,IAAIP,cAAc,CAACI,QAAQ,CAAC,EAAE;IAC5BA,QAAQ,GAAGH,YAAY,CAACG,QAAQ,oBAC3BI,QAAQ,EACX;EACJ,CAAC,MAAM,IAAIL,YAAY,CAACC,QAAQ,CAAC,EAAE;IACjCA,QAAQ,GAAGA,QAAQ,CAACI,QAAQ,CAAC;EAC/B,CAAC,MAAM;IAELE,OAAO,CAACC,IAAI,CACT,YAAW,OAAOP,QAAS,qCAAoC,CACjE;EACH;EAEA,OACE,0CACGA,QAAQ,EACRK,KAAK,CACL;AAEP,CAAC"}