{"version":3,"file":"CopyToClipboard.js","names":["React","useState","MaterialIcons","MultiFunctionButton","Button","ButtonTransparent","CopyToClipboard","change","setChange","handleSwap","setTimeout","alternateCopyButton"],"sources":["../../../../../src/Button/stories/MultiFunctionButton/CopyToClipboard.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React, { useState } from 'react'\nimport * as MaterialIcons from '@styled-icons/material'\nimport { MultiFunctionButton, Button, ButtonTransparent } from '../..'\n\nexport default function CopyToClipboard() {\n  const [change, setChange] = useState(false)\n\n  const handleSwap = () => {\n    setChange(true)\n    setTimeout(() => setChange(false), 2500)\n  }\n\n  const alternateCopyButton = (\n    <ButtonTransparent\n      iconBefore={<MaterialIcons.Check />}\n      size=\"large\"\n      width={300} // arbitrary size to prevent image snapshot \"jitter\"\n    >\n      Copied!\n    </ButtonTransparent>\n  )\n\n  return (\n    <MultiFunctionButton alternate={alternateCopyButton} swap={change}>\n      <Button onClick={handleSwap}>Copy to Clipboard</Button>\n    </MultiFunctionButton>\n  )\n}\n"],"mappings":";AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,aAAa,MAAM,wBAAwB;AACvD,SAASC,mBAAmB,EAAEC,MAAM,EAAEC,iBAAiB,QAAQ,OAAO;AAEtE,eAAe,SAASC,eAAe,GAAG;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMQ,UAAU,GAAG,MAAM;IACvBD,SAAS,CAAC,IAAI,CAAC;IACfE,UAAU,CAAC,MAAMF,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC1C,CAAC;EAED,MAAMG,mBAAmB,GACvB,oBAAC,iBAAiB;IAChB,UAAU,EAAE,oBAAC,aAAa,CAAC,KAAK,OAAI;IACpC,IAAI,EAAC,OAAO;IACZ,KAAK,EAAE;EAAI,aAId;EAED,OACE,oBAAC,mBAAmB;IAAC,SAAS,EAAEA,mBAAoB;IAAC,IAAI,EAAEJ;EAAO,GAChE,oBAAC,MAAM;IAAC,OAAO,EAAEE;EAAW,uBAA2B,CACnC;AAE1B"}