{"version":3,"file":"useRippleStateBG.js","names":["useCallback","useReducer","reducer","state","action","type","useRippleStateBG","dispatch","className","end","start"],"sources":["../../../src/Ripple/useRippleStateBG.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Reducer } from 'react'\nimport { useCallback, useReducer } from 'react'\n\nexport interface RippleActionBG {\n  type: 'START' | 'END'\n}\n\nexport type RippleStateBG = 'ON' | 'DOUBLE_ON' | 'OFF'\n\nconst reducer: Reducer<RippleStateBG, RippleActionBG> = (state, action) => {\n  switch (action.type) {\n    // 'DOUBLE_ON' allows detection of \"hover & focus\" state\n    // background should only turn off when hovered out AND blurred\n    case 'START':\n      return state === 'ON' ? 'DOUBLE_ON' : 'ON'\n    case 'END':\n      return state === 'DOUBLE_ON' ? 'ON' : 'OFF'\n  }\n}\n\nexport const useRippleStateBG = () => {\n  const [state, dispatch] = useReducer(reducer, 'OFF')\n  return {\n    className: state === 'OFF' ? '' : 'bg-on',\n    end: useCallback(() => {\n      dispatch({ type: 'END' })\n    }, []),\n    start: useCallback(() => {\n      dispatch({ type: 'START' })\n    }, []),\n  }\n}\n"],"mappings":";;AAMA,SAASA,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAQ/C,MAAMC,OAA+C,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACzE,QAAQA,MAAM,CAACC,IAAI;IAGjB,KAAK,OAAO;MACV,OAAOF,KAAK,KAAK,IAAI,GAAG,WAAW,GAAG,IAAI;IAC5C,KAAK,KAAK;MACR,OAAOA,KAAK,KAAK,WAAW,GAAG,IAAI,GAAG,KAAK;EAAA;AAEjD,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAG,MAAM;EACpC,MAAM,CAACH,KAAK,EAAEI,QAAQ,CAAC,GAAGN,UAAU,CAACC,OAAO,EAAE,KAAK,CAAC;EACpD,OAAO;IACLM,SAAS,EAAEL,KAAK,KAAK,KAAK,GAAG,EAAE,GAAG,OAAO;IACzCM,GAAG,EAAET,WAAW,CAAC,MAAM;MACrBO,QAAQ,CAAC;QAAEF,IAAI,EAAE;MAAM,CAAC,CAAC;IAC3B,CAAC,EAAE,EAAE,CAAC;IACNK,KAAK,EAAEV,WAAW,CAAC,MAAM;MACvBO,QAAQ,CAAC;QAAEF,IAAI,EAAE;MAAQ,CAAC,CAAC;IAC7B,CAAC,EAAE,EAAE;EACP,CAAC;AACH,CAAC"}