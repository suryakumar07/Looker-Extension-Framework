{"version":3,"file":"DividerVertical.spec.js","names":["React","screen","renderWithTheme","DividerVertical","test","divider","getByRole","expect","toBeInTheDocument","toHaveAttribute","toHaveStyle","height"],"sources":["../../../src/Divider/DividerVertical.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport 'jest-styled-components'\nimport React from 'react'\nimport { screen } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { DividerVertical } from './DividerVertical'\n\ntest('render Default DividerVertical', () => {\n  renderWithTheme(<DividerVertical />)\n  const divider = screen.getByRole('separator')\n  expect(divider).toBeInTheDocument()\n  expect(divider).toHaveAttribute('aria-orientation', 'vertical')\n})\n\n// CSS libraries like bootstrap may override hr { height }, causing our divider\n// to not be visible. In order to be defensive against this, we set this to\n// inherit.\ntest('overrides global height declarations when stretching', () => {\n  renderWithTheme(<DividerVertical stretch />)\n  expect(screen.getByRole('separator')).toHaveStyle({ height: 'inherit' })\n})\n"],"mappings":";;AAKA,OAAO,wBAAwB;AAC/B,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,eAAe,QAAQ,mBAAmB;AAEnDC,IAAI,CAAC,gCAAgC,EAAE,MAAM;EAC3CF,eAAe,CAAC,oBAAC,eAAe,OAAG,CAAC;EACpC,MAAMG,OAAO,GAAGJ,MAAM,CAACK,SAAS,CAAC,WAAW,CAAC;EAC7CC,MAAM,CAACF,OAAO,CAAC,CAACG,iBAAiB,EAAE;EACnCD,MAAM,CAACF,OAAO,CAAC,CAACI,eAAe,CAAC,kBAAkB,EAAE,UAAU,CAAC;AACjE,CAAC,CAAC;;AAKFL,IAAI,CAAC,sDAAsD,EAAE,MAAM;EACjEF,eAAe,CAAC,oBAAC,eAAe;IAAC,OAAO;EAAA,EAAG,CAAC;EAC5CK,MAAM,CAACN,MAAM,CAACK,SAAS,CAAC,WAAW,CAAC,CAAC,CAACI,WAAW,CAAC;IAAEC,MAAM,EAAE;EAAU,CAAC,CAAC;AAC1E,CAAC,CAAC"}