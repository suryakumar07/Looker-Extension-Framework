{"version":3,"file":"DividerVertical.js","names":["styled","space","DividerBase","DividerVertical","attrs","props","height","stretch","console","warn","mx","my","size"],"sources":["../../../src/Divider/DividerVertical.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport styled from 'styled-components'\nimport { space } from '@looker/design-tokens'\nimport type { DividerProps } from './Divider'\nimport { DividerBase } from './Divider'\n\nexport interface DividerVerticalProps extends DividerProps {\n  height?: number | string\n  stretch?: boolean\n}\n\nexport const DividerVertical = styled(DividerBase).attrs<DividerVerticalProps>(\n  props => {\n    if (props.height && props.stretch) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'When using DividerVertical, the props height and stretch are incompatible. The stretch value will be discarded'\n      )\n    }\n\n    const { height = '1rem', mx = 'xsmall', my = 'xsmall' } = props\n\n    return {\n      ...props,\n      'aria-orientation': 'vertical',\n      height,\n      mx,\n      my,\n    }\n  }\n)<DividerVerticalProps>`\n  ${space}\n  display: inline-block;\n  width: ${({ size }) => size};\n  ${({ height, stretch }) =>\n    stretch ? `align-self: stretch; height: inherit;` : `height: ${height};`}\n`\n"],"mappings":";;;;;;AAKA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,KAAK,QAAQ,uBAAuB;AAE7C,SAASC,WAAW,QAAQ,WAAW;AAOvC,OAAO,MAAMC,eAAe,GAAGH,MAAM,CAACE,WAAW,CAAC,CAACE,KAAK,CACtDC,KAAK,IAAI;EACP,IAAIA,KAAK,CAACC,MAAM,IAAID,KAAK,CAACE,OAAO,EAAE;IAEjCC,OAAO,CAACC,IAAI,CACV,gHAAgH,CACjH;EACH;EAEA,MAAM;IAAEH,MAAM,GAAG,MAAM;IAAEI,EAAE,GAAG,QAAQ;IAAEC,EAAE,GAAG;EAAS,CAAC,GAAGN,KAAK;EAE/D,uCACKA,KAAK;IACR,kBAAkB,EAAE,UAAU;IAC9BC,MAAM;IACNI,EAAE;IACFC;EAAE;AAEN,CAAC,CACF;EAAA;EAAA;AAAA,gBAAuB;AACxB,IAAE,CAAQ;AACV;AACA,WAAS,CAAqB;AAC9B,IAAE,CAC2E;AAC7E,IALIV,KAAK,EAEE,CAAC;EAAEW;AAAK,CAAC,KAAKA,IAAI,EACzB,CAAC;EAAEN,MAAM;EAAEC;AAAQ,CAAC,KACpBA,OAAO,GAAI,uCAAsC,GAAI,WAAUD,MAAO,GAAE,CAC3E"}