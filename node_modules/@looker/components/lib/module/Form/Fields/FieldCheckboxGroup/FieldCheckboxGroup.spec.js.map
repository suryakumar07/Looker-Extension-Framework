{"version":3,"file":"FieldCheckboxGroup.spec.js","names":["React","fireEvent","screen","renderWithTheme","map","fieldOptions","FieldCheckboxGroup","fieldCheckboxProps","defaultValue","id","name","options","test","extractCheckboxFromDomList","list","getElementsByTagName","el","textContent","renderListContent","getByTestId","view","expect","toEqual","handleChange","jest","fn","Cheddar","getByLabelText","Gouda","click","toHaveBeenCalledWith"],"sources":["../../../../../src/Form/Fields/FieldCheckboxGroup/FieldCheckboxGroup.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport 'jest-styled-components'\nimport React from 'react'\nimport { fireEvent, screen } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport map from 'lodash/map'\nimport { fieldOptions } from '../../../fixtures/CheckboxRadio'\nimport { FieldCheckboxGroup } from './FieldCheckboxGroup'\n\nconst fieldCheckboxProps = {\n  defaultValue: ['swiss', 'cheddar'],\n  id: '1',\n  name: 'group1',\n  options: fieldOptions,\n}\n\ntest('FieldCheckboxGroup render a list of checkbox', () => {\n  const extractCheckboxFromDomList = (list: HTMLElement) => {\n    const options = list.getElementsByTagName('label')\n    return map(options, (el: HTMLElement) => {\n      return el.textContent\n    })\n  }\n\n  const renderListContent = () => {\n    renderWithTheme(<FieldCheckboxGroup {...fieldCheckboxProps} />)\n    return screen.getByTestId('checkbox-list')\n  }\n\n  const view = renderListContent()\n  expect(extractCheckboxFromDomList(view)).toEqual([\n    'Cheddar',\n    'Gouda',\n    'Swiss',\n    'Roquefort',\n  ])\n})\n\ntest('FieldCheckboxGroup checkbox onChange is working as expected', () => {\n  const handleChange = jest.fn()\n\n  renderWithTheme(\n    <FieldCheckboxGroup\n      {...fieldCheckboxProps}\n      defaultValue={[]}\n      onChange={handleChange}\n    />\n  )\n  const Cheddar = screen.getByLabelText('Cheddar')\n  const Gouda = screen.getByLabelText('Gouda')\n\n  fireEvent.click(Cheddar)\n\n  expect(handleChange).toHaveBeenCalledWith(['cheddar'])\n\n  fireEvent.click(Gouda)\n\n  expect(handleChange).toHaveBeenCalledWith(['cheddar', 'gouda'])\n})\n"],"mappings":";AAIA,OAAO,wBAAwB;AAC/B,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,MAAM,QAAQ,wBAAwB;AAC1D,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,SAASC,kBAAkB,QAAQ,sBAAsB;AAEzD,MAAMC,kBAAkB,GAAG;EACzBC,YAAY,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC;EAClCC,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAEN;AACX,CAAC;AAEDO,IAAI,CAAC,8CAA8C,EAAE,MAAM;EACzD,MAAMC,0BAA0B,GAAIC,IAAiB,IAAK;IACxD,MAAMH,OAAO,GAAGG,IAAI,CAACC,oBAAoB,CAAC,OAAO,CAAC;IAClD,OAAOX,GAAG,CAACO,OAAO,EAAGK,EAAe,IAAK;MACvC,OAAOA,EAAE,CAACC,WAAW;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAM;IAC9Bf,eAAe,CAAC,oBAAC,kBAAkB,EAAKI,kBAAkB,CAAI,CAAC;IAC/D,OAAOL,MAAM,CAACiB,WAAW,CAAC,eAAe,CAAC;EAC5C,CAAC;EAED,MAAMC,IAAI,GAAGF,iBAAiB,EAAE;EAChCG,MAAM,CAACR,0BAA0B,CAACO,IAAI,CAAC,CAAC,CAACE,OAAO,CAAC,CAC/C,SAAS,EACT,OAAO,EACP,OAAO,EACP,WAAW,CACZ,CAAC;AACJ,CAAC,CAAC;AAEFV,IAAI,CAAC,6DAA6D,EAAE,MAAM;EACxE,MAAMW,YAAY,GAAGC,IAAI,CAACC,EAAE,EAAE;EAE9BtB,eAAe,CACb,oBAAC,kBAAkB,eACbI,kBAAkB;IACtB,YAAY,EAAE,EAAG;IACjB,QAAQ,EAAEgB;EAAa,GACvB,CACH;EACD,MAAMG,OAAO,GAAGxB,MAAM,CAACyB,cAAc,CAAC,SAAS,CAAC;EAChD,MAAMC,KAAK,GAAG1B,MAAM,CAACyB,cAAc,CAAC,OAAO,CAAC;EAE5C1B,SAAS,CAAC4B,KAAK,CAACH,OAAO,CAAC;EAExBL,MAAM,CAACE,YAAY,CAAC,CAACO,oBAAoB,CAAC,CAAC,SAAS,CAAC,CAAC;EAEtD7B,SAAS,CAAC4B,KAAK,CAACD,KAAK,CAAC;EAEtBP,MAAM,CAACE,YAAY,CAAC,CAACO,oBAAoB,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACjE,CAAC,CAAC"}