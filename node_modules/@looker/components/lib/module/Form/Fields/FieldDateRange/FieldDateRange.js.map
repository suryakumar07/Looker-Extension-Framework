{"version":3,"file":"FieldDateRange.js","names":["React","forwardRef","styled","FloatingLabelField","omitFieldProps","pickFieldProps","useFormContext","useID","InputDateRange","checkValueOnBlur","e","inputs","Array","from","currentTarget","querySelectorAll","some","input","value","FieldDateRange","props","ref","validationMessage","id","onChange","type"],"sources":["../../../../../src/Form/Fields/FieldDateRange/FieldDateRange.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { FocusEvent, Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { FloatingLabelField } from '../Field/FloatingLabelField'\nimport { omitFieldProps, pickFieldProps } from '../Field/Field'\nimport { useFormContext } from '../../Form'\nimport { useID } from '../../../utils'\nimport type { InputDateRangeProps } from '../../Inputs/InputDateRange'\nimport { InputDateRange } from '../../Inputs/InputDateRange'\nimport type { FieldProps, FloatingLabelFieldProps } from '../Field'\n\nexport interface FieldInputDateRangeProps\n  extends FieldProps,\n    FloatingLabelFieldProps,\n    InputDateRangeProps {\n  ref: Ref<HTMLInputElement>\n}\n\nconst checkValueOnBlur = (e: FocusEvent) => {\n  const inputs = Array.from(e.currentTarget.querySelectorAll('input'))\n  // Check both inputs (to - from) for a value\n  return inputs.some(input => input.value !== '')\n}\n\nexport const FieldDateRange = styled(\n  forwardRef((props: FieldInputDateRangeProps, ref: Ref<HTMLInputElement>) => {\n    const validationMessage = useFormContext(props)\n    const id = useID(props.id)\n\n    return (\n      <FloatingLabelField\n        {...pickFieldProps(props)}\n        checkValueOnBlur={checkValueOnBlur}\n        hasValue={!!props.value}\n        id={id}\n        validationMessage={validationMessage}\n      >\n        <InputDateRange\n          {...omitFieldProps(props)}\n          aria-describedby={`describedby-${id}`}\n          aria-labelledby={`labelledby-${id}`}\n          id={id}\n          onChange={props.onChange}\n          value={props.value}\n          validationType={validationMessage && validationMessage.type}\n          ref={ref}\n        />\n      </FloatingLabelField>\n    )\n  })\n)``\n"],"mappings":";;;;AAMA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC/D,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,cAAc,QAAQ,6BAA6B;AAU5D,MAAMC,gBAAgB,GAAIC,CAAa,IAAK;EAC1C,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,aAAa,CAACC,gBAAgB,CAAC,OAAO,CAAC,CAAC;EAEpE,OAAOJ,MAAM,CAACK,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,EAAE,CAAC;AACjD,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGjB,MAAM,CAClCD,UAAU,CAAC,CAACmB,KAA+B,EAAEC,GAA0B,KAAK;EAC1E,MAAMC,iBAAiB,GAAGhB,cAAc,CAACc,KAAK,CAAC;EAC/C,MAAMG,EAAE,GAAGhB,KAAK,CAACa,KAAK,CAACG,EAAE,CAAC;EAE1B,OACE,oBAAC,kBAAkB,eACblB,cAAc,CAACe,KAAK,CAAC;IACzB,gBAAgB,EAAEX,gBAAiB;IACnC,QAAQ,EAAE,CAAC,CAACW,KAAK,CAACF,KAAM;IACxB,EAAE,EAAEK,EAAG;IACP,iBAAiB,EAAED;EAAkB,IAErC,oBAAC,cAAc,eACTlB,cAAc,CAACgB,KAAK,CAAC;IACzB,oBAAmB,eAAcG,EAAG,EAAE;IACtC,mBAAkB,cAAaA,EAAG,EAAE;IACpC,EAAE,EAAEA,EAAG;IACP,QAAQ,EAAEH,KAAK,CAACI,QAAS;IACzB,KAAK,EAAEJ,KAAK,CAACF,KAAM;IACnB,cAAc,EAAEI,iBAAiB,IAAIA,iBAAiB,CAACG,IAAK;IAC5D,GAAG,EAAEJ;EAAI,GACT,CACiB;AAEzB,CAAC,CAAC,CACH;EAAA;EAAA;AAAA,gBAAC,IAAC"}