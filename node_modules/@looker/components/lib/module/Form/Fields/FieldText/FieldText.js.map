{"version":3,"file":"FieldText.js","names":["React","forwardRef","useState","styled","useTheme","useID","useFormContext","InputText","InputTextContext","FloatingLabelField","omitFieldProps","pickFieldProps","getHasValue","FieldTextComponent","props","ref","id","validationMessage","space","beforeWidth","setBeforeWidth","labelOffset","iconBefore","u8","before","type","displayName","FieldText"],"sources":["../../../../../src/Form/Fields/FieldText/FieldText.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { useID } from '../../../utils'\nimport { useFormContext } from '../../Form'\nimport type { InputTextProps } from '../../Inputs/InputText'\nimport { InputText, InputTextContext } from '../../Inputs/InputText'\nimport type { FieldProps } from '../Field'\nimport { FloatingLabelField, omitFieldProps, pickFieldProps } from '../Field'\nimport { getHasValue } from '../Field/useFloatingLabel'\n\nexport interface FieldTextProps extends FieldProps, InputTextProps {}\n\nconst FieldTextComponent = forwardRef(\n  (props: FieldTextProps, ref: Ref<HTMLInputElement>) => {\n    const id = useID(props.id)\n    const validationMessage = useFormContext(props)\n    const { space } = useTheme()\n    const [beforeWidth, setBeforeWidth] = useState(0)\n    let labelOffset\n    if (props.iconBefore) {\n      labelOffset = space.u8\n    } else if (props.before) {\n      labelOffset = `${beforeWidth}px`\n    }\n\n    return (\n      <InputTextContext.Provider value={{ beforeWidth, setBeforeWidth }}>\n        <FloatingLabelField\n          id={id}\n          validationMessage={validationMessage}\n          hasValue={getHasValue(props)}\n          labelOffset={labelOffset}\n          {...pickFieldProps(props)}\n        >\n          <InputText\n            {...omitFieldProps(props)}\n            id={id}\n            aria-describedby={`describedby-${id}`}\n            validationType={validationMessage && validationMessage.type}\n            ref={ref}\n          />\n        </FloatingLabelField>\n      </InputTextContext.Provider>\n    )\n  }\n)\n\nFieldTextComponent.displayName = 'FieldTextComponent'\n\nexport const FieldText = styled(FieldTextComponent)``\n"],"mappings":";;;;AAMA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,MAAM,IAAIC,QAAQ,QAAQ,mBAAmB;AACpD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,cAAc,QAAQ,YAAY;AAE3C,SAASC,SAAS,EAAEC,gBAAgB,QAAQ,wBAAwB;AAEpE,SAASC,kBAAkB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,UAAU;AAC7E,SAASC,WAAW,QAAQ,2BAA2B;AAIvD,MAAMC,kBAAkB,GAAGZ,UAAU,CACnC,CAACa,KAAqB,EAAEC,GAA0B,KAAK;EACrD,MAAMC,EAAE,GAAGX,KAAK,CAACS,KAAK,CAACE,EAAE,CAAC;EAC1B,MAAMC,iBAAiB,GAAGX,cAAc,CAACQ,KAAK,CAAC;EAC/C,MAAM;IAAEI;EAAM,CAAC,GAAGd,QAAQ,EAAE;EAC5B,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjD,IAAImB,WAAW;EACf,IAAIP,KAAK,CAACQ,UAAU,EAAE;IACpBD,WAAW,GAAGH,KAAK,CAACK,EAAE;EACxB,CAAC,MAAM,IAAIT,KAAK,CAACU,MAAM,EAAE;IACvBH,WAAW,GAAI,GAAEF,WAAY,IAAG;EAClC;EAEA,OACE,oBAAC,gBAAgB,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEA,WAAW;MAAEC;IAAe;EAAE,GAChE,oBAAC,kBAAkB;IACjB,EAAE,EAAEJ,EAAG;IACP,iBAAiB,EAAEC,iBAAkB;IACrC,QAAQ,EAAEL,WAAW,CAACE,KAAK,CAAE;IAC7B,WAAW,EAAEO;EAAY,GACrBV,cAAc,CAACG,KAAK,CAAC,GAEzB,oBAAC,SAAS,eACJJ,cAAc,CAACI,KAAK,CAAC;IACzB,EAAE,EAAEE,EAAG;IACP,oBAAmB,eAAcA,EAAG,EAAE;IACtC,cAAc,EAAEC,iBAAiB,IAAIA,iBAAiB,CAACQ,IAAK;IAC5D,GAAG,EAAEV;EAAI,GACT,CACiB,CACK;AAEhC,CAAC,CACF;AAEDF,kBAAkB,CAACa,WAAW,GAAG,oBAAoB;AAErD,OAAO,MAAMC,SAAS,GAAGxB,MAAM,CAACU,kBAAkB,CAAC;EAAA;EAAA;AAAA,gBAAC,IAAC"}