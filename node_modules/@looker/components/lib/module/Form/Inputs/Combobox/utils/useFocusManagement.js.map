{"version":3,"file":"useFocusManagement.js","names":["useCallbackRef","useSafeLayoutEffect","ComboboxActionType","useFocusManagement","lastActionType","inputElement","inputCallbackRef","SELECT_WITH_CLICK","INTERACT","focus","scrollLeft"],"sources":["../../../../../../src/Form/Inputs/Combobox/utils/useFocusManagement.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useCallbackRef, useSafeLayoutEffect } from '../../../../utils'\nimport { ComboboxActionType } from './state'\n\n// Move focus back to the input if we start navigating w/ the\n// keyboard after focus has moved to any focus-able content in\n// the popup.\n\nexport function useFocusManagement(lastActionType?: ComboboxActionType) {\n  const [inputElement, inputCallbackRef] = useCallbackRef<HTMLInputElement>()\n  // useSafeLayoutEffect so that the cursor goes to the end of the input instead\n  // of awkwardly at the beginning, unclear to my why ...\n  useSafeLayoutEffect(() => {\n    if (\n      lastActionType === ComboboxActionType.SELECT_WITH_CLICK ||\n      lastActionType === ComboboxActionType.INTERACT\n    ) {\n      if (inputElement) {\n        inputElement.focus()\n        inputElement.scrollLeft = 0\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lastActionType])\n\n  return { inputCallbackRef, inputElement }\n}\n"],"mappings":";;AAKA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,mBAAmB;AACvE,SAASC,kBAAkB,QAAQ,SAAS;;AAM5C,OAAO,SAASC,kBAAkB,CAACC,cAAmC,EAAE;EACtE,MAAM,CAACC,YAAY,EAAEC,gBAAgB,CAAC,GAAGN,cAAc,EAAoB;EAG3EC,mBAAmB,CAAC,MAAM;IACxB,IACEG,cAAc,KAAKF,kBAAkB,CAACK,iBAAiB,IACvDH,cAAc,KAAKF,kBAAkB,CAACM,QAAQ,EAC9C;MACA,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACI,KAAK,EAAE;QACpBJ,YAAY,CAACK,UAAU,GAAG,CAAC;MAC7B;IACF;EAEF,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;EAEpB,OAAO;IAAEE,gBAAgB;IAAED;EAAa,CAAC;AAC3C"}