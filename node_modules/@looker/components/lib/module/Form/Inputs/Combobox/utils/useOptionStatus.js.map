{"version":3,"file":"useOptionStatus.js","names":["useContext","useOptionStatus","context","value","data","navigationOption","isActive","contextOption","option","contextOptions","options","isSelected","find","undefined"],"sources":["../../../../../../src/Form/Inputs/Combobox/utils/useOptionStatus.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Context } from 'react'\nimport { useContext } from 'react'\nimport type {\n  ComboboxContextProps,\n  ComboboxMultiContextProps,\n} from '../ComboboxContext'\nimport type { ComboboxOptionStatuses } from '../types'\nimport type { ComboboxData, ComboboxMultiData } from './state'\n\nexport function useOptionStatus<\n  CProps extends ComboboxContextProps | ComboboxMultiContextProps\n>(context: Context<CProps>, value: string): ComboboxOptionStatuses {\n  const { data } = useContext(context)\n  const { navigationOption } = data\n  const isActive = navigationOption ? navigationOption.value === value : false\n\n  const contextOption = (data as ComboboxData).option\n  const contextOptions = (data as ComboboxMultiData).options\n  const options = contextOption ? [contextOption] : contextOptions || []\n  const isSelected =\n    options.find(option => option.value === value) !== undefined\n\n  return {\n    isActive,\n    isSelected,\n  }\n}\n"],"mappings":";;AAMA,SAASA,UAAU,QAAQ,OAAO;AAQlC,OAAO,SAASC,eAAe,CAE7BC,OAAwB,EAAEC,KAAa,EAA0B;EACjE,MAAM;IAAEC;EAAK,CAAC,GAAGJ,UAAU,CAACE,OAAO,CAAC;EACpC,MAAM;IAAEG;EAAiB,CAAC,GAAGD,IAAI;EACjC,MAAME,QAAQ,GAAGD,gBAAgB,GAAGA,gBAAgB,CAACF,KAAK,KAAKA,KAAK,GAAG,KAAK;EAE5E,MAAMI,aAAa,GAAIH,IAAI,CAAkBI,MAAM;EACnD,MAAMC,cAAc,GAAIL,IAAI,CAAuBM,OAAO;EAC1D,MAAMA,OAAO,GAAGH,aAAa,GAAG,CAACA,aAAa,CAAC,GAAGE,cAAc,IAAI,EAAE;EACtE,MAAME,UAAU,GACdD,OAAO,CAACE,IAAI,CAACJ,MAAM,IAAIA,MAAM,CAACL,KAAK,KAAKA,KAAK,CAAC,KAAKU,SAAS;EAE9D,OAAO;IACLP,QAAQ;IACRK;EACF,CAAC;AACH"}