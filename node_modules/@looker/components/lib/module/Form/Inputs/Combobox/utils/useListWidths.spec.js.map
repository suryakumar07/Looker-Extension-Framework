{"version":3,"file":"useListWidths.spec.js","names":["React","screen","render","useListWidths","getBoundingClientRectMock","jest","fn","mockWrapper","getBoundingClientRect","TestComponent","props","minWidth","width","wrapperElement","describe","beforeEach","mockImplementation","afterEach","mockClear","test","expect","getByTestId","toHaveTextContent","not","toHaveBeenCalled","toHaveBeenCalledTimes"],"sources":["../../../../../../src/Form/Inputs/Combobox/utils/useListWidths.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { screen, render } from '@testing-library/react'\nimport type { UseListWidthProps } from './useListWidths'\nimport { useListWidths } from './useListWidths'\n\nconst getBoundingClientRectMock = jest.fn()\n\nconst mockWrapper = {\n  getBoundingClientRect: getBoundingClientRectMock,\n} as unknown as HTMLElement\n\nfunction TestComponent(props: UseListWidthProps) {\n  const { minWidth, width } = useListWidths({\n    ...props,\n    wrapperElement: mockWrapper,\n  })\n  return (\n    <div>\n      <span data-testid=\"minWidth\">{minWidth}</span>\n      <span data-testid=\"width\">{width}</span>\n    </div>\n  )\n}\n\ndescribe('useListWidths', () => {\n  beforeEach(() => {\n    getBoundingClientRectMock.mockImplementation(() => ({ width: 1234 }))\n  })\n  afterEach(() => {\n    getBoundingClientRectMock.mockClear()\n  })\n\n  test('getBoundingClientRect is not called when list is closed', () => {\n    render(<TestComponent />)\n    expect(screen.getByTestId('width')).toHaveTextContent('auto')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('')\n    expect(mockWrapper.getBoundingClientRect).not.toHaveBeenCalled()\n  })\n\n  test('getBoundingClientRect is not called when width prop is defined (except auto)', () => {\n    render(<TestComponent isVisible width=\"90vw\" />)\n    expect(screen.getByTestId('width')).toHaveTextContent('90vw')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('')\n    expect(mockWrapper.getBoundingClientRect).not.toHaveBeenCalled()\n  })\n\n  test('getBoundingClientRect is not called when width prop is auto and minWidth is defined', () => {\n    render(<TestComponent isVisible width=\"auto\" minWidth={101} />)\n    expect(screen.getByTestId('width')).toHaveTextContent('auto')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('101')\n    expect(mockWrapper.getBoundingClientRect).not.toHaveBeenCalled()\n  })\n\n  test('getBoundingClientRect is called when width prop is undefined', () => {\n    render(<TestComponent isVisible />)\n    expect(screen.getByTestId('width')).toHaveTextContent('1234')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('')\n    expect(mockWrapper.getBoundingClientRect).toHaveBeenCalledTimes(1)\n  })\n\n  test('getBoundingClientRect is called when width prop is auto', () => {\n    render(<TestComponent isVisible width=\"auto\" />)\n    expect(screen.getByTestId('width')).toHaveTextContent('auto')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('1234')\n    expect(mockWrapper.getBoundingClientRect).toHaveBeenCalledTimes(1)\n  })\n})\n"],"mappings":"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"}