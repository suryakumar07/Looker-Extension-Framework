{"version":3,"file":"InputChips.spec.js","names":["React","firePasteEvent","renderWithTheme","fireEvent","screen","parseOption","InputChips","describe","test","onChangeMock","jest","fn","input","getByPlaceholderText","change","target","value","expect","not","toHaveBeenCalled","keyDown","key","toHaveBeenCalledTimes","toHaveBeenCalledWith","toHaveValue","mockClear","blur","clear","getByText","click","remove","onValidationFailMock","onDuplicateMock","validate","toUpperCase","useFakeTimers","chip","deleteButton","getAllByText","mouseDown","toHaveFocus","runOnlyPendingTimers","useRealTimers","hasSelectedValues","values","selectedChips","getAllByRole","selected","toHaveLength","length","forEach","index","toHaveTextContent","getByTestId","join","hasNoSelectedValues","queryByRole","toBeInTheDocument","hiddenInput","shiftKey","ctrlKey","metaKey","foo","baz","focus","bar","document","execCommand","option","label","chips"],"sources":["../../../../../src/Form/Inputs/InputChips/InputChips.spec.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { firePasteEvent, renderWithTheme } from '@looker/components-test-utils'\nimport { fireEvent, screen } from '@testing-library/react'\n\nimport { parseOption } from '../Combobox/utils'\nimport { InputChips } from './InputChips'\n\ndescribe('InputChips', () => {\n  test('values are added on Enter keydown', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(\n      <InputChips onChange={onChangeMock} values={[]} placeholder=\"type here\" />\n    )\n    const input = screen.getByPlaceholderText('type here')\n    fireEvent.change(input, { target: { value: 'tag1' } })\n    expect(onChangeMock).not.toHaveBeenCalled()\n\n    fireEvent.keyDown(input, { key: 'Enter' })\n    expect(onChangeMock).toHaveBeenCalledTimes(1)\n    expect(onChangeMock).toHaveBeenCalledWith(['tag1'])\n    expect(input).toHaveValue('')\n  })\n\n  test('values are added when a comma is last character entered', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(\n      <InputChips onChange={onChangeMock} values={[]} placeholder=\"type here\" />\n    )\n    const input = screen.getByPlaceholderText('type here')\n\n    // if the last character entered is a comma, values are added\n    fireEvent.change(input, { target: { value: 'tag1,' } })\n    expect(onChangeMock).toHaveBeenCalledTimes(1)\n    expect(onChangeMock).toHaveBeenCalledWith(['tag1'])\n    expect(input).toHaveValue('')\n  })\n\n  test('values are not added when a comma is escaped', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(\n      <InputChips onChange={onChangeMock} values={[]} placeholder=\"type here\" />\n    )\n    const input = screen.getByPlaceholderText('type here')\n\n    // if the last character entered is an escaped comma, values not are added\n    fireEvent.change(input, { target: { value: 'tag1\\\\,' } })\n    expect(onChangeMock).not.toHaveBeenCalled()\n    expect(input).toHaveValue('tag1\\\\,')\n  })\n\n  test('values are added when pasting', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(\n      <InputChips onChange={onChangeMock} values={[]} placeholder=\"type here\" />\n    )\n    const input = screen.getByPlaceholderText('type here')\n    // Newlines are stripped when pasting into a text input,\n    // but InputChips saves the clipboard with newlines intact from the onPaste\n    firePasteEvent(\n      input,\n      `tag1\ntag2`\n    )\n    fireEvent.change(input, { target: { value: 'tag1  tag2' } })\n    expect(onChangeMock).toHaveBeenCalledWith(['tag1', 'tag2'])\n\n    // If change follows a paste, no need for the last character to be a comma\n    onChangeMock.mockClear()\n    firePasteEvent(input, `tag1,tag2`)\n    fireEvent.change(input, { target: { value: 'tag1, tag2' } })\n    expect(onChangeMock).toHaveBeenCalledWith(['tag1', 'tag2'])\n  })\n\n  test('values are added on blur', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(\n      <InputChips onChange={onChangeMock} values={[]} placeholder=\"type here\" />\n    )\n    const input = screen.getByPlaceholderText('type here')\n    fireEvent.change(input, { target: { value: 'tag1' } })\n    expect(onChangeMock).not.toHaveBeenCalled()\n\n    fireEvent.blur(input)\n    expect(onChangeMock).toHaveBeenCalledTimes(1)\n    expect(onChangeMock).toHaveBeenCalledWith(['tag1'])\n    expect(input).toHaveValue('')\n  })\n\n  test('new values are appended to existing values', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(\n      <InputChips\n        onChange={onChangeMock}\n        values={['tag1']}\n        placeholder=\"type here\"\n      />\n    )\n    const input = screen.getByPlaceholderText('type here')\n    fireEvent.change(input, { target: { value: 'tag2,' } })\n    expect(onChangeMock).toHaveBeenCalledTimes(1)\n    expect(onChangeMock).toHaveBeenCalledWith(['tag1', 'tag2'])\n    expect(input).toHaveValue('')\n  })\n\n  test('values are removed on backspace keydown', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(\n      <InputChips\n        onChange={onChangeMock}\n        values={['tag1']}\n        placeholder=\"type here\"\n      />\n    )\n    const input = screen.getByPlaceholderText('type here')\n\n    // If there is text in the input, Backspace doesn't remove values\n    fireEvent.change(input, { target: { value: 't' } })\n    fireEvent.keyDown(input, { key: 'Backspace' })\n    expect(onChangeMock).not.toHaveBeenCalled()\n\n    fireEvent.change(input, { target: { value: '' } })\n    fireEvent.keyDown(input, { key: 'Backspace' })\n    expect(onChangeMock).toHaveBeenCalledTimes(1)\n    expect(onChangeMock).toHaveBeenCalledWith([])\n  })\n\n  test('all values are removed by clicking clear field', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(\n      <InputChips onChange={onChangeMock} values={['tag1', 'tag2']} />\n    )\n    const clear = screen.getByText('Clear Field')\n\n    fireEvent.click(clear)\n    expect(onChangeMock).toHaveBeenCalledTimes(1)\n    expect(onChangeMock).toHaveBeenCalledWith([])\n  })\n\n  test('values are removed by clicking remove on the chip', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(<InputChips onChange={onChangeMock} values={['tag1']} />)\n    const remove = screen.getByText('Delete')\n\n    fireEvent.click(remove)\n    expect(onChangeMock).toHaveBeenCalledTimes(1)\n    expect(onChangeMock).toHaveBeenCalledWith([])\n  })\n\n  test('new values are validated', () => {\n    const onChangeMock = jest.fn()\n    const onValidationFailMock = jest.fn()\n    const onDuplicateMock = jest.fn()\n\n    const validate = jest.fn(value => value === 'tag1')\n    renderWithTheme(\n      <InputChips\n        onChange={onChangeMock}\n        values={[]}\n        placeholder=\"type here\"\n        validate={validate}\n        onValidationFail={onValidationFailMock}\n        onDuplicate={onDuplicateMock}\n      />\n    )\n    const input = screen.getByPlaceholderText('type here')\n    fireEvent.change(input, { target: { value: 'tag2,' } })\n    // onChange is not called if there are now new valid values\n    expect(onChangeMock).not.toHaveBeenCalled()\n    // invalid value remains in the input\n    expect(input).toHaveValue('tag2')\n    expect(onValidationFailMock).toHaveBeenCalledWith(['tag2'])\n\n    // value should be trimmed before validation\n    fireEvent.change(input, { target: { value: ' tag1,' } })\n    expect(onChangeMock).toHaveBeenCalledTimes(1)\n    expect(onChangeMock).toHaveBeenCalledWith(['tag1'])\n    expect(input).toHaveValue('')\n  })\n\n  describe('formatInputValue', () => {\n    test('false', () => {\n      const onChangeMock = jest.fn()\n\n      renderWithTheme(\n        <InputChips\n          onChange={onChangeMock}\n          values={[]}\n          placeholder=\"type here\"\n          formatInputValue={false}\n        />\n      )\n      const input = screen.getByPlaceholderText('type here')\n      fireEvent.change(input, { target: { value: '  no trim  ,' } })\n      expect(onChangeMock).toHaveBeenCalledWith(['  no trim  '])\n      expect(input).toHaveValue('')\n    })\n\n    test('custom', () => {\n      const onChangeMock = jest.fn()\n\n      renderWithTheme(\n        <InputChips\n          onChange={onChangeMock}\n          values={[]}\n          placeholder=\"type here\"\n          formatInputValue={(value: string) => value.toUpperCase()}\n        />\n      )\n      const input = screen.getByPlaceholderText('type here')\n      fireEvent.change(input, { target: { value: '  no trim  ,' } })\n      expect(onChangeMock).toHaveBeenCalledWith(['  NO TRIM  '])\n      expect(input).toHaveValue('')\n    })\n  })\n\n  test('duplicate values are not added', () => {\n    const onChangeMock = jest.fn()\n    const onDuplicateMock = jest.fn()\n\n    renderWithTheme(\n      <InputChips\n        onChange={onChangeMock}\n        values={['tag1']}\n        placeholder=\"type here\"\n        onDuplicate={onDuplicateMock}\n      />\n    )\n    const input = screen.getByPlaceholderText('type here')\n\n    // value should be trimmed before validation\n    fireEvent.change(input, { target: { value: ' tag1,' } })\n    expect(onChangeMock).toHaveBeenCalledTimes(0)\n    expect(onDuplicateMock).toHaveBeenCalledWith(['tag1'])\n    expect(input).toHaveValue('tag1')\n  })\n\n  test('escaped commas and tabs are preserved', () => {\n    const onChangeMock = jest.fn()\n\n    renderWithTheme(\n      <InputChips onChange={onChangeMock} values={[]} placeholder=\"type here\" />\n    )\n    const input = screen.getByPlaceholderText('type here')\n\n    fireEvent.change(input, { target: { value: 'tag\\\\,1,tag\\\\\t2,' } })\n    expect(onChangeMock).toHaveBeenCalledWith(['tag,1', 'tag\t2'])\n  })\n\n  describe('removeOnBackspace', () => {\n    test('true by default', () => {\n      const onChangeMock = jest.fn()\n\n      renderWithTheme(\n        <InputChips\n          onChange={onChangeMock}\n          values={['foo', 'bar']}\n          placeholder=\"type here\"\n        />\n      )\n      const input = screen.getByPlaceholderText('type here')\n\n      fireEvent.keyDown(input, {\n        key: 'Backspace',\n      })\n\n      expect(onChangeMock).toHaveBeenCalledWith(['foo'])\n    })\n\n    test('false', () => {\n      const onChangeMock = jest.fn()\n\n      renderWithTheme(\n        <InputChips\n          onChange={onChangeMock}\n          values={['foo', 'bar']}\n          placeholder=\"type here\"\n          removeOnBackspace={false}\n        />\n      )\n      const input = screen.getByPlaceholderText('type here')\n\n      fireEvent.keyDown(input, {\n        key: 'Backspace',\n      })\n\n      expect(onChangeMock).not.toHaveBeenCalled()\n    })\n  })\n\n  test('mousedown on a chip does not focus the inner input', () => {\n    jest.useFakeTimers()\n\n    renderWithTheme(\n      <InputChips\n        onChange={() => null}\n        values={['foo', 'bar']}\n        placeholder=\"type here\"\n      />\n    )\n\n    const chip = screen.getByText('bar')\n    const deleteButton = screen.getAllByText('Delete')[0]\n    const input = screen.getByPlaceholderText('type here')\n\n    fireEvent.mouseDown(chip)\n    expect(input).not.toHaveFocus()\n\n    // Focus should move _after_ delete button is clicked\n    fireEvent.click(deleteButton)\n    expect(input).toHaveFocus()\n\n    jest.runOnlyPendingTimers()\n    jest.useRealTimers()\n  })\n\n  test('mousedown on clear button does not focus the inner input', () => {\n    jest.useFakeTimers()\n\n    renderWithTheme(\n      <InputChips\n        onChange={() => null}\n        values={['foo', 'bar']}\n        placeholder=\"type here\"\n      />\n    )\n\n    const clear = screen.getByText('Clear Field')\n    const input = screen.getByPlaceholderText('type here')\n\n    fireEvent.mouseDown(clear)\n    expect(input).not.toHaveFocus()\n\n    // Focus should move _after_ clear button is clicked\n    fireEvent.click(clear)\n    expect(input).toHaveFocus()\n\n    jest.runOnlyPendingTimers()\n    jest.useRealTimers()\n  })\n\n  describe('Selecting chips', () => {\n    // Utils to check for selected values\n    function hasSelectedValues(values: string[]) {\n      const selectedChips = screen.getAllByRole('option', { selected: true })\n      expect(selectedChips).toHaveLength(values.length)\n      values.forEach((value, index) => {\n        expect(selectedChips[index]).toHaveTextContent(value)\n      })\n      expect(screen.getByTestId('hidden-input')).toHaveValue(values.join(','))\n    }\n    function hasNoSelectedValues() {\n      expect(\n        screen.queryByRole('option', { selected: true })\n      ).not.toBeInTheDocument()\n    }\n\n    test('arrow keys', () => {\n      renderWithTheme(\n        <InputChips\n          onChange={() => null}\n          values={['foo', 'bar']}\n          placeholder=\"type here\"\n        />\n      )\n      const input = screen.getByPlaceholderText('type here')\n      const hiddenInput = screen.getByTestId('hidden-input')\n\n      fireEvent.keyDown(input, {\n        key: 'ArrowLeft',\n      })\n      // Focus has moved to the hidden input\n      expect(hiddenInput).toHaveFocus()\n      hasSelectedValues(['bar'])\n\n      fireEvent.keyDown(hiddenInput, {\n        key: 'ArrowLeft',\n      })\n      hasSelectedValues(['foo'])\n\n      fireEvent.keyDown(hiddenInput, {\n        key: 'ArrowRight',\n      })\n      hasSelectedValues(['bar'])\n\n      fireEvent.keyDown(hiddenInput, {\n        key: 'ArrowRight',\n      })\n      // Focus moves back to the main input\n      expect(input).toHaveFocus()\n      hasNoSelectedValues()\n    })\n\n    test('arrow + shift keys', () => {\n      renderWithTheme(\n        <InputChips\n          onChange={() => null}\n          values={['foo', 'bar']}\n          placeholder=\"type here\"\n        />\n      )\n      const input = screen.getByPlaceholderText('type here')\n      const hiddenInput = screen.getByTestId('hidden-input')\n\n      fireEvent.keyDown(input, {\n        key: 'ArrowLeft',\n        shiftKey: true,\n      })\n      hasSelectedValues(['bar'])\n\n      fireEvent.keyDown(hiddenInput, {\n        key: 'ArrowLeft',\n        shiftKey: true,\n      })\n      hasSelectedValues(['foo', 'bar'])\n\n      fireEvent.keyDown(hiddenInput, {\n        key: 'ArrowRight',\n        shiftKey: true,\n      })\n      // Focus moves back to the main input\n      expect(input).toHaveFocus()\n      hasNoSelectedValues()\n\n      // Move to the first value\n      fireEvent.keyDown(input, {\n        key: 'ArrowLeft',\n      })\n      fireEvent.keyDown(hiddenInput, {\n        key: 'ArrowLeft',\n      })\n      // Then select both values with ArrowRight + shift\n      fireEvent.keyDown(hiddenInput, {\n        key: 'ArrowRight',\n        shiftKey: true,\n      })\n      hasSelectedValues(['foo', 'bar'])\n    })\n\n    test('cmd/ctrl + a', () => {\n      renderWithTheme(\n        <InputChips\n          onChange={() => null}\n          values={['foo', 'bar']}\n          placeholder=\"type here\"\n        />\n      )\n      const input = screen.getByPlaceholderText('type here')\n      const hiddenInput = screen.getByTestId('hidden-input')\n\n      fireEvent.keyDown(input, {\n        key: 'a',\n      })\n      hasNoSelectedValues()\n\n      fireEvent.keyDown(hiddenInput, {\n        ctrlKey: true,\n        key: 'a',\n      })\n      hasSelectedValues(['foo', 'bar'])\n\n      fireEvent.keyDown(hiddenInput, {\n        key: 'ArrowRight',\n      })\n      hasNoSelectedValues()\n\n      fireEvent.keyDown(hiddenInput, {\n        key: 'a',\n        metaKey: true,\n      })\n      hasSelectedValues(['foo', 'bar'])\n    })\n\n    test('clicking', () => {\n      renderWithTheme(\n        <InputChips\n          onChange={() => null}\n          values={['foo', 'bar', 'baz']}\n          placeholder=\"type here\"\n        />\n      )\n      const foo = screen.getByText('foo')\n      const baz = screen.getByText('baz')\n\n      fireEvent.click(foo)\n      hasSelectedValues(['foo'])\n      fireEvent.click(baz)\n      hasSelectedValues(['baz'])\n      // command key toggles values\n      fireEvent.click(foo, { metaKey: true })\n      hasSelectedValues(['foo', 'baz'])\n      fireEvent.click(baz, { metaKey: true })\n      hasSelectedValues(['foo'])\n\n      const input = screen.getByPlaceholderText('type here')\n      fireEvent.focus(input)\n      hasNoSelectedValues()\n\n      fireEvent.click(baz)\n      hasSelectedValues(['baz'])\n      // control key toggles values\n      fireEvent.click(foo, { ctrlKey: true })\n      hasSelectedValues(['foo', 'baz'])\n      fireEvent.click(baz, { ctrlKey: true })\n      hasSelectedValues(['foo'])\n\n      fireEvent.focus(input)\n      hasNoSelectedValues()\n\n      fireEvent.click(baz)\n      // shift key selects everything between\n      fireEvent.click(foo, { shiftKey: true })\n      hasSelectedValues(['foo', 'bar', 'baz'])\n    })\n  })\n\n  describe('copying / removing selected chips', () => {\n    test('delete & backspace keys', () => {\n      const onChangeMock = jest.fn()\n\n      renderWithTheme(\n        <InputChips\n          onChange={onChangeMock}\n          values={['foo', 'bar']}\n          placeholder=\"type here\"\n        />\n      )\n\n      const foo = screen.getByText('foo')\n      const bar = screen.getByText('bar')\n      const input = screen.getByPlaceholderText('type here')\n      const hiddenInput = screen.getByTestId('hidden-input')\n\n      fireEvent.click(foo)\n      expect(hiddenInput).toHaveFocus()\n      fireEvent.keyDown(hiddenInput, { key: 'Delete' })\n      expect(onChangeMock).toHaveBeenCalledWith(['bar'])\n      expect(input).toHaveFocus()\n\n      fireEvent.click(bar)\n      fireEvent.keyDown(hiddenInput, { key: 'Backspace' })\n      expect(onChangeMock).toHaveBeenCalledWith(['foo'])\n    })\n\n    test('copy', () => {\n      document.execCommand = jest.fn()\n\n      renderWithTheme(\n        <InputChips\n          onChange={() => null}\n          values={['foo', 'bar']}\n          placeholder=\"type here\"\n        />\n      )\n\n      const foo = screen.getByText('foo')\n      const hiddenInput = screen.getByTestId('hidden-input')\n\n      fireEvent.click(foo)\n      fireEvent.keyDown(hiddenInput, { key: 'c', metaKey: true })\n      expect(document.execCommand).toHaveBeenCalledWith('copy')\n    })\n\n    test('cut', () => {\n      document.execCommand = jest.fn()\n      const onChangeMock = jest.fn()\n\n      renderWithTheme(\n        <InputChips\n          onChange={onChangeMock}\n          values={['foo', 'bar']}\n          placeholder=\"type here\"\n        />\n      )\n\n      const foo = screen.getByText('foo')\n      const hiddenInput = screen.getByTestId('hidden-input')\n\n      fireEvent.click(foo)\n      fireEvent.keyDown(hiddenInput, { ctrlKey: true, key: 'x' })\n      expect(document.execCommand).toHaveBeenCalledWith('copy')\n      expect(onChangeMock).toHaveBeenCalledWith(['bar'])\n    })\n  })\n\n  test('formatChip', () => {\n    renderWithTheme(\n      <InputChips\n        onChange={() => null}\n        values={[\n          'Foo Bar<foo.bar@example.com>',\n          'Baz Qux<baz.qux@example.com>',\n          'example@example.com',\n        ]}\n        formatChip={(value: string) => {\n          const option = parseOption(value)\n          return option.label || option.value\n        }}\n      />\n    )\n\n    const chips = screen.getAllByRole('option')\n    expect(chips[0]).toHaveTextContent('Foo Bar')\n    expect(chips[1]).toHaveTextContent('Baz Qux')\n    expect(chips[2]).toHaveTextContent('example@example.com')\n  })\n})\n"],"mappings":"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"}