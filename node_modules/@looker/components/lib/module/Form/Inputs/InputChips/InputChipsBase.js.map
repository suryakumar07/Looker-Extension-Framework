{"version":3,"file":"InputChipsBase.js","names":["difference","React","forwardRef","useRef","useState","styled","css","Chip","inputHeight","InputTextContent","InputText","AdvancedInputControls","useForkedRef","useWrapEvent","visuallyHiddenStyle","joinValues","selectedValues","join","isCtrlCmdPressed","event","ctrlKey","metaKey","focusInput","inputRef","current","focus","InputChipsBaseInternal","forwardedRef","values","onChange","onKeyDown","onFocus","chipIconLabel","clearIconLabel","inputValue","inputReadOnly","onInputChange","formatTextToCopy","disabled","noErrorIcon","validationType","onClear","isVisibleOptions","showCaret","isClearable","readOnly","summary","removeOnBackspace","formatChip","height","props","internalRef","hiddenInputRef","ref","setSelectedValues","selectAll","deselectAll","selectPrevious","e","length","curIndex","indexOf","newSelectedValue","shiftKey","selectNext","deleteSelected","newValues","stopPropagation","handleDeleteChip","value","filter","v","handleChipClick","newSelectedValues","reduce","acc","currentValue","isSelected","includes","newIndex","previousLow","previousHigh","slice","handleKeyDown","key","copyToClipboard","select","document","execCommand","handleHiddenInputKeyDown","handleHiddenInputBlur","nextFocusTarget","relatedTarget","parentNode","currentTarget","handleClear","chips","map","onChipDelete","chipLabel","undefined","handleInputChange","wrappedOnFocus","wrappedOnKeyDown","HiddenInput","input","displayName","inputHeightStyle","InputChipsBase","theme","space","u1"],"sources":["../../../../../src/Form/Inputs/InputChips/InputChipsBase.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport difference from 'lodash/difference'\nimport type {\n  FocusEvent,\n  FormEvent,\n  KeyboardEvent,\n  MouseEvent,\n  Ref,\n  RefObject,\n  SyntheticEvent,\n} from 'react'\nimport React, { forwardRef, useRef, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport type { MaxHeightProps } from '@looker/design-tokens'\nimport { Chip } from '../../../Chip'\nimport { inputHeight } from '../height'\nimport type { InputTextBaseProps } from '../InputText'\nimport { InputTextContent, InputText } from '../InputText'\nimport { AdvancedInputControls } from '../AdvancedInputControls'\nimport { useForkedRef, useWrapEvent } from '../../../utils'\nimport { visuallyHiddenStyle } from '../../../VisuallyHidden'\n\nexport interface InputChipsInputControlProps {\n  /**\n   * for controlling the input text\n   */\n  inputValue: string\n  /**\n   * Called when the input text changes (use with inputValue to control the input text).\n   * Passes the event if triggered by typing but not when triggered by value tokenization or clearing the field.\n   */\n  onInputChange: (value: string, event?: FormEvent<HTMLInputElement>) => void\n  isVisibleOptions?: boolean\n  showCaret?: boolean\n}\n\nexport const joinValues = (selectedValues: string[]) => selectedValues.join(',')\n\nexport interface InputChipsControlProps {\n  /**\n   * InputChips is a controlled component since unlike native inputs,\n   * you can't easily access the current value via dom API\n   */\n  values: string[]\n  /**\n   * InputChips is a controlled component since unlike native inputs,\n   * you can't easily access the current value via dom API\n   */\n  onChange: (values: string[]) => void\n  /**\n   * When the user selects and copies chips, what should the text be\n   */\n  formatTextToCopy?: (values: string[]) => string\n  onClear?: () => void\n}\n\nexport interface InputChipsCommonProps\n  extends Omit<InputTextBaseProps, 'defaultValue' | 'onChange'>,\n    MaxHeightProps {\n  /**\n   * Format the value for display in the chip\n   */\n  formatChip?: (value: string) => string\n  /**\n   * customize the tooltip on the closing icon\n   * @default Delete\n   */\n  chipIconLabel?: string\n\n  /**\n   * customize the tooltip on the closing icon\n   */\n  clearIconLabel?: string\n\n  isClearable?: boolean\n  inputReadOnly?: boolean\n  /**\n   * Set to false to disable the removal of the last value on backspace key\n   * @default true\n   */\n  removeOnBackspace?: boolean\n  summary?: string\n}\n\nexport interface InputChipsBaseProps\n  extends InputChipsCommonProps,\n    InputChipsControlProps,\n    InputChipsInputControlProps {}\n\nfunction isCtrlCmdPressed(event: KeyboardEvent | MouseEvent) {\n  return event.ctrlKey || event.metaKey\n}\n\nfunction focusInput(inputRef: RefObject<HTMLInputElement>) {\n  inputRef.current && inputRef.current.focus()\n}\n\nexport const InputChipsBaseInternal = forwardRef(\n  (\n    {\n      values,\n      onChange,\n      onKeyDown,\n      onFocus,\n      chipIconLabel,\n      clearIconLabel,\n      inputValue,\n      inputReadOnly,\n      onInputChange,\n      formatTextToCopy = joinValues,\n      disabled,\n      noErrorIcon,\n      validationType,\n      onClear,\n      isVisibleOptions,\n      showCaret = false,\n      isClearable = true,\n      readOnly,\n      summary,\n      removeOnBackspace = true,\n      formatChip,\n      height = 'auto',\n      ...props\n    }: InputChipsBaseProps & InputChipsInputControlProps,\n    forwardedRef: Ref<HTMLInputElement>\n  ) => {\n    const internalRef = useRef<HTMLInputElement>(null)\n    const hiddenInputRef = useRef<HTMLInputElement>(null)\n    const ref = useForkedRef(forwardedRef, internalRef)\n\n    const [selectedValues, setSelectedValues] = useState<string[]>([])\n    function selectAll() {\n      setSelectedValues([...values])\n    }\n    function deselectAll() {\n      setSelectedValues([])\n    }\n\n    function selectPrevious(e: KeyboardEvent<HTMLInputElement>) {\n      if (selectedValues.length === 0) {\n        setSelectedValues([values[values.length - 1]])\n      } else {\n        const curIndex = values.indexOf(selectedValues[0])\n        if (curIndex > 0) {\n          const newSelectedValue = values[curIndex - 1]\n          if (e.shiftKey) {\n            setSelectedValues([newSelectedValue, ...selectedValues])\n          } else {\n            setSelectedValues([newSelectedValue])\n          }\n        }\n      }\n    }\n\n    function selectNext(e: KeyboardEvent<HTMLInputElement>) {\n      if (selectedValues.length > 0) {\n        const curIndex = values.indexOf(\n          selectedValues[selectedValues.length - 1]\n        )\n        if (curIndex === values.length - 1) {\n          focusInput(internalRef)\n        } else {\n          const newSelectedValue = values[curIndex + 1]\n          if (e.shiftKey) {\n            setSelectedValues([...selectedValues, newSelectedValue])\n          } else {\n            setSelectedValues([newSelectedValue])\n          }\n        }\n      }\n    }\n    function deleteSelected() {\n      if (!readOnly) {\n        const newValues = difference(values, selectedValues)\n        onChange(newValues)\n        focusInput(internalRef)\n      }\n    }\n\n    // If mousedown is on the Chip, prevent moving focus to the input\n    // from the mousedown handler in InputChip\n    // The user is either trying to select the Chip itself\n    // or deleting the chip, which would be interrupted by moving focus\n    function stopPropagation(e: SyntheticEvent) {\n      e.stopPropagation()\n    }\n\n    function handleDeleteChip(value: string, e?: SyntheticEvent) {\n      const newValues = values.filter(v => value !== v)\n      onChange(newValues)\n      focusInput(internalRef)\n      // Prevent the focus moving to the hidden input (from handleChipClick)\n      e && e.stopPropagation()\n    }\n\n    function handleChipClick(value: string) {\n      return (e: MouseEvent | KeyboardEvent) => {\n        // Focus hidden input for copy/paste & keyboard behaviors\n        focusInput(hiddenInputRef)\n        // Stop any onClick handlers (e.g. opening a SelectMulti list)\n        e.stopPropagation()\n        if (selectedValues.length > 0) {\n          if (isCtrlCmdPressed(e)) {\n            // Toggle the clicked chip, keeping values in order\n            const newSelectedValues = values.reduce(\n              (acc: string[], currentValue) => {\n                const isSelected = selectedValues.includes(currentValue)\n                if (\n                  (isSelected && currentValue !== value) ||\n                  (!isSelected && currentValue === value)\n                ) {\n                  return [...acc, currentValue]\n                }\n                return acc\n              },\n              []\n            )\n            setSelectedValues(newSelectedValues)\n            return\n          } else if (e.shiftKey) {\n            // Select the values between the clicked chip and selected ones, inclusive\n            const newIndex = values.indexOf(value)\n            const previousLow = values.indexOf(selectedValues[0])\n            const previousHigh = values.indexOf(\n              selectedValues[selectedValues.length - 1]\n            )\n            if (newIndex > previousHigh) {\n              setSelectedValues(values.slice(previousLow, newIndex + 1))\n            } else if (newIndex < previousLow) {\n              setSelectedValues(values.slice(newIndex, previousHigh + 1))\n            }\n            return\n          }\n        }\n        // A simple click, select only this chip\n        setSelectedValues([value])\n      }\n    }\n\n    function handleKeyDown(e: KeyboardEvent<HTMLInputElement>) {\n      if (inputValue === '') {\n        if (e.key === 'Backspace' && removeOnBackspace && !readOnly) {\n          // If we hit backspace and there is no text left to delete, remove the last entry instead\n          inputValue === '' && handleDeleteChip(values[values.length - 1])\n        } else if (isCtrlCmdPressed(e) && e.key === 'a') {\n          focusInput(hiddenInputRef)\n          selectAll()\n        } else if (e.key === 'ArrowLeft') {\n          focusInput(hiddenInputRef)\n          selectPrevious(e)\n        }\n      }\n    }\n\n    function copyToClipboard() {\n      hiddenInputRef.current && hiddenInputRef.current.select()\n      document.execCommand('copy')\n    }\n\n    function handleHiddenInputKeyDown(e: KeyboardEvent<HTMLInputElement>) {\n      if (isCtrlCmdPressed(e)) {\n        // Select all, copy, cut\n        switch (e.key) {\n          case 'a':\n            selectAll()\n            break\n          case 'x':\n            copyToClipboard()\n            deleteSelected()\n            break\n          case 'c':\n            copyToClipboard()\n            break\n        }\n      } else {\n        switch (e.key) {\n          case 'Delete':\n          case 'Backspace':\n            deleteSelected()\n            break\n          case 'ArrowLeft':\n            selectPrevious(e)\n            break\n          case 'ArrowRight':\n            selectNext(e)\n            break\n        }\n      }\n    }\n\n    function handleHiddenInputBlur(e: FocusEvent<HTMLInputElement>) {\n      // Unless blur event is caused by clicking on a chip, deselect all chips\n      const nextFocusTarget = e.relatedTarget\n      if (\n        nextFocusTarget &&\n        (nextFocusTarget as HTMLElement).parentNode !==\n          e.currentTarget.parentNode\n      ) {\n        deselectAll()\n      }\n    }\n\n    function handleClear() {\n      onChange([])\n      onInputChange('')\n      onClear && onClear()\n      focusInput(internalRef)\n    }\n\n    const chips = values.map(value => {\n      function onChipDelete(e?: SyntheticEvent) {\n        handleDeleteChip(value, e)\n      }\n      const isSelected = selectedValues.includes(value)\n      const chipLabel = formatChip ? formatChip(value) : value\n\n      return (\n        <Chip\n          aria-selected={isSelected}\n          disabled={disabled}\n          iconLabel={chipIconLabel}\n          key={value}\n          onClick={handleChipClick(value)}\n          onDelete={onChipDelete}\n          onMouseDown={stopPropagation}\n          readOnly={readOnly}\n          role=\"option\"\n          // Prevent the chip from receiving focus for better keyboard behavior\n          tabIndex={disabled ? undefined : -1}\n        >\n          {chipLabel}\n        </Chip>\n      )\n    })\n\n    function handleInputChange(e: FormEvent<HTMLInputElement>) {\n      onInputChange(e.currentTarget.value, e)\n    }\n\n    const wrappedOnFocus = useWrapEvent(deselectAll, onFocus)\n    const wrappedOnKeyDown = useWrapEvent(handleKeyDown, onKeyDown)\n\n    return (\n      <InputText\n        disabled={disabled}\n        after={\n          <AdvancedInputControls\n            disabled={disabled}\n            clearIconLabel={clearIconLabel}\n            isVisibleOptions={isVisibleOptions}\n            onClear={handleClear}\n            showCaret={showCaret}\n            showClear={\n              isClearable && values.length > 0 && !disabled && !readOnly\n            }\n            summary={summary}\n            errorIcon={!noErrorIcon && validationType === 'error'}\n          />\n        }\n        height={height}\n        onChange={handleInputChange}\n        onFocus={wrappedOnFocus}\n        onKeyDown={wrappedOnKeyDown}\n        readOnly={readOnly || inputReadOnly}\n        ref={ref}\n        validationType={validationType}\n        value={inputValue}\n        {...props}\n      >\n        {chips}\n        <HiddenInput\n          data-testid=\"hidden-input\"\n          aria-hidden=\"true\"\n          disabled={disabled}\n          onBlur={handleHiddenInputBlur}\n          onKeyDown={handleHiddenInputKeyDown}\n          readOnly\n          ref={hiddenInputRef}\n          tabIndex={-1}\n          value={formatTextToCopy(selectedValues)}\n        />\n      </InputText>\n    )\n  }\n)\n\nconst HiddenInput = styled.input`\n  ${visuallyHiddenStyle}\n`\n\nInputChipsBaseInternal.displayName = 'InputChipsBaseInternal'\n\nconst inputHeightStyle = css`\n  height: calc(${inputHeight} - 6px);\n`\n\nexport const InputChipsBase = styled(InputChipsBaseInternal)`\n  align-items: stretch;\n  position: relative;\n\n  ${Chip} {\n    margin: 1px 0;\n    margin-right: ${({ theme: { space } }) => space.u1};\n  }\n\n  .inner {\n    align-content: flex-start;\n    display: flex;\n    flex-wrap: wrap;\n    /* Workaround for Chip's truncate styling breaking flexbox layout */\n    min-width: 0;\n    overflow-y: auto;\n    width: 100%;\n  }\n\n  input {\n    min-width: 25%;\n    width: auto;\n    ${inputHeightStyle}\n  }\n\n  ${InputTextContent} {\n    ${inputHeightStyle}\n  }\n`\n"],"mappings":"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"}