{"version":3,"file":"types.js","names":[],"sources":["../../../../../src/Form/Inputs/InputFilters/types.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ReactNode } from 'react'\n\nexport interface InputFilterEditorProps {\n  closeEditor: () => void\n  filterOptions: FieldFilterOptions\n  onChange: (value?: string) => void\n  value?: string\n}\n\nexport type InputFilterEditorRenderProp = (\n  props: InputFilterEditorProps\n) => ReactNode\n\nexport interface FieldFilterOptions {\n  /* specify the field value */\n  field: string\n  /* text to be displayed in drop-down, optional, `field` is used if not specified */\n  label?: string\n  /**\n   * ability to select multiple filter options\n   * @default false\n   */\n  multiple?: boolean\n  /* list of options to filter by */\n  options?: string[]\n}\n\nexport interface FieldFilter extends FieldFilterOptions {\n  editor?: InputFilterEditorRenderProp\n  formatValue?: (value: string) => string\n  /* filter value/expression */\n  value?: string\n}\n\nexport interface InputFiltersProps {\n  className?: string\n  filters: FieldFilter[]\n  hideFilterIcon?: boolean\n  /**\n   * Placeholder text for input when empty\n   *\n   * I18n recommended: content that is user visible should be treated for i18n\n   *\n   * Defaults to internationalized \"Filter List\"\n   */\n  placeholder?: string\n  onChange: (filters: FieldFilter[]) => void\n}\n"],"mappings":""}