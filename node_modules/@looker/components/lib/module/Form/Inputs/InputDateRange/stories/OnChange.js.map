{"version":3,"file":"OnChange.js","names":["React","useState","Space","SpaceVertical","DateFormat","InputDateRange","OnChange","selectedDate","setSelectedDate","from","Date","to","handleChange","dateRange"],"sources":["../../../../../../src/Form/Inputs/InputDateRange/stories/OnChange.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useState } from 'react'\nimport type { RangeModifier } from '../../../../Calendar'\nimport { Space, SpaceVertical } from '../../../../Layout'\nimport { DateFormat } from '../../DateFormat'\nimport { InputDateRange } from '../InputDateRange'\n\nexport default function OnChange() {\n  const [selectedDate, setSelectedDate] = useState<RangeModifier>({\n    from: new Date(),\n    to: new Date(),\n  })\n  const handleChange = (dateRange: RangeModifier) => {\n    setSelectedDate(dateRange)\n  }\n  return (\n    <SpaceVertical>\n      <Space gap=\"xsmall\">\n        <strong>Selected:</strong>\n        <DateFormat>{selectedDate.from}</DateFormat>\n        <span>&ndash;</span>\n        <DateFormat>{selectedDate.to}</DateFormat>\n      </Space>\n      <InputDateRange onChange={handleChange} value={selectedDate} />\n    </SpaceVertical>\n  )\n}\n"],"mappings":";;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,KAAK,EAAEC,aAAa,QAAQ,oBAAoB;AACzD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,cAAc,QAAQ,mBAAmB;AAElD,eAAe,SAASC,QAAQ,GAAG;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAgB;IAC9DQ,IAAI,EAAE,IAAIC,IAAI,EAAE;IAChBC,EAAE,EAAE,IAAID,IAAI;EACd,CAAC,CAAC;EACF,MAAME,YAAY,GAAIC,SAAwB,IAAK;IACjDL,eAAe,CAACK,SAAS,CAAC;EAC5B,CAAC;EACD,OACE,oBAAC,aAAa,QACZ,oBAAC,KAAK;IAAC,GAAG,EAAC;EAAQ,GACjB,gDAA0B,EAC1B,oBAAC,UAAU,QAAEN,YAAY,CAACE,IAAI,CAAc,EAC5C,2CAAoB,EACpB,oBAAC,UAAU,QAAEF,YAAY,CAACI,EAAE,CAAc,CACpC,EACR,oBAAC,cAAc;IAAC,QAAQ,EAAEC,YAAa;IAAC,KAAK,EAAEL;EAAa,EAAG,CACjD;AAEpB"}