{"version":3,"file":"stringToSimpleHsv.spec.js","names":["stringToSimpleHsv","describe","test","h","s","v","expect","toBe"],"sources":["../../../../../../src/Form/Inputs/InputColor/utils/stringToSimpleHsv.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { stringToSimpleHsv } from './stringToSimpleHsv'\n\ndescribe('stringToSimpleHsv', () => {\n  describe('red', () => {\n    test('converts hex to hsv', () => {\n      const { h, s, v } = stringToSimpleHsv('#FF0000')\n      expect(h).toBe(0)\n      expect(s).toBe(1)\n      expect(v).toBe(1)\n    })\n\n    test('converts color name to hsv', () => {\n      const { h, s, v } = stringToSimpleHsv('red')\n      expect(h).toBe(0)\n      expect(s).toBe(1)\n      expect(v).toBe(1)\n    })\n  })\n\n  /**\n   * We have a specific test suite for black, white and grey\n   * because d3-hsv, which we use for string to hsv conversions,\n   * will return NaN for h and s values when a given color is\n   * hueless and saturationless. We need these values to not be NaN\n   * when calculating handle position for the hue slider and saturation preview.\n   */\n  describe('hueless and saturationless colors', () => {\n    test('returns object with h = 0 and s = 0 when using \"black\"', () => {\n      const { h, s, v } = stringToSimpleHsv('black')\n      expect(h).toBe(0)\n      expect(s).toBe(0)\n      expect(v).toBe(0)\n    })\n\n    test('returns object with h = 0 when using \"white\"', () => {\n      const { h, s, v } = stringToSimpleHsv('white')\n      expect(h).toBe(0)\n      expect(s).toBe(0)\n      expect(v).toBe(1)\n    })\n\n    test('returns object with h = 0 when using \"grey\"', () => {\n      const { h, s, v } = stringToSimpleHsv('grey')\n      expect(h).toBe(0)\n      expect(s).toBe(0)\n      expect(v).toBe(0.5019607843137255)\n    })\n  })\n})\n"],"mappings":";;AAKA,SAASA,iBAAiB,QAAQ,qBAAqB;AAEvDC,QAAQ,CAAC,mBAAmB,EAAE,MAAM;EAClCA,QAAQ,CAAC,KAAK,EAAE,MAAM;IACpBC,IAAI,CAAC,qBAAqB,EAAE,MAAM;MAChC,MAAM;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAE,CAAC,GAAGL,iBAAiB,CAAC,SAAS,CAAC;MAChDM,MAAM,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACD,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC;IAEFL,IAAI,CAAC,4BAA4B,EAAE,MAAM;MACvC,MAAM;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAE,CAAC,GAAGL,iBAAiB,CAAC,KAAK,CAAC;MAC5CM,MAAM,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACD,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC,CAAC;;EASFN,QAAQ,CAAC,mCAAmC,EAAE,MAAM;IAClDC,IAAI,CAAC,wDAAwD,EAAE,MAAM;MACnE,MAAM;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAE,CAAC,GAAGL,iBAAiB,CAAC,OAAO,CAAC;MAC9CM,MAAM,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACD,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC;IAEFL,IAAI,CAAC,8CAA8C,EAAE,MAAM;MACzD,MAAM;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAE,CAAC,GAAGL,iBAAiB,CAAC,OAAO,CAAC;MAC9CM,MAAM,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACD,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC;IAEFL,IAAI,CAAC,6CAA6C,EAAE,MAAM;MACxD,MAAM;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAE,CAAC,GAAGL,iBAAiB,CAAC,MAAM,CAAC;MAC7CM,MAAM,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACF,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;MACjBD,MAAM,CAACD,CAAC,CAAC,CAACE,IAAI,CAAC,kBAAkB,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}