{"version":3,"file":"types.js","names":[],"sources":["../../../src/Tooltip/types.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { CompatibleHTMLProps, Transitions } from '@looker/design-tokens'\nimport type { Placement } from '@popperjs/core'\nimport type { Property } from 'csstype'\nimport type { ReactElement, ReactNode, Ref } from 'react'\nimport type { MenuDomProps } from '../Menu'\n\n// import { UsePopoverResponseDom } from '../Popover'\n\nexport type TooltipRenderProp = (props: UseTooltipResponseDom) => ReactNode\n\nexport interface UseTooltipProps {\n  /**\n   * Specify a callback to be called before trying to close the Tooltip. This allows for\n   * use-cases where the user might lose work (think common \"Save before closing warning\" type flow)\n   * Specify a callback to be called each time this Tooltip is closed\n   */\n  canClose?: () => boolean\n  /**\n   * Specify a callback to be called before trying to open the Tooltip.\n   * Useful for cases when something needs to be checked on the trigger element first.\n   */\n  canOpen?: (triggerElement: HTMLElement) => boolean\n  isOpen?: boolean\n  /**\n   * Can be one of: top, bottom, left, right, auto, with the modifiers: start,\n   * end. This value comes directly from popperjs. See\n   * https://popper.js.org/popper-documentation.html#Popper.placements for more\n   * info.\n   */\n  placement?: Placement\n  /**\n   * Content to display inside the tooltip. Can be a string or JSX.\n   * If not defined, the Tooltip will not render.\n   * I18n recommended: content that is user visible should be treated for i18n\n   */\n  content?: ReactNode\n  /**\n   * Specify a fixed content width.\n   * @default auto\n   */\n  width?: string\n  /**\n   * Specify a fixed max-width.\n   * @default none\n   */\n  maxWidth?: string\n  /**\n   * Specify the text alignment within tooltips.\n   * @default center\n   */\n  textAlign?: Property.TextAlign\n\n  /**\n   * The id of the span containing the tooltip text (if absent, a random id will be generated)\n   */\n  id?: string\n\n  /**\n   * Tooltip background and text color is inverted from the page default\n   * @default true\n   * @private\n   */\n  invert?: boolean\n\n  /**\n   * The trigger element ref to use (if absent, one will be created and returned)\n   */\n  triggerElement?: HTMLElement | null\n\n  /**\n   * If true, the useTooltip hook will return nothing\n   */\n  disabled?: boolean\n\n  /**\n   * Delay\n   */\n  delay?: Transitions\n\n  /**\n   * Pass in custom aria describedById to be used instead of using the id of tooltip content\n   */\n  ariaDescribedById?: string\n}\n\ntype UseTooltipCallbacks = Required<\n  Pick<\n    CompatibleHTMLProps<HTMLElement>,\n    'onBlur' | 'onFocus' | 'onMouseOut' | 'onMouseOver'\n  >\n>\n\nexport type UseTooltipResponseDom = UseTooltipCallbacks &\n  Pick<CompatibleHTMLProps<HTMLElement>, 'aria-describedby' | 'className'> & {\n    /**\n     * @deprecated returns a no-op function, will be removed in 3.x release\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ref: Ref<any>\n  }\nexport interface TooltipProps extends UseTooltipProps, Partial<MenuDomProps> {\n  content: ReactNode\n  /**\n   * Component to receive tooltip behavior or render prop function that\n   * receives tooltip props and returns a component\n   */\n  children:\n    | ReactElement<UseTooltipResponseDom & MenuDomProps>\n    | TooltipRenderProp\n}\n"],"mappings":""}