{"version":3,"file":"CalendarNav.js","names":["CalendarNav","locale","monthYear","onMonthChange","onOpenMonthPicker","useTranslation","t","handleNextMonth","setMonth","getMonth","handlePreviousMonth","formatDateString"],"sources":["../../../src/Calendar/CalendarNav.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { ChevronLeft } from '@styled-icons/material-rounded/ChevronLeft/ChevronLeft'\nimport { ChevronRight } from '@styled-icons/material-rounded/ChevronRight/ChevronRight'\nimport { ArrowDropDown } from '@styled-icons/material/ArrowDropDown/ArrowDropDown'\nimport { getMonth, setMonth } from 'date-fns'\nimport { ButtonTransparent, IconButton } from '../Button'\nimport { Space } from '../Layout'\nimport { useTranslation } from '../utils'\nimport type { CalendarLocaleProps, NavCB } from './types'\nimport { formatDateString } from './utils'\n\nexport type CalendarNavProps = Pick<CalendarLocaleProps, 'locale'> & {\n  monthYear: Date\n  onMonthChange: NavCB\n  onOpenMonthPicker: () => void\n}\n\nexport const CalendarNav = ({\n  locale,\n  monthYear,\n  onMonthChange,\n  onOpenMonthPicker,\n}: CalendarNavProps) => {\n  const { t } = useTranslation('CalendarNav')\n\n  const handleNextMonth = () => {\n    onMonthChange && onMonthChange(setMonth(monthYear, getMonth(monthYear) + 1))\n  }\n\n  const handlePreviousMonth = () => {\n    onMonthChange && onMonthChange(setMonth(monthYear, getMonth(monthYear) - 1))\n  }\n\n  return (\n    <Space py=\"u3\" px=\"u4\">\n      <ButtonTransparent\n        color=\"neutral\"\n        iconAfter={<ArrowDropDown />}\n        onClick={onOpenMonthPicker}\n        size=\"xsmall\"\n      >\n        {formatDateString(monthYear, 'MMM yyyy', locale)}\n      </ButtonTransparent>\n      <Space justify=\"end\" gap=\"xsmall\">\n        <IconButton\n          icon={<ChevronLeft />}\n          label={t('previous month')}\n          onClick={handlePreviousMonth}\n        />\n\n        <IconButton\n          icon={<ChevronRight />}\n          label={t('next month')}\n          onClick={handleNextMonth}\n        />\n      </Space>\n    </Space>\n  )\n}\n"],"mappings":";;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAQO,IAAMA,WAAW,GAAG,SAAdA,WAAW,OAKA;EAAA,IAJtBC,MAAM,QAANA,MAAM;IACNC,SAAS,QAATA,SAAS;IACTC,aAAa,QAAbA,aAAa;IACbC,iBAAiB,QAAjBA,iBAAiB;EAEjB,sBAAc,IAAAC,qBAAc,EAAC,aAAa,CAAC;IAAnCC,CAAC,mBAADA,CAAC;EAET,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC5BJ,aAAa,IAAIA,aAAa,CAAC,IAAAK,iBAAQ,EAACN,SAAS,EAAE,IAAAO,iBAAQ,EAACP,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9E,CAAC;EAED,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAS;IAChCP,aAAa,IAAIA,aAAa,CAAC,IAAAK,iBAAQ,EAACN,SAAS,EAAE,IAAAO,iBAAQ,EAACP,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;EAC9E,CAAC;EAED,OACE,gCAAC,aAAK;IAAC,EAAE,EAAC,IAAI;IAAC,EAAE,EAAC;EAAI,GACpB,gCAAC,yBAAiB;IAChB,KAAK,EAAC,SAAS;IACf,SAAS,EAAE,gCAAC,4BAAa,OAAI;IAC7B,OAAO,EAAEE,iBAAkB;IAC3B,IAAI,EAAC;EAAQ,GAEZ,IAAAO,wBAAgB,EAACT,SAAS,EAAE,UAAU,EAAED,MAAM,CAAC,CAC9B,EACpB,gCAAC,aAAK;IAAC,OAAO,EAAC,KAAK;IAAC,GAAG,EAAC;EAAQ,GAC/B,gCAAC,kBAAU;IACT,IAAI,EAAE,gCAAC,wBAAW,OAAI;IACtB,KAAK,EAAEK,CAAC,CAAC,gBAAgB,CAAE;IAC3B,OAAO,EAAEI;EAAoB,EAC7B,EAEF,gCAAC,kBAAU;IACT,IAAI,EAAE,gCAAC,0BAAY,OAAI;IACvB,KAAK,EAAEJ,CAAC,CAAC,YAAY,CAAE;IACvB,OAAO,EAAEC;EAAgB,EACzB,CACI,CACF;AAEZ,CAAC;AAAA"}