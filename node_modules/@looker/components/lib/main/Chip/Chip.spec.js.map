{"version":3,"file":"Chip.spec.js","names":["jest","mock","isOverflowing","describe","test","renderWithTheme","expect","screen","getByText","toBeInTheDocument","queryByRole","not","toHaveStyleRule","onDeleteTrigger","fn","fireEvent","click","getByRole","toHaveBeenCalledTimes","chip","getByTestId","keyDown","key","mouseOver","toHaveTextContent","mouseOut","waitForElementToBeRemoved"],"sources":["../../../src/Chip/Chip.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport React from 'react'\nimport {\n  fireEvent,\n  screen,\n  waitForElementToBeRemoved,\n} from '@testing-library/react'\nimport { Chip } from './Chip'\n\n// For testing the truncation logic\njest.mock('../utils/isOverflowing', () => ({\n  isOverflowing: () => true,\n}))\n\ndescribe('Chip', () => {\n  test('default', () => {\n    renderWithTheme(<Chip>chip</Chip>)\n    expect(screen.getByText('chip')).toBeInTheDocument()\n  })\n\n  test('disabled', () => {\n    renderWithTheme(<Chip disabled>chip</Chip>)\n    /* Disabled chips have no remove button */\n    expect(screen.queryByRole('button')).not.toBeInTheDocument()\n  })\n\n  test('Chip accepts a prefix and renders it with correct style', () => {\n    renderWithTheme(<Chip prefix=\"role\">admin</Chip>)\n    expect(screen.getByText(/\\brole\\b/)).toHaveStyleRule('font-weight: 400')\n  })\n\n  test('onDelete works correctly', () => {\n    const onDeleteTrigger = jest.fn()\n\n    renderWithTheme(\n      <Chip onDelete={onDeleteTrigger} data-testid=\"chip\">\n        clickable\n      </Chip>\n    )\n\n    fireEvent.click(screen.getByRole('button'))\n    expect(onDeleteTrigger).toHaveBeenCalledTimes(1)\n\n    const chip = screen.getByTestId('chip')\n\n    fireEvent.keyDown(chip, {\n      key: 'Backspace',\n    })\n    expect(onDeleteTrigger).toHaveBeenCalledTimes(2)\n  })\n\n  test('truncation', async () => {\n    // Label length doesn't matter since we're mocking isOverflowing\n    renderWithTheme(<Chip>truncate me</Chip>)\n    const chip = screen.getByText('truncate me')\n    fireEvent.mouseOver(chip)\n\n    expect(screen.getByRole('tooltip')).toHaveTextContent('truncate me')\n\n    fireEvent.mouseOut(chip)\n    await waitForElementToBeRemoved(() => screen.queryByRole('tooltip'))\n  })\n})\n"],"mappings":";;;;AAIA;AACA;AACA;AAKA;;AAGAA,IAAI,CAACC,IAAI,CAAC,wBAAwB,EAAE;EAAA,OAAO;IACzCC,aAAa,EAAE;MAAA,OAAM,IAAI;IAAA;EAC3B,CAAC;AAAA,CAAC,CAAC;AAEHC,QAAQ,CAAC,MAAM,EAAE,YAAM;EACrBC,IAAI,CAAC,SAAS,EAAE,YAAM;IACpB,IAAAC,oCAAe,EAAC,gCAAC,UAAI,eAAY,CAAC;IAClCC,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,MAAM,CAAC,CAAC,CAACC,iBAAiB,EAAE;EACtD,CAAC,CAAC;EAEFL,IAAI,CAAC,UAAU,EAAE,YAAM;IACrB,IAAAC,oCAAe,EAAC,gCAAC,UAAI;MAAC,QAAQ;IAAA,UAAY,CAAC;IAE3CC,MAAM,CAACC,cAAM,CAACG,WAAW,CAAC,QAAQ,CAAC,CAAC,CAACC,GAAG,CAACF,iBAAiB,EAAE;EAC9D,CAAC,CAAC;EAEFL,IAAI,CAAC,yDAAyD,EAAE,YAAM;IACpE,IAAAC,oCAAe,EAAC,gCAAC,UAAI;MAAC,MAAM,EAAC;IAAM,WAAa,CAAC;IACjDC,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,UAAU,CAAC,CAAC,CAACI,eAAe,CAAC,kBAAkB,CAAC;EAC1E,CAAC,CAAC;EAEFR,IAAI,CAAC,0BAA0B,EAAE,YAAM;IACrC,IAAMS,eAAe,GAAGb,IAAI,CAACc,EAAE,EAAE;IAEjC,IAAAT,oCAAe,EACb,gCAAC,UAAI;MAAC,QAAQ,EAAEQ,eAAgB;MAAC,eAAY;IAAM,eAE5C,CACR;IAEDE,iBAAS,CAACC,KAAK,CAACT,cAAM,CAACU,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC3CX,MAAM,CAACO,eAAe,CAAC,CAACK,qBAAqB,CAAC,CAAC,CAAC;IAEhD,IAAMC,IAAI,GAAGZ,cAAM,CAACa,WAAW,CAAC,MAAM,CAAC;IAEvCL,iBAAS,CAACM,OAAO,CAACF,IAAI,EAAE;MACtBG,GAAG,EAAE;IACP,CAAC,CAAC;IACFhB,MAAM,CAACO,eAAe,CAAC,CAACK,qBAAqB,CAAC,CAAC,CAAC;EAClD,CAAC,CAAC;EAEFd,IAAI,CAAC,YAAY,6DAAE;IAAA;IAAA;MAAA;QAAA;UAEjB,IAAAC,oCAAe,EAAC,gCAAC,UAAI,sBAAmB,CAAC;UACnCc,IAAI,GAAGZ,cAAM,CAACC,SAAS,CAAC,aAAa,CAAC;UAC5CO,iBAAS,CAACQ,SAAS,CAACJ,IAAI,CAAC;UAEzBb,MAAM,CAACC,cAAM,CAACU,SAAS,CAAC,SAAS,CAAC,CAAC,CAACO,iBAAiB,CAAC,aAAa,CAAC;UAEpET,iBAAS,CAACU,QAAQ,CAACN,IAAI,CAAC;UAAA;UAAA,OAClB,IAAAO,iCAAyB,EAAC;YAAA,OAAMnB,cAAM,CAACG,WAAW,CAAC,SAAS,CAAC;UAAA,EAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACrE,GAAC;AACJ,CAAC,CAAC"}