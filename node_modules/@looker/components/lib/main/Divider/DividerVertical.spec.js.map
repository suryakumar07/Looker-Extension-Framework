{"version":3,"file":"DividerVertical.spec.js","names":["test","renderWithTheme","divider","screen","getByRole","expect","toBeInTheDocument","toHaveAttribute","toHaveStyle","height"],"sources":["../../../src/Divider/DividerVertical.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport 'jest-styled-components'\nimport React from 'react'\nimport { screen } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { DividerVertical } from './DividerVertical'\n\ntest('render Default DividerVertical', () => {\n  renderWithTheme(<DividerVertical />)\n  const divider = screen.getByRole('separator')\n  expect(divider).toBeInTheDocument()\n  expect(divider).toHaveAttribute('aria-orientation', 'vertical')\n})\n\n// CSS libraries like bootstrap may override hr { height }, causing our divider\n// to not be visible. In order to be defensive against this, we set this to\n// inherit.\ntest('overrides global height declarations when stretching', () => {\n  renderWithTheme(<DividerVertical stretch />)\n  expect(screen.getByRole('separator')).toHaveStyle({ height: 'inherit' })\n})\n"],"mappings":";;;AAKA;AACA;AACA;AACA;AACA;;AAEAA,IAAI,CAAC,gCAAgC,EAAE,YAAM;EAC3C,IAAAC,oCAAe,EAAC,gCAAC,gCAAe,OAAG,CAAC;EACpC,IAAMC,OAAO,GAAGC,cAAM,CAACC,SAAS,CAAC,WAAW,CAAC;EAC7CC,MAAM,CAACH,OAAO,CAAC,CAACI,iBAAiB,EAAE;EACnCD,MAAM,CAACH,OAAO,CAAC,CAACK,eAAe,CAAC,kBAAkB,EAAE,UAAU,CAAC;AACjE,CAAC,CAAC;;AAKFP,IAAI,CAAC,sDAAsD,EAAE,YAAM;EACjE,IAAAC,oCAAe,EAAC,gCAAC,gCAAe;IAAC,OAAO;EAAA,EAAG,CAAC;EAC5CI,MAAM,CAACF,cAAM,CAACC,SAAS,CAAC,WAAW,CAAC,CAAC,CAACI,WAAW,CAAC;IAAEC,MAAM,EAAE;EAAU,CAAC,CAAC;AAC1E,CAAC,CAAC"}