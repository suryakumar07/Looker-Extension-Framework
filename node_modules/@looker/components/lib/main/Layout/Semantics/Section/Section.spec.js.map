{"version":3,"file":"Section.spec.js","names":["describe","test","renderWithTheme","expect","screen","getByText","toBeInTheDocument","getByRole","Object","defineProperty","HTMLElement","prototype","configurable","value","getComputedStyle","getPropertyValue","toEqual"],"sources":["../../../../../src/Layout/Semantics/Section/Section.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport 'jest-styled-components'\nimport React from 'react'\nimport { screen } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { Section } from './Section'\n\ndescribe('Section', () => {\n  test('render', () => {\n    renderWithTheme(<Section>Section content</Section>)\n    expect(screen.getByText('Section content')).toBeInTheDocument()\n  })\n\n  test('renders as main if pass as a prop.', () => {\n    renderWithTheme(<Section main>Section content</Section>)\n    expect(screen.getByRole('main')).toBeInTheDocument()\n  })\n\n  test('does not have a box shadow if content does not overflow', () => {\n    Object.defineProperty(HTMLElement.prototype, 'scrollHeight', {\n      configurable: true,\n      value: 0,\n    })\n    Object.defineProperty(HTMLElement.prototype, 'offsetHeight', {\n      configurable: true,\n      value: 500,\n    })\n    renderWithTheme(<Section>Section content</Section>)\n\n    expect(\n      getComputedStyle(screen.getByText('Section content')).getPropertyValue(\n        'box-shadow'\n      )\n    ).toEqual('')\n  })\n\n  test('has a box shadow when content overflows', () => {\n    Object.defineProperty(HTMLElement.prototype, 'scrollHeight', {\n      configurable: true,\n      value: 500,\n    })\n\n    Object.defineProperty(HTMLElement.prototype, 'offsetHeight', {\n      configurable: true,\n      value: 0,\n    })\n\n    renderWithTheme(<Section>Section content</Section>)\n\n    expect(\n      getComputedStyle(screen.getByText('Section content')).getPropertyValue(\n        'box-shadow'\n      )\n    ).toEqual('inset 0 -4px 4px -4px #DEE1E5')\n  })\n})\n"],"mappings":";;;AAIA;AACA;AACA;AACA;AACA;;AAEAA,QAAQ,CAAC,SAAS,EAAE,YAAM;EACxBC,IAAI,CAAC,QAAQ,EAAE,YAAM;IACnB,IAAAC,oCAAe,EAAC,gCAAC,gBAAO,0BAA0B,CAAC;IACnDC,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAACC,iBAAiB,EAAE;EACjE,CAAC,CAAC;EAEFL,IAAI,CAAC,oCAAoC,EAAE,YAAM;IAC/C,IAAAC,oCAAe,EAAC,gCAAC,gBAAO;MAAC,IAAI;IAAA,qBAA0B,CAAC;IACxDC,MAAM,CAACC,cAAM,CAACG,SAAS,CAAC,MAAM,CAAC,CAAC,CAACD,iBAAiB,EAAE;EACtD,CAAC,CAAC;EAEFL,IAAI,CAAC,yDAAyD,EAAE,YAAM;IACpEO,MAAM,CAACC,cAAc,CAACC,WAAW,CAACC,SAAS,EAAE,cAAc,EAAE;MAC3DC,YAAY,EAAE,IAAI;MAClBC,KAAK,EAAE;IACT,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAACC,WAAW,CAACC,SAAS,EAAE,cAAc,EAAE;MAC3DC,YAAY,EAAE,IAAI;MAClBC,KAAK,EAAE;IACT,CAAC,CAAC;IACF,IAAAX,oCAAe,EAAC,gCAAC,gBAAO,0BAA0B,CAAC;IAEnDC,MAAM,CACJW,gBAAgB,CAACV,cAAM,CAACC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAACU,gBAAgB,CACpE,YAAY,CACb,CACF,CAACC,OAAO,CAAC,EAAE,CAAC;EACf,CAAC,CAAC;EAEFf,IAAI,CAAC,yCAAyC,EAAE,YAAM;IACpDO,MAAM,CAACC,cAAc,CAACC,WAAW,CAACC,SAAS,EAAE,cAAc,EAAE;MAC3DC,YAAY,EAAE,IAAI;MAClBC,KAAK,EAAE;IACT,CAAC,CAAC;IAEFL,MAAM,CAACC,cAAc,CAACC,WAAW,CAACC,SAAS,EAAE,cAAc,EAAE;MAC3DC,YAAY,EAAE,IAAI;MAClBC,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,IAAAX,oCAAe,EAAC,gCAAC,gBAAO,0BAA0B,CAAC;IAEnDC,MAAM,CACJW,gBAAgB,CAACV,cAAM,CAACC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAACU,gBAAgB,CACpE,YAAY,CACb,CACF,CAACC,OAAO,CAAC,+BAA+B,CAAC;EAC5C,CAAC,CAAC;AACJ,CAAC,CAAC"}