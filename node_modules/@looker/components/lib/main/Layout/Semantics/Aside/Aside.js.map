{"version":3,"file":"Aside.js","names":["AsideLayout","forwardRef","forwardedRef","collapse","children","props","useOverflow","hasOverflow","ref","displayName","Aside","styled","withConfig","shouldForwardProp","prop","attrs","width","commonLayoutCSS","scrollWithin","asideWidth"],"sources":["../../../../../src/Layout/Semantics/Aside/Aside.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport type {\n  CompatibleHTMLProps,\n  ResponsiveValue,\n} from '@looker/design-tokens'\nimport { shouldForwardProp } from '@looker/design-tokens'\nimport styled from 'styled-components'\nimport { OverflowShadow, useOverflow } from '../../../utils'\nimport type { CommonLayoutProps } from '../../utils/common'\nimport { commonLayoutCSS } from '../../utils/common'\nimport type { AsideSizeRamp } from './asideWidth'\nimport { asideWidth } from './asideWidth'\n\nexport type AsideProps = CommonLayoutProps &\n  CompatibleHTMLProps<HTMLElement> & {\n    /**\n     * Prevent `Aside` from being rendered.\n     * @default false\n     */\n    collapse?: boolean\n    /**\n     * To be used within the context of `<Page fixed>` container.\n     * When true, this removes the inner overflow-y scrolling\n     * and allows content within a Layout group to scroll together.\n     * @default false\n     */\n    scrollWithin?: boolean\n    /**\n     * Specify width of aside\n     * @default sidebar\n     */\n    width?: ResponsiveValue<AsideSizeRamp | string>\n  }\n\nconst AsideLayout = forwardRef(\n  (\n    { collapse, children, ...props }: AsideProps,\n    forwardedRef: Ref<HTMLDivElement>\n  ) => {\n    const [hasOverflow, ref] = useOverflow(forwardedRef)\n\n    return collapse ? null : (\n      <OverflowShadow as=\"aside\" hasOverflow={hasOverflow} ref={ref} {...props}>\n        {children}\n      </OverflowShadow>\n    )\n  }\n)\n\nAsideLayout.displayName = 'AsideLayout'\n\nexport const Aside = styled(AsideLayout)\n  .withConfig<AsideProps>({\n    shouldForwardProp: prop => prop === 'collapse' || shouldForwardProp(prop),\n  })\n  .attrs<AsideProps>(({ width = 'sidebar' }) => ({\n    width,\n  }))<AsideProps>`\n${commonLayoutCSS}\n\nflex: 0 0 ${({ width }) => width};\nmax-width: ${({ width }) => width};\nmin-width: ${({ width }) => width};\noverflow: auto;\nwidth: 0;\n${({ scrollWithin }) => scrollWithin && 'height: fit-content;'}\n\n${asideWidth}`\n"],"mappings":";;;;;;;;;;;;AAMA;AAKA;AACA;AACA;AAEA;AAEA;AAAyC;AAAA;AAAA;AAAA;AAuBzC,IAAMA,WAAW,GAAG,IAAAC,iBAAU,EAC5B,gBAEEC,YAAiC,EAC9B;EAAA,IAFDC,QAAQ,QAARA,QAAQ;IAAEC,QAAQ,QAARA,QAAQ;IAAKC,KAAK;EAG9B,mBAA2B,IAAAC,kBAAW,EAACJ,YAAY,CAAC;IAAA;IAA7CK,WAAW;IAAEC,GAAG;EAEvB,OAAOL,QAAQ,GAAG,IAAI,GACpB,gCAAC,qBAAc;IAAC,EAAE,EAAC,OAAO;IAAC,WAAW,EAAEI,WAAY;IAAC,GAAG,EAAEC;EAAI,GAAKH,KAAK,GACrED,QAAQ,CAEZ;AACH,CAAC,CACF;AAEDJ,WAAW,CAACS,WAAW,GAAG,aAAa;AAEhC,IAAMC,KAAK,GAAG,IAAAC,4BAAM,EAACX,WAAW,CAAC,CACrCY,UAAU,CAAa;EACtBC,iBAAiB,EAAE,2BAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,UAAU,IAAI,IAAAD,+BAAiB,EAACC,IAAI,CAAC;EAAA;EAAA;EAAA;AAC3E,CAAC,CAAC,CACDC,KAAK,CAAa;EAAA,wBAAGC,KAAK;IAALA,KAAK,4BAAG,SAAS;EAAA,OAAQ;IAC7CA,KAAK,EAALA;EACF,CAAC;AAAA,CAAC,CAAC,8LACHC,uBAAe,EAEL;EAAA,IAAGD,KAAK,SAALA,KAAK;EAAA,OAAOA,KAAK;AAAA,GACnB;EAAA,IAAGA,KAAK,SAALA,KAAK;EAAA,OAAOA,KAAK;AAAA,GACpB;EAAA,IAAGA,KAAK,SAALA,KAAK;EAAA,OAAOA,KAAK;AAAA,GAG/B;EAAA,IAAGE,YAAY,SAAZA,YAAY;EAAA,OAAOA,YAAY,IAAI,sBAAsB;AAAA,GAE5DC,sBAAU,CAAE;AAAA"}