{"version":3,"file":"Box.spec.js","names":["describe","test","renderWithTheme","expect","screen","getByRole","toBeInTheDocument","getByDisplayValue","toHaveFocus","handleClick","jest","fn","fireEvent","click","getByText","toHaveBeenCalledTimes","getByLabelText","toHaveStyleRule"],"sources":["../../../../src/Layout/Box/Box.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport 'jest-styled-components'\nimport React from 'react'\nimport { fireEvent, screen } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { Box } from './Box'\n\ndescribe('Box', () => {\n  describe('as=', () => {\n    test('render as any HTML tag', () => {\n      renderWithTheme(<Box as=\"button\">Press Me</Box>)\n      expect(screen.getByRole('button')).toBeInTheDocument()\n    })\n\n    test('any prop can be passed to Box', () => {\n      renderWithTheme(<Box as=\"input\" type=\"checkbox\" />)\n      expect(screen.getByRole('checkbox')).toBeInTheDocument()\n    })\n  })\n\n  describe('core HTML attributes', () => {\n    test('allows autoFocus', () => {\n      renderWithTheme(\n        <Box as=\"input\" type=\"text\" defaultValue=\"Autofocus\" autoFocus />\n      )\n      expect(screen.getByDisplayValue('Autofocus')).toHaveFocus()\n    })\n\n    test('allows for HTML events', () => {\n      const handleClick = jest.fn()\n      renderWithTheme(<Box onClick={handleClick}>Click me</Box>)\n      fireEvent.click(screen.getByText('Click me'))\n      expect(handleClick).toHaveBeenCalledTimes(1)\n    })\n\n    test('allows for ARIA attributes', () => {\n      renderWithTheme(\n        <Box aria-label=\"for screen readers only\">aria-label</Box>\n      )\n      expect(\n        screen.getByLabelText('for screen readers only')\n      ).toBeInTheDocument()\n    })\n  })\n\n  describe('user select', () => {\n    test('cannot be selected', () => {\n      renderWithTheme(<Box userSelect=\"none\">Can't touch this</Box>)\n      expect(screen.getByText(\"Can't touch this\")).toHaveStyleRule(\n        'user-select',\n        'none'\n      )\n    })\n  })\n})\n"],"mappings":";;;AAKA;AACA;AACA;AACA;AACA;;AAEAA,QAAQ,CAAC,KAAK,EAAE,YAAM;EACpBA,QAAQ,CAAC,KAAK,EAAE,YAAM;IACpBC,IAAI,CAAC,wBAAwB,EAAE,YAAM;MACnC,IAAAC,oCAAe,EAAC,gCAAC,QAAG;QAAC,EAAE,EAAC;MAAQ,cAAe,CAAC;MAChDC,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACC,iBAAiB,EAAE;IACxD,CAAC,CAAC;IAEFL,IAAI,CAAC,+BAA+B,EAAE,YAAM;MAC1C,IAAAC,oCAAe,EAAC,gCAAC,QAAG;QAAC,EAAE,EAAC,OAAO;QAAC,IAAI,EAAC;MAAU,EAAG,CAAC;MACnDC,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,UAAU,CAAC,CAAC,CAACC,iBAAiB,EAAE;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFN,QAAQ,CAAC,sBAAsB,EAAE,YAAM;IACrCC,IAAI,CAAC,kBAAkB,EAAE,YAAM;MAC7B,IAAAC,oCAAe,EACb,gCAAC,QAAG;QAAC,EAAE,EAAC,OAAO;QAAC,IAAI,EAAC,MAAM;QAAC,YAAY,EAAC,WAAW;QAAC,SAAS;MAAA,EAAG,CAClE;MACDC,MAAM,CAACC,cAAM,CAACG,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAACC,WAAW,EAAE;IAC7D,CAAC,CAAC;IAEFP,IAAI,CAAC,wBAAwB,EAAE,YAAM;MACnC,IAAMQ,WAAW,GAAGC,IAAI,CAACC,EAAE,EAAE;MAC7B,IAAAT,oCAAe,EAAC,gCAAC,QAAG;QAAC,OAAO,EAAEO;MAAY,cAAe,CAAC;MAC1DG,iBAAS,CAACC,KAAK,CAACT,cAAM,CAACU,SAAS,CAAC,UAAU,CAAC,CAAC;MAC7CX,MAAM,CAACM,WAAW,CAAC,CAACM,qBAAqB,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC;IAEFd,IAAI,CAAC,4BAA4B,EAAE,YAAM;MACvC,IAAAC,oCAAe,EACb,gCAAC,QAAG;QAAC,cAAW;MAAyB,gBAAiB,CAC3D;MACDC,MAAM,CACJC,cAAM,CAACY,cAAc,CAAC,yBAAyB,CAAC,CACjD,CAACV,iBAAiB,EAAE;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFN,QAAQ,CAAC,aAAa,EAAE,YAAM;IAC5BC,IAAI,CAAC,oBAAoB,EAAE,YAAM;MAC/B,IAAAC,oCAAe,EAAC,gCAAC,QAAG;QAAC,UAAU,EAAC;MAAM,sBAAuB,CAAC;MAC9DC,MAAM,CAACC,cAAM,CAACU,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAACG,eAAe,CAC1D,aAAa,EACb,MAAM,CACP;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}