{"version":3,"file":"useRippleHandlers.js","names":["rippleHandlerKeys","useRippleHandlers","currentHandlers","disabled","startBG","endBG","startFG","endFG","handleKeyDown","useCallback","e","key","handleMouseLeave","wrappedCallbacks","onBlur","useWrapEvent","onFocus","onKeyDown","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","onMouseUp"],"sources":["../../../src/Ripple/useRippleHandlers.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { KeyboardEvent } from 'react'\nimport { useCallback } from 'react'\nimport type { CompatibleHTMLProps } from '@looker/design-tokens'\nimport { useWrapEvent } from '../utils'\nimport type { RippleCallbacks } from './types'\n\nexport const rippleHandlerKeys = [\n  'onBlur',\n  'onFocus',\n  'onKeyDown',\n  'onKeyUp',\n  'onMouseDown',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseUp',\n] as const\n\nexport type RippleHandlers<E extends HTMLElement> = Pick<\n  CompatibleHTMLProps<E>,\n  typeof rippleHandlerKeys[number]\n>\n\n/**\n *\n * @param callbacks from useRipple, start and end functions for foreground and background\n * @param currentHandlers existing event handlers for the element will be wrapped\n * @param disabled\n * @returns wrapped event handlers\n */\nexport const useRippleHandlers = <E extends HTMLElement>(\n  { startBG, endBG, startFG, endFG }: RippleCallbacks,\n  currentHandlers: RippleHandlers<E>,\n  disabled?: boolean\n): RippleHandlers<E> => {\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      switch (e.key) {\n        // Only start the ripple for enter or space key\n        case 'Enter':\n        case ' ':\n          startFG()\n          break\n      }\n    },\n    [startFG]\n  )\n\n  const handleMouseLeave = useCallback(() => {\n    endBG()\n    // If the user hovers off of the element while pressing, end the ripple\n    endFG()\n  }, [endFG, endBG])\n\n  const wrappedCallbacks = {\n    onBlur: useWrapEvent(endBG, currentHandlers.onBlur),\n    onFocus: useWrapEvent(startBG, currentHandlers.onFocus),\n    onKeyDown: useWrapEvent(handleKeyDown, currentHandlers.onKeyDown),\n    onKeyUp: useWrapEvent(endFG, currentHandlers.onKeyUp),\n    onMouseDown: useWrapEvent(startFG, currentHandlers.onMouseDown),\n    onMouseEnter: useWrapEvent(startBG, currentHandlers.onMouseEnter),\n    onMouseLeave: useWrapEvent(handleMouseLeave, currentHandlers.onMouseLeave),\n    onMouseUp: useWrapEvent(endFG, currentHandlers.onMouseUp),\n  }\n\n  return disabled ? {} : wrappedCallbacks\n}\n"],"mappings":";;;;;;AAMA;AAEA;;AAGO,IAAMA,iBAAiB,GAAG,CAC/B,QAAQ,EACR,SAAS,EACT,WAAW,EACX,SAAS,EACT,aAAa,EACb,cAAc,EACd,cAAc,EACd,WAAW,CACH;AAAA;AAcH,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,OAE5BC,eAAkC,EAClCC,QAAkB,EACI;EAAA,IAHpBC,OAAO,QAAPA,OAAO;IAAEC,KAAK,QAALA,KAAK;IAAEC,OAAO,QAAPA,OAAO;IAAEC,KAAK,QAALA,KAAK;EAIhC,IAAMC,aAAa,GAAG,IAAAC,kBAAW,EAC/B,UAACC,CAAgB,EAAK;IACpB,QAAQA,CAAC,CAACC,GAAG;MAEX,KAAK,OAAO;MACZ,KAAK,GAAG;QACNL,OAAO,EAAE;QACT;IAAK;EAEX,CAAC,EACD,CAACA,OAAO,CAAC,CACV;EAED,IAAMM,gBAAgB,GAAG,IAAAH,kBAAW,EAAC,YAAM;IACzCJ,KAAK,EAAE;IAEPE,KAAK,EAAE;EACT,CAAC,EAAE,CAACA,KAAK,EAAEF,KAAK,CAAC,CAAC;EAElB,IAAMQ,gBAAgB,GAAG;IACvBC,MAAM,EAAE,IAAAC,mBAAY,EAACV,KAAK,EAAEH,eAAe,CAACY,MAAM,CAAC;IACnDE,OAAO,EAAE,IAAAD,mBAAY,EAACX,OAAO,EAAEF,eAAe,CAACc,OAAO,CAAC;IACvDC,SAAS,EAAE,IAAAF,mBAAY,EAACP,aAAa,EAAEN,eAAe,CAACe,SAAS,CAAC;IACjEC,OAAO,EAAE,IAAAH,mBAAY,EAACR,KAAK,EAAEL,eAAe,CAACgB,OAAO,CAAC;IACrDC,WAAW,EAAE,IAAAJ,mBAAY,EAACT,OAAO,EAAEJ,eAAe,CAACiB,WAAW,CAAC;IAC/DC,YAAY,EAAE,IAAAL,mBAAY,EAACX,OAAO,EAAEF,eAAe,CAACkB,YAAY,CAAC;IACjEC,YAAY,EAAE,IAAAN,mBAAY,EAACH,gBAAgB,EAAEV,eAAe,CAACmB,YAAY,CAAC;IAC1EC,SAAS,EAAE,IAAAP,mBAAY,EAACR,KAAK,EAAEL,eAAe,CAACoB,SAAS;EAC1D,CAAC;EAED,OAAOnB,QAAQ,GAAG,CAAC,CAAC,GAAGU,gBAAgB;AACzC,CAAC;AAAA"}