{"version":3,"file":"mergeHandlers.js","names":["mergeHandlers","newHandler","existingHandler","event","defaultPrevented"],"sources":["../../../src/utils/mergeHandlers.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { SyntheticEvent } from 'react'\n\n/**\n * Merges 2 optional event handlers\n * @param newHandler called 2nd, if the 1st does not call preventDefault()\n * @param existingHandler called 1st, use preventDefault() to avoid calling the 2nd\n */\nexport const mergeHandlers =\n  <E extends SyntheticEvent>(\n    newHandler?: (e: E) => void,\n    existingHandler?: (e: E) => void\n  ) =>\n  (event: E) => {\n    existingHandler?.(event)\n    if (!event.defaultPrevented) {\n      newHandler?.(event)\n    }\n  }\n"],"mappings":";;;;;;;AAYO,IAAMA,aAAa,GACxB,SADWA,aAAa,CAEtBC,UAA2B,EAC3BC,eAAgC;EAAA,OAElC,UAACC,KAAQ,EAAK;IACZD,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAGC,KAAK,CAAC;IACxB,IAAI,CAACA,KAAK,CAACC,gBAAgB,EAAE;MAC3BH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAGE,KAAK,CAAC;IACrB;EACF,CAAC;AAAA;AAAA"}