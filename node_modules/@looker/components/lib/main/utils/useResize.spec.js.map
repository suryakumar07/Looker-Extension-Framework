{"version":3,"file":"useResize.spec.js","names":["globalGetBoundingClientRect","Element","prototype","getBoundingClientRect","beforeEach","jest","fn","bottom","height","left","right","toJSON","top","width","x","y","afterEach","ResizeComponent","callback","useState","element","ref","useResize","describe","test","render","expect","toHaveBeenCalledTimes","globalConsole","global","console","error","message","Error","ReactDOMServer","renderToString","not","toHaveBeenCalled"],"sources":["../../../src/utils/useResize.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { render } from '@testing-library/react'\nimport React, { useState } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport { useResize, SafeSSRProvider } from './'\n\n/* eslint-disable-next-line @typescript-eslint/unbound-method */\nconst globalGetBoundingClientRect = Element.prototype.getBoundingClientRect\n\nbeforeEach(() => {\n  /* eslint-disable-next-line @typescript-eslint/unbound-method */\n  Element.prototype.getBoundingClientRect = jest.fn(() => {\n    return {\n      bottom: 0,\n      height: 30,\n      left: 0,\n      right: 0,\n      toJSON: jest.fn(),\n      top: 0,\n      width: 360,\n      x: 0,\n      y: 0,\n    }\n  })\n})\n\nafterEach(() => {\n  /* eslint-disable-next-line @typescript-eslint/unbound-method */\n  Element.prototype.getBoundingClientRect = globalGetBoundingClientRect\n})\n\nconst ResizeComponent = ({ callback }: { callback: () => void }) => {\n  const [element, ref] = useState<HTMLDivElement | null>(null)\n  useResize(element, callback)\n  return <div ref={ref} />\n}\n\ndescribe('useResize', () => {\n  test('calls the callback', () => {\n    const callback = jest.fn()\n    render(<ResizeComponent callback={callback} />)\n    expect(callback).toHaveBeenCalledTimes(1)\n  })\n\n  test('No useLayoutEffect warning with SSR', () => {\n    // Throw an error on console.error so the test would fail\n    // with the React useLayoutEffect error\n    const globalConsole = global.console\n    global.console = {\n      ...globalConsole,\n      error: (message: string) => {\n        throw new Error(message)\n      },\n    }\n\n    const callback = jest.fn()\n    // eslint-disable-next-line testing-library/render-result-naming-convention\n    ReactDOMServer.renderToString(\n      <SafeSSRProvider>\n        <ResizeComponent callback={callback} />\n      </SafeSSRProvider>\n    )\n    // useEffect also doesn't run, but it doesn't warn\n    expect(callback).not.toHaveBeenCalled()\n\n    global.console = globalConsole\n  })\n})\n"],"mappings":";;;;;;AAKA;AACA;AACA;AACA;AAA+C;AAAA;AAAA;AAAA;AAG/C,IAAMA,2BAA2B,GAAGC,OAAO,CAACC,SAAS,CAACC,qBAAqB;AAE3EC,UAAU,CAAC,YAAM;EAEfH,OAAO,CAACC,SAAS,CAACC,qBAAqB,GAAGE,IAAI,CAACC,EAAE,CAAC,YAAM;IACtD,OAAO;MACLC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAEN,IAAI,CAACC,EAAE,EAAE;MACjBM,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,GAAG;MACVC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACL,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFC,SAAS,CAAC,YAAM;EAEdf,OAAO,CAACC,SAAS,CAACC,qBAAqB,GAAGH,2BAA2B;AACvE,CAAC,CAAC;AAEF,IAAMiB,eAAe,GAAG,SAAlBA,eAAe,OAA+C;EAAA,IAAzCC,QAAQ,QAARA,QAAQ;EACjC,gBAAuB,IAAAC,gBAAQ,EAAwB,IAAI,CAAC;IAAA;IAArDC,OAAO;IAAEC,GAAG;EACnB,IAAAC,WAAS,EAACF,OAAO,EAAEF,QAAQ,CAAC;EAC5B,OAAO;IAAK,GAAG,EAAEG;EAAI,EAAG;AAC1B,CAAC;AAEDE,QAAQ,CAAC,WAAW,EAAE,YAAM;EAC1BC,IAAI,CAAC,oBAAoB,EAAE,YAAM;IAC/B,IAAMN,QAAQ,GAAGb,IAAI,CAACC,EAAE,EAAE;IAC1B,IAAAmB,aAAM,EAAC,iCAAC,eAAe;MAAC,QAAQ,EAAEP;IAAS,EAAG,CAAC;IAC/CQ,MAAM,CAACR,QAAQ,CAAC,CAACS,qBAAqB,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC;EAEFH,IAAI,CAAC,qCAAqC,EAAE,YAAM;IAGhD,IAAMI,aAAa,GAAGC,MAAM,CAACC,OAAO;IACpCD,MAAM,CAACC,OAAO,mCACTF,aAAa;MAChBG,KAAK,EAAE,eAACC,OAAe,EAAK;QAC1B,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC;MAC1B;IAAC,EACF;IAED,IAAMd,QAAQ,GAAGb,IAAI,CAACC,EAAE,EAAE;IAE1B4B,kBAAc,CAACC,cAAc,CAC3B,iCAAC,iBAAe,QACd,iCAAC,eAAe;MAAC,QAAQ,EAAEjB;IAAS,EAAG,CACvB,CACnB;IAEDQ,MAAM,CAACR,QAAQ,CAAC,CAACkB,GAAG,CAACC,gBAAgB,EAAE;IAEvCR,MAAM,CAACC,OAAO,GAAGF,aAAa;EAChC,CAAC,CAAC;AACJ,CAAC,CAAC"}