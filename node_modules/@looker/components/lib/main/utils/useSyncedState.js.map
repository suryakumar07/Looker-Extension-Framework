{"version":3,"file":"useSyncedState.js","names":["useSyncedState","prop","useState","state","setState","isMountedRef","useRef","useEffect","current"],"sources":["../../../src/utils/useSyncedState.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Dispatch, SetStateAction } from 'react'\nimport { useRef, useEffect, useState } from 'react'\n\n/**\n * A version of useState that is synced with a prop\n * @param prop The prop to sync state to\n * @returns the current state value\n */\nexport const useSyncedState = <S>(\n  prop: S\n): [S, Dispatch<SetStateAction<S>>] => {\n  const [state, setState] = useState(prop)\n  const isMountedRef = useRef(false)\n  useEffect(() => {\n    if (isMountedRef.current) {\n      setState(prop)\n    }\n    isMountedRef.current = true\n  }, [prop])\n  return [state, setState]\n}\n"],"mappings":";;;;;;;;AAMA;;AAOO,IAAMA,cAAc,GAAG,SAAjBA,cAAc,CACzBC,IAAO,EAC8B;EACrC,gBAA0B,IAAAC,eAAQ,EAACD,IAAI,CAAC;IAAA;IAAjCE,KAAK;IAAEC,QAAQ;EACtB,IAAMC,YAAY,GAAG,IAAAC,aAAM,EAAC,KAAK,CAAC;EAClC,IAAAC,gBAAS,EAAC,YAAM;IACd,IAAIF,YAAY,CAACG,OAAO,EAAE;MACxBJ,QAAQ,CAACH,IAAI,CAAC;IAChB;IACAI,YAAY,CAACG,OAAO,GAAG,IAAI;EAC7B,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EACV,OAAO,CAACE,KAAK,EAAEC,QAAQ,CAAC;AAC1B,CAAC;AAAA"}