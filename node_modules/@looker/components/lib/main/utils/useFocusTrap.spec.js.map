{"version":3,"file":"useFocusTrap.spec.js","names":["beforeEach","jest","useFakeTimers","afterEach","runOnlyPendingTimers","useRealTimers","Inner","children","clickOutsideDeactivates","useFocusTrap","ref","useToggle","value","setOff","toggle","FocusTrapComponent","props","Surface","describe","test","render","screen","getByText","fireEvent","click","waitFor","expect","getByTestId","toHaveFocus","renderWithTheme","getByLabelText","inputElements","display","footerElement","firstTabbableElement","act","e","toMatchInlineSnapshot","focus","otherButton","toggleInner","getAllByText","closeButtons","CycleFocus","last","keyDown","key","first","shiftKey","input","getByRole","userEvent","surface","outside","label","select","getByPlaceholderText","not"],"sources":["../../../src/utils/useFocusTrap.spec.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { FocusTrapProvider } from '@looker/components-providers'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { act, fireEvent, render, screen, waitFor } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport type { ReactNode } from 'react'\nimport React from 'react'\nimport { FieldSelect, FieldText } from '../Form/Fields'\nimport { useFocusTrap, useToggle } from './'\n\nbeforeEach(() => {\n  jest.useFakeTimers()\n})\nafterEach(() => {\n  jest.runOnlyPendingTimers()\n  jest.useRealTimers()\n})\n\ninterface TestProps {\n  clickOutsideDeactivates?: boolean\n  children?: ReactNode\n}\n\nconst Inner = ({ children, clickOutsideDeactivates }: TestProps) => {\n  const [, ref] = useFocusTrap({ clickOutsideDeactivates })\n  const { value, setOff, toggle } = useToggle()\n  return (\n    <>\n      {value && (\n        <div ref={ref}>\n          {children}\n          <button tabIndex={-1} onClick={setOff}>\n            Close\n          </button>\n        </div>\n      )}\n      <button onClick={toggle}>toggle</button>\n      <button onClick={setOff}>Another button</button>\n    </>\n  )\n}\n\nconst FocusTrapComponent = (props: TestProps) => {\n  return (\n    <FocusTrapProvider>\n      <Inner {...props} />\n    </FocusTrapProvider>\n  )\n}\n\nconst Surface = ({ children }: React.PropsWithChildren<unknown>) => (\n  <div tabIndex={-1} data-testid=\"surface\" data-overlay-surface=\"true\">\n    {children}\n  </div>\n)\n\ndescribe('useFocusTrap', () => {\n  describe('initial focus', () => {\n    test('focus starts on surface', async () => {\n      render(\n        <FocusTrapComponent>\n          <Surface />\n        </FocusTrapComponent>\n      )\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n\n      await waitFor(() => expect(screen.getByTestId('surface')).toHaveFocus())\n    })\n\n    test('focus starts on autoFocus element', async () => {\n      renderWithTheme(\n        <FocusTrapComponent>\n          <Surface>\n            <FieldText label=\"Text field A\" />\n            <FieldText label=\"Text field B\" autoFocus />\n          </Surface>\n        </FocusTrapComponent>\n      )\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n\n      await waitFor(() =>\n        expect(screen.getByLabelText('Text field B')).toHaveFocus()\n      )\n    })\n\n    describe('focus starts on tabbable element by priority', () => {\n      const inputElements = (\n        <>\n          <input type=\"hidden\" />\n          <FieldText label=\"Hidden text field\" style={{ display: 'none' }} />\n          <FieldText label=\"Text field\" />\n        </>\n      )\n      const footerElement = (\n        <footer>\n          <button>Footer button</button>\n        </footer>\n      )\n      const firstTabbableElement = <button>First button</button>\n\n      test('input element is 1st priority', async () => {\n        renderWithTheme(\n          <FocusTrapComponent>\n            <Surface>\n              {firstTabbableElement}\n              {footerElement}\n              {inputElements}\n            </Surface>\n          </FocusTrapComponent>\n        )\n        const toggle = screen.getByText('toggle')\n        fireEvent.click(toggle)\n\n        await waitFor(() =>\n          expect(screen.getByLabelText('Text field')).toHaveFocus()\n        )\n      })\n\n      test('footer element is 2nd priority', async () => {\n        renderWithTheme(\n          <FocusTrapComponent>\n            <Surface>\n              {firstTabbableElement}\n              {footerElement}\n            </Surface>\n          </FocusTrapComponent>\n        )\n        const toggle = screen.getByText('toggle')\n        fireEvent.click(toggle)\n\n        await waitFor(() =>\n          expect(screen.getByText('Footer button')).toHaveFocus()\n        )\n      })\n\n      test('first tabbable element is 3rd priority', async () => {\n        renderWithTheme(\n          <FocusTrapComponent>\n            <Surface>\n              {firstTabbableElement}\n              <button>Other button</button>\n              <footer />\n            </Surface>\n          </FocusTrapComponent>\n        )\n        const toggle = screen.getByText('toggle')\n        fireEvent.click(toggle)\n\n        await waitFor(() =>\n          expect(screen.getByText('First button')).toHaveFocus()\n        )\n      })\n    })\n\n    test('error without autoFocus or surface', async () => {\n      renderWithTheme(<FocusTrapComponent />)\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n      act(() => {\n        try {\n          jest.runOnlyPendingTimers()\n        } catch (e) {\n          expect(e).toMatchInlineSnapshot(\n            `[Error: Your focus trap needs to have at least one focusable element]`\n          )\n        }\n      })\n    })\n  })\n\n  describe('return focus', () => {\n    test('focus returns to trigger', async () => {\n      render(\n        <FocusTrapComponent>\n          <Surface />\n        </FocusTrapComponent>\n      )\n      const toggle = screen.getByText('toggle')\n      toggle.focus()\n      fireEvent.click(toggle)\n\n      await waitFor(() => expect(screen.getByTestId('surface')).toHaveFocus())\n\n      fireEvent.click(toggle)\n      await waitFor(() => expect(toggle).toHaveFocus())\n    })\n\n    test('focus does not return to trigger', async () => {\n      render(\n        <FocusTrapComponent>\n          <Surface />\n        </FocusTrapComponent>\n      )\n      const toggle = screen.getByText('toggle')\n      toggle.focus()\n      fireEvent.click(toggle)\n\n      await waitFor(() => expect(screen.getByTestId('surface')).toHaveFocus())\n\n      const otherButton = screen.getByText('Another button')\n      fireEvent.click(otherButton)\n      otherButton.focus()\n      expect(otherButton).toHaveFocus()\n    })\n\n    test('With nested traps', async () => {\n      render(\n        <FocusTrapComponent>\n          <Surface>\n            <Inner>\n              <Surface />\n            </Inner>\n          </Surface>\n        </FocusTrapComponent>\n      )\n      const toggle = screen.getByText('toggle')\n      toggle.focus()\n      fireEvent.click(toggle)\n\n      const toggleInner = screen.getAllByText('toggle')[0]\n      toggleInner.focus()\n      fireEvent.click(toggleInner)\n\n      const closeButtons = screen.getAllByText('Close')\n      fireEvent.click(closeButtons[0])\n      fireEvent.click(closeButtons[1])\n      await waitFor(() => expect(toggle).toHaveFocus())\n    })\n  })\n\n  describe('cycle focus when tabbing', () => {\n    const CycleFocus = () => (\n      <FocusTrapComponent>\n        <Surface>\n          <button>First</button>\n          <input type=\"text\" />\n          <a href=\"#\">Last</a>\n          <span>Not tabbable</span>\n        </Surface>\n      </FocusTrapComponent>\n    )\n\n    test('focus the first tabbable element after tabbing from the last', async () => {\n      render(<CycleFocus />)\n\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n\n      const last = screen.getByText('Last')\n      last.focus()\n      fireEvent.keyDown(last, { key: 'Tab' })\n      expect(screen.getByText('First')).toHaveFocus()\n    })\n\n    test('focus the last tabbable element after shift-tabbing from the first', async () => {\n      render(<CycleFocus />)\n\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n\n      const first = screen.getByText('First')\n      first.focus()\n      fireEvent.keyDown(first, { key: 'Tab', shiftKey: true })\n      expect(screen.getByText('Last')).toHaveFocus()\n    })\n\n    test('do nothing when not focused on first or last tabbable element', async () => {\n      render(<CycleFocus />)\n\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n\n      const input = screen.getByRole('textbox')\n      input.focus()\n      // In jsdom a keydown event doesn't actually move focus\n      // but useFocusTrap uses the keydown event to cycle focus on first & last\n      // because using focus/blur events would be \"too late\"\n      fireEvent.keyDown(input, { key: 'Tab' })\n      expect(input).toHaveFocus()\n    })\n  })\n\n  describe('click outside', () => {\n    test('does not deactivate by default', async () => {\n      render(\n        <>\n          <FocusTrapComponent>\n            <Surface />\n          </FocusTrapComponent>\n          <button>outside</button>\n        </>\n      )\n      userEvent.click(screen.getByText('toggle'))\n\n      const surface = screen.getByTestId('surface')\n      await waitFor(() => expect(surface).toHaveFocus())\n\n      userEvent.click(screen.getByText('outside'))\n      expect(surface).toHaveFocus()\n    })\n    test('with clickOutsideDeactivates', async () => {\n      render(\n        <>\n          <FocusTrapComponent clickOutsideDeactivates>\n            <Surface />\n          </FocusTrapComponent>\n          <button>outside</button>\n        </>\n      )\n      userEvent.click(screen.getByText('toggle'))\n\n      const surface = screen.getByTestId('surface')\n      await waitFor(() => expect(surface).toHaveFocus())\n\n      const outside = screen.getByText('outside')\n      userEvent.click(outside)\n      expect(outside).toHaveFocus()\n    })\n  })\n})\n\n// https://github.com/looker-open-source/components/issues/2953\n//\n// This test was originally failing in Firefox but we can test it and expect\n// it to work in any browser because the fix required that we maintain our\n// own record of activeElement, which is used in all browsers.\n//\n// The fix itself could not be feature detected without essentially running\n// this test at runtime in production code.\ntest('Focus maintained with Select', async () => {\n  // It is important to keep the InputText before the Select because the\n  // bug was caused by the InputText being focused after selecting a value.\n  // The Select should be refocused after selecting a value instead.\n  renderWithTheme(\n    <Inner>\n      <FieldText placeholder=\"Input Text\" />\n      <FieldSelect\n        options={[{ label: '1', value: '1' }]}\n        placeholder=\"Components Select\"\n      />\n    </Inner>\n  )\n\n  // Toggle the children on <Inner />.\n  fireEvent.click(screen.getByText('toggle'))\n\n  // We this represents the host div, not the internal input.\n  const select = screen.getByPlaceholderText('Components Select')\n\n  // Focus so the activeElement gets recorded. Firing the click event will\n  // not do this.\n  fireEvent.focus(select)\n\n  // Click so the dropdown is opened. Focusing will not do this.\n  fireEvent.click(select)\n\n  // Selects the LI representing the first value. Firing this on the select\n  // option will not change the value.\n  fireEvent.click(screen.getByText('1'))\n\n  // The select should briefly not have focus because this was clicked.\n  expect(select).not.toHaveFocus()\n\n  // We must wait for the select to be refocused on the next event loop.\n  await waitFor(() => {\n    expect(select).toHaveFocus()\n  })\n})\n"],"mappings":"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"}