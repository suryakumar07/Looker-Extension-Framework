{"version":3,"file":"useOverflow.js","names":["useOverflow","ref","useCallbackRef","element","callbackRef","useState","hasOverflow","setHasOverflow","height","setHeight","handleResize","useCallback","offsetHeight","useResize","useEffect","scrollHeight"],"sources":["../../../../src/utils/useOverflow/useOverflow.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useResize } from '../useResize'\nimport { useCallbackRef } from '../useCallbackRef'\n\nexport type UseOverflowProps = {\n  hasOverflow: boolean\n}\n\nexport const useOverflow = (\n  ref?: Ref<HTMLElement>\n): [boolean, (node: HTMLElement | null) => void] => {\n  const [element, callbackRef] = useCallbackRef(ref)\n  const [hasOverflow, setHasOverflow] = useState(false)\n  const [height, setHeight] = useState(0)\n\n  const handleResize = useCallback(() => {\n    if (element) {\n      setHeight(element.offsetHeight)\n    }\n  }, [element])\n\n  useResize(element, handleResize)\n\n  useEffect(() => {\n    if (element) {\n      setHasOverflow(element.offsetHeight < element.scrollHeight)\n    }\n  }, [height, element])\n\n  return [hasOverflow, callbackRef]\n}\n"],"mappings":";;;;;;;;AAMA;AACA;AACA;;AAMO,IAAMA,WAAW,GAAG,SAAdA,WAAW,CACtBC,GAAsB,EAC4B;EAClD,sBAA+B,IAAAC,+BAAc,EAACD,GAAG,CAAC;IAAA;IAA3CE,OAAO;IAAEC,WAAW;EAC3B,gBAAsC,IAAAC,eAAQ,EAAC,KAAK,CAAC;IAAA;IAA9CC,WAAW;IAAEC,cAAc;EAClC,iBAA4B,IAAAF,eAAQ,EAAC,CAAC,CAAC;IAAA;IAAhCG,MAAM;IAAEC,SAAS;EAExB,IAAMC,YAAY,GAAG,IAAAC,kBAAW,EAAC,YAAM;IACrC,IAAIR,OAAO,EAAE;MACXM,SAAS,CAACN,OAAO,CAACS,YAAY,CAAC;IACjC;EACF,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,IAAAU,oBAAS,EAACV,OAAO,EAAEO,YAAY,CAAC;EAEhC,IAAAI,gBAAS,EAAC,YAAM;IACd,IAAIX,OAAO,EAAE;MACXI,cAAc,CAACJ,OAAO,CAACS,YAAY,GAAGT,OAAO,CAACY,YAAY,CAAC;IAC7D;EACF,CAAC,EAAE,CAACP,MAAM,EAAEL,OAAO,CAAC,CAAC;EAErB,OAAO,CAACG,WAAW,EAAEF,WAAW,CAAC;AACnC,CAAC;AAAA"}