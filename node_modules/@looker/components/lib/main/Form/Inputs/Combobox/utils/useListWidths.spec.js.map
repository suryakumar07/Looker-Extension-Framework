{"version":3,"file":"useListWidths.spec.js","names":["getBoundingClientRectMock","jest","fn","mockWrapper","getBoundingClientRect","TestComponent","props","useListWidths","wrapperElement","minWidth","width","describe","beforeEach","mockImplementation","afterEach","mockClear","test","render","expect","screen","getByTestId","toHaveTextContent","not","toHaveBeenCalled","toHaveBeenCalledTimes"],"sources":["../../../../../../src/Form/Inputs/Combobox/utils/useListWidths.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { screen, render } from '@testing-library/react'\nimport type { UseListWidthProps } from './useListWidths'\nimport { useListWidths } from './useListWidths'\n\nconst getBoundingClientRectMock = jest.fn()\n\nconst mockWrapper = {\n  getBoundingClientRect: getBoundingClientRectMock,\n} as unknown as HTMLElement\n\nfunction TestComponent(props: UseListWidthProps) {\n  const { minWidth, width } = useListWidths({\n    ...props,\n    wrapperElement: mockWrapper,\n  })\n  return (\n    <div>\n      <span data-testid=\"minWidth\">{minWidth}</span>\n      <span data-testid=\"width\">{width}</span>\n    </div>\n  )\n}\n\ndescribe('useListWidths', () => {\n  beforeEach(() => {\n    getBoundingClientRectMock.mockImplementation(() => ({ width: 1234 }))\n  })\n  afterEach(() => {\n    getBoundingClientRectMock.mockClear()\n  })\n\n  test('getBoundingClientRect is not called when list is closed', () => {\n    render(<TestComponent />)\n    expect(screen.getByTestId('width')).toHaveTextContent('auto')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('')\n    expect(mockWrapper.getBoundingClientRect).not.toHaveBeenCalled()\n  })\n\n  test('getBoundingClientRect is not called when width prop is defined (except auto)', () => {\n    render(<TestComponent isVisible width=\"90vw\" />)\n    expect(screen.getByTestId('width')).toHaveTextContent('90vw')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('')\n    expect(mockWrapper.getBoundingClientRect).not.toHaveBeenCalled()\n  })\n\n  test('getBoundingClientRect is not called when width prop is auto and minWidth is defined', () => {\n    render(<TestComponent isVisible width=\"auto\" minWidth={101} />)\n    expect(screen.getByTestId('width')).toHaveTextContent('auto')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('101')\n    expect(mockWrapper.getBoundingClientRect).not.toHaveBeenCalled()\n  })\n\n  test('getBoundingClientRect is called when width prop is undefined', () => {\n    render(<TestComponent isVisible />)\n    expect(screen.getByTestId('width')).toHaveTextContent('1234')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('')\n    expect(mockWrapper.getBoundingClientRect).toHaveBeenCalledTimes(1)\n  })\n\n  test('getBoundingClientRect is called when width prop is auto', () => {\n    render(<TestComponent isVisible width=\"auto\" />)\n    expect(screen.getByTestId('width')).toHaveTextContent('auto')\n    expect(screen.getByTestId('minWidth')).toHaveTextContent('1234')\n    expect(mockWrapper.getBoundingClientRect).toHaveBeenCalledTimes(1)\n  })\n})\n"],"mappings":"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"}