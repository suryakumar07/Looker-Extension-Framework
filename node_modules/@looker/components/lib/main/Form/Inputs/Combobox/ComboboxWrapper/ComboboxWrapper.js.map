{"version":3,"file":"ComboboxWrapper.js","names":["ComboboxWrapper","forwardRef","ref","isVisible","rest","role","id","undefined","wrapperAriaLabel"],"sources":["../../../../../../src/Form/Inputs/Combobox/ComboboxWrapper/ComboboxWrapper.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type {\n  CompatibleHTMLProps,\n  FlexboxProps,\n  LayoutProps,\n  TypographyProps,\n  SpaceProps,\n} from '@looker/design-tokens'\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport { Box } from '../../../../Layout'\n\nexport interface ComboboxWrapperProps\n  extends FlexboxProps,\n    Omit<LayoutProps, 'size'>,\n    SpaceProps,\n    TypographyProps,\n    Omit<\n      CompatibleHTMLProps<HTMLDivElement>,\n      'readOnly' | 'onChange' | 'value' | 'defaultValue'\n    > {\n  /**\n   * The optional a11y aria label for combobox Wrapper element that has popup\n   */\n  wrapperAriaLabel?: string\n}\n\nexport const ComboboxWrapper = forwardRef(\n  (\n    {\n      isVisible,\n      ...rest\n    }: ComboboxWrapperProps & {\n      isVisible: boolean\n    },\n    ref: Ref<HTMLDivElement>\n  ) => {\n    return (\n      <Box\n        {...rest}\n        ref={ref}\n        role={rest.role ? rest.role : 'combobox'}\n        aria-haspopup=\"true\"\n        aria-owns={isVisible ? `listbox-${rest.id}` : undefined}\n        aria-label={`${rest.wrapperAriaLabel || ''} combobox`}\n        aria-expanded={isVisible}\n      />\n    )\n  }\n)\n"],"mappings":";;;;;;;;;;AAaA;AACA;AAAwC;AAAA;AAAA;AAiBjC,IAAMA,eAAe,GAAG,IAAAC,iBAAU,EACvC,gBAOEC,GAAwB,EACrB;EAAA,IANDC,SAAS,QAATA,SAAS;IACNC,IAAI;EAMT,OACE,gCAAC,WAAG,gCACEA,IAAI;IACR,GAAG,EAAEF,GAAI;IACT,IAAI,EAAEE,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACC,IAAI,GAAG,UAAW;IACzC,iBAAc,MAAM;IACpB,aAAWF,SAAS,qBAAcC,IAAI,CAACE,EAAE,IAAKC,SAAU;IACxD,wBAAeH,IAAI,CAACI,gBAAgB,IAAI,EAAE,cAAY;IACtD,iBAAeL;EAAU,GACzB;AAEN,CAAC,CACF;AAAA"}