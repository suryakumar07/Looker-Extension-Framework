{"version":3,"file":"DateTimeFormat.js","names":["DateTimeFormat","children","Date","now","date","format","locale","time","timeZone","formatDateString","error"],"sources":["../../../../../src/Form/Inputs/DateTimeFormat/DateTimeFormat.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { Locale } from 'date-fns'\nimport type { DateFormats, DateTimeOptions } from '../../../Calendar/utils'\nimport { formatDateString } from '../../../Calendar/utils'\n\nexport type DateTimeFormatProps = {\n  children?: Date\n  format?: DateFormats | string\n  /**\n   * Locale object from date-fns.\n   * @example\n   * import ko from 'date-fns/locale/ko'\n   */\n  locale?: Locale\n  timeZone?: string\n}\n\ntype DateTimeFormatExtensionProps = DateTimeFormatProps & DateTimeOptions\n\nexport const DateTimeFormat = ({\n  children = new Date(Date.now()),\n  date = true,\n  format = 'medium',\n  locale,\n  time = true,\n  timeZone,\n}: DateTimeFormatExtensionProps) => {\n  try {\n    return (\n      <>\n        {formatDateString(children, format, locale, timeZone, { date, time })}\n      </>\n    )\n  } catch (error) {\n    return <>{error}</>\n  }\n}\n"],"mappings":";;;;;;;AAKA;AAGA;;AAgBO,IAAMA,cAAc,GAAG,SAAjBA,cAAc,OAOS;EAAA,yBANlCC,QAAQ;IAARA,QAAQ,8BAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC;IAAA,iBAC/BC,IAAI;IAAJA,IAAI,0BAAG,IAAI;IAAA,mBACXC,MAAM;IAANA,MAAM,4BAAG,QAAQ;IACjBC,MAAM,QAANA,MAAM;IAAA,iBACNC,IAAI;IAAJA,IAAI,0BAAG,IAAI;IACXC,QAAQ,QAARA,QAAQ;EAER,IAAI;IACF,OACE,kEACG,IAAAC,uBAAgB,EAACR,QAAQ,EAAEI,MAAM,EAAEC,MAAM,EAAEE,QAAQ,EAAE;MAAEJ,IAAI,EAAJA,IAAI;MAAEG,IAAI,EAAJA;IAAK,CAAC,CAAC,CACpE;EAEP,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAO,kEAAGA,KAAK,CAAI;EACrB;AACF,CAAC;AAAA"}