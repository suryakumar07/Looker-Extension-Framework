{"version":3,"file":"DateTimeFormat.spec.js","names":["date","Date","describe","test","render","container","expect","toMatchInlineSnapshot","ar"],"sources":["../../../../../src/Form/Inputs/DateTimeFormat/DateTimeFormat.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { render } from '@testing-library/react'\nimport React from 'react'\nimport ar from 'date-fns/locale/ar-SA'\nimport { DateTimeFormat } from './DateTimeFormat'\nconst date = new Date('January 25, 1988 11:58:03')\n\ndescribe('DateTimeFormat', () => {\n  test('renders', () => {\n    const { container } = render(<DateTimeFormat>{date}</DateTimeFormat>)\n    expect(container).toMatchInlineSnapshot(`\n      <div>\n        Jan 25, 1988, 11:58:03 AM\n      </div>\n    `)\n  })\n\n  test('specific locale', () => {\n    const { container } = render(\n      <DateTimeFormat locale={ar}>{date}</DateTimeFormat>\n    )\n    expect(container).toMatchInlineSnapshot(`\n      <div>\n        ينا 25, 1988, 11:58:03 ص\n      </div>\n    `)\n  })\n\n  test('displays timeZone prop if one is passed', () => {\n    const { container } = render(\n      <DateTimeFormat timeZone=\"Asia/Kolkata\">{date}</DateTimeFormat>\n    )\n    expect(container).toMatchInlineSnapshot(`\n      <div>\n        Jan 26, 1988, 1:28:03 AM GMT+5:30\n      </div>\n    `)\n  })\n\n  test('format prop short if one is passed', () => {\n    const { container } = render(\n      <DateTimeFormat format=\"short\">{date}</DateTimeFormat>\n    )\n    expect(container).toMatchInlineSnapshot(`\n      <div>\n        01/25/1988, 11:58 AM\n      </div>\n    `)\n  })\n\n  test('format prop long if one is passed', () => {\n    const { container } = render(\n      <DateTimeFormat format=\"long\">{date}</DateTimeFormat>\n    )\n    expect(container).toMatchInlineSnapshot(`\n      <div>\n        January 25th, 1988 at 11:58:03 AM GMT-8\n      </div>\n    `)\n  })\n\n  test('format prop full if one is passed', () => {\n    const { container } = render(\n      <DateTimeFormat format=\"full\">{date}</DateTimeFormat>\n    )\n    expect(container).toMatchInlineSnapshot(`\n      <div>\n        Monday, January 25th, 1988 at 11:58:03 AM GMT-08:00\n      </div>\n    `)\n  })\n})\n"],"mappings":";;;AAKA;AACA;AACA;AACA;;AACA,IAAMA,IAAI,GAAG,IAAIC,IAAI,CAAC,2BAA2B,CAAC;AAElDC,QAAQ,CAAC,gBAAgB,EAAE,YAAM;EAC/BC,IAAI,CAAC,SAAS,EAAE,YAAM;IACpB,cAAsB,IAAAC,aAAM,EAAC,iCAAC,8BAAc,QAAEJ,IAAI,CAAkB,CAAC;MAA7DK,SAAS,WAATA,SAAS;IACjBC,MAAM,CAACD,SAAS,CAAC,CAACE,qBAAqB,wEAIrC;EACJ,CAAC,CAAC;EAEFJ,IAAI,CAAC,iBAAiB,EAAE,YAAM;IAC5B,eAAsB,IAAAC,aAAM,EAC1B,iCAAC,8BAAc;QAAC,MAAM,EAAEI;MAAG,GAAER,IAAI,CAAkB,CACpD;MAFOK,SAAS,YAATA,SAAS;IAGjBC,MAAM,CAACD,SAAS,CAAC,CAACE,qBAAqB,2FAIrC;EACJ,CAAC,CAAC;EAEFJ,IAAI,CAAC,yCAAyC,EAAE,YAAM;IACpD,eAAsB,IAAAC,aAAM,EAC1B,iCAAC,8BAAc;QAAC,QAAQ,EAAC;MAAc,GAAEJ,IAAI,CAAkB,CAChE;MAFOK,SAAS,YAATA,SAAS;IAGjBC,MAAM,CAACD,SAAS,CAAC,CAACE,qBAAqB,gFAIrC;EACJ,CAAC,CAAC;EAEFJ,IAAI,CAAC,oCAAoC,EAAE,YAAM;IAC/C,eAAsB,IAAAC,aAAM,EAC1B,iCAAC,8BAAc;QAAC,MAAM,EAAC;MAAO,GAAEJ,IAAI,CAAkB,CACvD;MAFOK,SAAS,YAATA,SAAS;IAGjBC,MAAM,CAACD,SAAS,CAAC,CAACE,qBAAqB,mEAIrC;EACJ,CAAC,CAAC;EAEFJ,IAAI,CAAC,mCAAmC,EAAE,YAAM;IAC9C,eAAsB,IAAAC,aAAM,EAC1B,iCAAC,8BAAc;QAAC,MAAM,EAAC;MAAM,GAAEJ,IAAI,CAAkB,CACtD;MAFOK,SAAS,YAATA,SAAS;IAGjBC,MAAM,CAACD,SAAS,CAAC,CAACE,qBAAqB,sFAIrC;EACJ,CAAC,CAAC;EAEFJ,IAAI,CAAC,mCAAmC,EAAE,YAAM;IAC9C,eAAsB,IAAAC,aAAM,EAC1B,iCAAC,8BAAc;QAAC,MAAM,EAAC;MAAM,GAAEJ,IAAI,CAAkB,CACtD;MAFOK,SAAS,YAATA,SAAS;IAGjBC,MAAM,CAACD,SAAS,CAAC,CAACE,qBAAqB,kGAIrC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}