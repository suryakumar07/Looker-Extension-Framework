{"version":3,"file":"useMixedStateCheckbox.js","names":["useMixedStateCheckbox","parent","children","useEffect","every","setState","some","handleParentChange","newState","state","map","child"],"sources":["../../../../../src/Form/Inputs/Checkbox/useMixedStateCheckbox.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { Dispatch, SetStateAction } from 'react'\nimport { useEffect } from 'react'\nimport some from 'lodash/some'\nimport every from 'lodash/every'\nimport type { MixedBoolean } from './Checkbox'\n\nexport interface CheckboxTreeAction {\n  state: MixedBoolean\n  setState: Dispatch<SetStateAction<MixedBoolean>>\n}\n\nexport interface CheckboxTree {\n  parent: CheckboxTreeAction\n  children: CheckboxTreeAction[]\n}\n\nexport function useMixedStateCheckbox({ parent, children }: CheckboxTree) {\n  useEffect(() => {\n    if (every(children, ['state', true])) {\n      parent.setState(true)\n    } else if (some(children, ['state', true])) {\n      parent.setState('mixed')\n    } else {\n      parent.setState(false)\n    }\n  }, [children, parent])\n\n  const handleParentChange = () => {\n    const newState = parent.state !== true\n    parent.setState(newState)\n    children.map(child => child.setState(newState))\n  }\n\n  return handleParentChange\n}\n"],"mappings":";;;;;;;AAKA;AACA;AACA;;AAaO,SAASA,qBAAqB,OAAqC;EAAA,IAAlCC,MAAM,QAANA,MAAM;IAAEC,QAAQ,QAARA,QAAQ;EACtD,IAAAC,gBAAS,EAAC,YAAM;IACd,IAAI,IAAAC,iBAAK,EAACF,QAAQ,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE;MACpCD,MAAM,CAACI,QAAQ,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM,IAAI,IAAAC,gBAAI,EAACJ,QAAQ,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,EAAE;MAC1CD,MAAM,CAACI,QAAQ,CAAC,OAAO,CAAC;IAC1B,CAAC,MAAM;MACLJ,MAAM,CAACI,QAAQ,CAAC,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,CAACH,QAAQ,EAAED,MAAM,CAAC,CAAC;EAEtB,IAAMM,kBAAkB,GAAG,SAArBA,kBAAkB,GAAS;IAC/B,IAAMC,QAAQ,GAAGP,MAAM,CAACQ,KAAK,KAAK,IAAI;IACtCR,MAAM,CAACI,QAAQ,CAACG,QAAQ,CAAC;IACzBN,QAAQ,CAACQ,GAAG,CAAC,UAAAC,KAAK;MAAA,OAAIA,KAAK,CAACN,QAAQ,CAACG,QAAQ,CAAC;IAAA,EAAC;EACjD,CAAC;EAED,OAAOD,kBAAkB;AAC3B"}