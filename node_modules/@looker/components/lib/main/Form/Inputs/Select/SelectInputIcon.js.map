{"version":3,"file":"SelectInputIcon.js","names":["getOptionIcon","value","options","option","find","opt","icon","SelectInputIcon","useContext","ComboboxContext","data","inputValue","label"],"sources":["../../../../../src/Form/Inputs/Select/SelectInputIcon.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useContext } from 'react'\nimport { InputTextContent } from '../../Inputs/InputText'\nimport { ComboboxContext } from '../Combobox'\nimport type { SelectOptionObject } from './types'\n\nexport function getOptionIcon(value: string, options: SelectOptionObject[]) {\n  if (value && options) {\n    const option = options.find(opt => opt.value === value)\n    return option?.icon ? (\n      <InputTextContent pl=\"u2\">{option.icon}</InputTextContent>\n    ) : null\n  }\n  return null\n}\n\nexport interface SelectInputIconProps {\n  options?: SelectOptionObject[]\n}\n\nexport const SelectInputIcon = ({ options }: SelectInputIconProps) => {\n  const {\n    data: { option, inputValue },\n  } = useContext(ComboboxContext)\n  if (!options || !option) return null\n  // Don't show the icon if the user is filtering\n  if (option.label !== inputValue) return null\n\n  return getOptionIcon(option.value, options)\n}\n"],"mappings":";;;;;;;;AAKA;AACA;AACA;AAA6C;AAAA;;AAGtC,SAASA,aAAa,CAACC,KAAa,EAAEC,OAA6B,EAAE;EAC1E,IAAID,KAAK,IAAIC,OAAO,EAAE;IACpB,IAAMC,MAAM,GAAGD,OAAO,CAACE,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACJ,KAAK,KAAKA,KAAK;IAAA,EAAC;IACvD,OAAOE,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEG,IAAI,GACjB,gCAAC,2BAAgB;MAAC,EAAE,EAAC;IAAI,GAAEH,MAAM,CAACG,IAAI,CAAoB,GACxD,IAAI;EACV;EACA,OAAO,IAAI;AACb;AAMO,IAAMC,eAAe,GAAG,SAAlBA,eAAe,OAA0C;EAAA,IAApCL,OAAO,QAAPA,OAAO;EACvC,kBAEI,IAAAM,iBAAU,EAACC,yBAAe,CAAC;IAAA,+BAD7BC,IAAI;IAAIP,MAAM,oBAANA,MAAM;IAAEQ,UAAU,oBAAVA,UAAU;EAE5B,IAAI,CAACT,OAAO,IAAI,CAACC,MAAM,EAAE,OAAO,IAAI;EAEpC,IAAIA,MAAM,CAACS,KAAK,KAAKD,UAAU,EAAE,OAAO,IAAI;EAE5C,OAAOX,aAAa,CAACG,MAAM,CAACF,KAAK,EAAEC,OAAO,CAAC;AAC7C,CAAC;AAAA"}