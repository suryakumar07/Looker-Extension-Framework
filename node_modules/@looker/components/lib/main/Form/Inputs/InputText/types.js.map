{"version":3,"file":"types.js","names":[],"sources":["../../../../../src/Form/Inputs/InputText/types.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { CompatibleHTMLProps } from '@looker/design-tokens'\nimport type { MouseEvent, ReactNode } from 'react'\nimport type { SimpleLayoutProps } from '../../../Layout/utils/simple'\nimport type { IconType } from '../../../Icon'\nimport type { InputProps, InputTextTypeProps } from '../InputProps'\n\nexport type DivMouseHandler = (e: MouseEvent<HTMLDivElement>) => void\n\nexport type InputTextBaseProps = Omit<SimpleLayoutProps, 'size'> &\n  Omit<InputProps, 'type'> &\n  InputTextTypeProps &\n  // Mouse event handlers are attached to the wrapper div\n  Pick<\n    CompatibleHTMLProps<HTMLDivElement>,\n    | 'onClick'\n    | 'onMouseDown'\n    | 'onMouseEnter'\n    | 'onMouseLeave'\n    | 'onMouseOver'\n    | 'onMouseOut'\n    | 'onMouseUp'\n  > & {\n    /**\n     * Allows the input width to resize with the value or placeholder\n     * Styles will default to `width: auto` and `display: inline-flex`\n     * Do not use with children\n     */\n    autoResize?: boolean\n    /**\n     * Don't show the error icon when validationType is 'error'\n     */\n    noErrorIcon?: boolean\n  }\n\nexport type InputTextProps = InputTextBaseProps & {\n  /**\n   * Content to place after the input\n   * If a string is used, formatting will be automatically applied\n   * If JSX is used, it will displace the built-in validation icon\n   */\n  after?: ReactNode\n  iconAfter?: IconType\n\n  /**\n   * Content to place before the input\n   * If a string is used, formatting will be automatically applied\n   */\n  before?: ReactNode\n  iconBefore?: IconType\n}\n"],"mappings":""}