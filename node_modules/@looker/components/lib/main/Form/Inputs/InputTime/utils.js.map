{"version":3,"file":"utils.js","names":["formatTimeString","number","padStart","toString","parseBase10Int","value","length","parseInt","isValidTime","map","split","hour","minute"],"sources":["../../../../../src/Form/Inputs/InputTime/utils.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport padStart from 'lodash/padStart'\nimport toString from 'lodash/toString'\nimport map from 'lodash/map'\n\nexport type TimeFormats = '12h' | '24h'\n\n// returns \"01\", \"02\", \"03\" instead of integers 1, 2, 3\nexport const formatTimeString = (number: number) => {\n  return padStart(toString(number), 2, '0')\n}\n\nexport const parseBase10Int = (value: string) =>\n  value.length ? parseInt(value, 10) : 0\n\n// take a 24 hour formatted time string ('14:34') and check whether it's a real time of day\n// rejects non-numeric inputs and illogical times ('64:1928')\nexport const isValidTime = (value?: string) => {\n  if (!value) {\n    return true\n  }\n  const [hour = 0, minute = 0] = map(value.split(':'), parseBase10Int)\n\n  if (hour < 24 && minute <= 60) {\n    return true\n  }\n\n  return false\n}\n"],"mappings":";;;;;;;;AAKA;AACA;AACA;;AAKO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,MAAc,EAAK;EAClD,OAAO,IAAAC,oBAAQ,EAAC,IAAAC,oBAAQ,EAACF,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;AAC3C,CAAC;AAAA;AAEM,IAAMG,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAa;EAAA,OAC1CA,KAAK,CAACC,MAAM,GAAGC,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC;AAAA;;AAAA;AAIjC,IAAMG,WAAW,GAAG,SAAdA,WAAW,CAAIH,KAAc,EAAK;EAC7C,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EACA,WAA+B,IAAAI,gBAAG,EAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,EAAEN,cAAc,CAAC;IAAA;IAAA;IAA7DO,IAAI,uBAAG,CAAC;IAAA;IAAEC,MAAM,wBAAG,CAAC;EAE3B,IAAID,IAAI,GAAG,EAAE,IAAIC,MAAM,IAAI,EAAE,EAAE;IAC7B,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd,CAAC;AAAA"}