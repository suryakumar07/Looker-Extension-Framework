{"version":3,"file":"OnValidationFail.js","names":["Validation","props","value","valueProp","restProps","useState","setValue","validationType","setValidationType","handleValidationFail"],"sources":["../../../../../../src/Form/Inputs/InputTime/stories/OnValidationFail.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useState } from 'react'\nimport { InputTime } from '..'\nimport type { InputTimeProps } from '..'\nimport { Code, Space, Paragraph } from '../../../..'\n\nexport default function Validation(props: InputTimeProps) {\n  const { value: valueProp = 'Stardate 2004.14', ...restProps } = props\n\n  const [value, setValue] = useState<string | undefined>(valueProp)\n  const [validationType, setValidationType] = useState<'error' | undefined>()\n  const handleValidationFail = () => {\n    setValidationType('error')\n  }\n\n  return (\n    <Space>\n      <InputTime\n        validationType={validationType}\n        value={value}\n        onValidationFail={handleValidationFail}\n        onChange={setValue}\n        {...restProps}\n      />\n      {validationType === 'error' && (\n        <Paragraph color=\"critical\">\n          Error: <Code fontSize=\"small\">{value}</Code> is not a valid 24-hour\n          time string\n        </Paragraph>\n      )}\n    </Space>\n  )\n}\n"],"mappings":";;;;;;;;;;;AAKA;AACA;AAEA;AAAoD;AAAA;AAAA;AAErC,SAASA,UAAU,CAACC,KAAqB,EAAE;EACxD,mBAAgEA,KAAK,CAA7DC,KAAK;IAAEC,SAAS,6BAAG,kBAAkB;IAAKC,SAAS,6CAAKH,KAAK;EAErE,gBAA0B,IAAAI,eAAQ,EAAqBF,SAAS,CAAC;IAAA;IAA1DD,KAAK;IAAEI,QAAQ;EACtB,iBAA4C,IAAAD,eAAQ,GAAuB;IAAA;IAApEE,cAAc;IAAEC,iBAAiB;EACxC,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,GAAS;IACjCD,iBAAiB,CAAC,OAAO,CAAC;EAC5B,CAAC;EAED,OACE,gCAAC,QAAK,QACJ,gCAAC,WAAS;IACR,cAAc,EAAED,cAAe;IAC/B,KAAK,EAAEL,KAAM;IACb,gBAAgB,EAAEO,oBAAqB;IACvC,QAAQ,EAAEH;EAAS,GACfF,SAAS,EACb,EACDG,cAAc,KAAK,OAAO,IACzB,gCAAC,YAAS;IAAC,KAAK,EAAC;EAAU,cAClB,gCAAC,OAAI;IAAC,QAAQ,EAAC;EAAO,GAAEL,KAAK,CAAQ,wCAG/C,CACK;AAEZ"}