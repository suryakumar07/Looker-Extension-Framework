{"version":3,"file":"FieldSelectMulti.js","names":["getHasValue","values","defaultValues","undefined","length","checkValueOnBlur","e","target","currentTarget","options","querySelectorAll","FieldSelectMultiComponent","forwardRef","props","ref","validationMessage","useFormContext","id","useID","pickFieldProps","omitFieldProps","type","displayName","FieldSelectMulti","styled"],"sources":["../../../../../src/Form/Fields/FieldSelectMulti/FieldSelectMulti.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { FocusEvent, Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { useID } from '../../../utils'\nimport { useFormContext } from '../../Form'\nimport type { SelectMultiProps } from '../../Inputs/Select/SelectMulti'\nimport { SelectMulti } from '../../Inputs/Select/SelectMulti'\nimport type { FloatingLabelFieldProps } from '../Field'\nimport { FloatingLabelField, omitFieldProps, pickFieldProps } from '../Field'\n\nexport interface FieldSelectMultiProps\n  extends FloatingLabelFieldProps,\n    SelectMultiProps {}\n\nconst getHasValue = ({ values, defaultValues }: SelectMultiProps) => {\n  if (values !== undefined) return values.length > 0\n  if (defaultValues !== undefined) return defaultValues.length > 0\n  return false\n}\n\nconst checkValueOnBlur = (e: FocusEvent) => {\n  const target = e.currentTarget\n  const options = target.querySelectorAll('[role=\"option\"]')\n  return options.length !== 0\n}\n\nconst FieldSelectMultiComponent = forwardRef(\n  (props: FieldSelectMultiProps, ref: Ref<HTMLInputElement>) => {\n    const validationMessage = useFormContext(props)\n    const id = useID(props.id)\n    return (\n      <FloatingLabelField\n        data-testid=\"FieldSelectMultiId\"\n        {...pickFieldProps(props)}\n        id={id}\n        ariaLabelOnly\n        validationMessage={validationMessage}\n        hasValue={getHasValue(props)}\n        checkValueOnBlur={checkValueOnBlur}\n      >\n        <SelectMulti\n          {...omitFieldProps(props)}\n          aria-describedby={`describedby-${id}`}\n          aria-labelledby={`labelledby-${id}`}\n          id={id}\n          validationType={validationMessage && validationMessage.type}\n          ref={ref}\n        />\n      </FloatingLabelField>\n    )\n  }\n)\n\nFieldSelectMultiComponent.displayName = 'FieldSelectMultiComponent'\n\nexport const FieldSelectMulti = styled(FieldSelectMultiComponent)`\n  width: 100%;\n`\n"],"mappings":";;;;;;;;;;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAA6E;AAAA;AAAA;AAM7E,IAAMA,WAAW,GAAG,SAAdA,WAAW,OAAoD;EAAA,IAA9CC,MAAM,QAANA,MAAM;IAAEC,aAAa,QAAbA,aAAa;EAC1C,IAAID,MAAM,KAAKE,SAAS,EAAE,OAAOF,MAAM,CAACG,MAAM,GAAG,CAAC;EAClD,IAAIF,aAAa,KAAKC,SAAS,EAAE,OAAOD,aAAa,CAACE,MAAM,GAAG,CAAC;EAChE,OAAO,KAAK;AACd,CAAC;AAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,CAAa,EAAK;EAC1C,IAAMC,MAAM,GAAGD,CAAC,CAACE,aAAa;EAC9B,IAAMC,OAAO,GAAGF,MAAM,CAACG,gBAAgB,CAAC,iBAAiB,CAAC;EAC1D,OAAOD,OAAO,CAACL,MAAM,KAAK,CAAC;AAC7B,CAAC;AAED,IAAMO,yBAAyB,GAAG,IAAAC,iBAAU,EAC1C,UAACC,KAA4B,EAAEC,GAA0B,EAAK;EAC5D,IAAMC,iBAAiB,GAAG,IAAAC,oBAAc,EAACH,KAAK,CAAC;EAC/C,IAAMI,EAAE,GAAG,IAAAC,YAAK,EAACL,KAAK,CAACI,EAAE,CAAC;EAC1B,OACE,gCAAC,yBAAkB;IACjB,eAAY;EAAoB,GAC5B,IAAAE,qBAAc,EAACN,KAAK,CAAC;IACzB,EAAE,EAAEI,EAAG;IACP,aAAa;IACb,iBAAiB,EAAEF,iBAAkB;IACrC,QAAQ,EAAEf,WAAW,CAACa,KAAK,CAAE;IAC7B,gBAAgB,EAAER;EAAiB,IAEnC,gCAAC,wBAAW,gCACN,IAAAe,qBAAc,EAACP,KAAK,CAAC;IACzB,0CAAiCI,EAAE,CAAG;IACtC,wCAA+BA,EAAE,CAAG;IACpC,EAAE,EAAEA,EAAG;IACP,cAAc,EAAEF,iBAAiB,IAAIA,iBAAiB,CAACM,IAAK;IAC5D,GAAG,EAAEP;EAAI,GACT,CACiB;AAEzB,CAAC,CACF;AAEDH,yBAAyB,CAACW,WAAW,GAAG,2BAA2B;AAE5D,IAAMC,gBAAgB,GAAG,IAAAC,4BAAM,EAACb,yBAAyB,CAAC;EAAA;EAAA;AAAA,0GAEhE;AAAA"}