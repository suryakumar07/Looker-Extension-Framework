{"version":3,"file":"FieldTime.js","names":["checkValueOnBlur","e","target","currentTarget","inputs","Array","from","querySelectorAll","some","input","value","FieldTimeComponent","forwardRef","props","ref","validationMessage","useFormContext","id","useID","pickFieldProps","getHasValue","omitFieldProps","type","FieldTime","styled"],"sources":["../../../../../src/Form/Fields/FieldTime/FieldTime.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { FocusEvent, Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport type { FloatingLabelFieldProps } from '../Field/types'\nimport { FloatingLabelField, omitFieldProps, pickFieldProps } from '../Field'\nimport { getHasValue } from '../Field/useFloatingLabel'\nimport { useFormContext } from '../../Form'\nimport { useID } from '../../../utils'\nimport type { InputTimeProps } from '../../Inputs/InputTime'\nimport { InputTime } from '../../Inputs/InputTime'\n\nexport interface FieldTimeProps\n  extends FloatingLabelFieldProps,\n    InputTimeProps {}\n\nconst checkValueOnBlur = (e: FocusEvent) => {\n  const target = e.currentTarget\n  const inputs = Array.from(target.querySelectorAll('input'))\n  // Check all 3 inputs for a value\n  return inputs.some(input => input.value !== '')\n}\n\nconst FieldTimeComponent = forwardRef(\n  (props: FieldTimeProps, ref: Ref<HTMLInputElement>) => {\n    const validationMessage = useFormContext(props)\n    const id = useID(props.id)\n    return (\n      <FloatingLabelField\n        {...pickFieldProps(props)}\n        id={id}\n        validationMessage={validationMessage}\n        hasValue={getHasValue(props)}\n        checkValueOnBlur={checkValueOnBlur}\n      >\n        <InputTime\n          {...omitFieldProps(props)}\n          width=\"100%\"\n          aria-describedby={`describedby-${id}`}\n          aria-labelledby={`labelledby-${id}`}\n          id={id}\n          validationType={validationMessage && validationMessage.type}\n          ref={ref}\n        />\n      </FloatingLabelField>\n    )\n  }\n)\n\nexport const FieldTime = styled(FieldTimeComponent)``\n"],"mappings":";;;;;;;;;;AAMA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAkD;AAAA;AAAA;AAMlD,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,CAAa,EAAK;EAC1C,IAAMC,MAAM,GAAGD,CAAC,CAACE,aAAa;EAC9B,IAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACJ,MAAM,CAACK,gBAAgB,CAAC,OAAO,CAAC,CAAC;EAE3D,OAAOH,MAAM,CAACI,IAAI,CAAC,UAAAC,KAAK;IAAA,OAAIA,KAAK,CAACC,KAAK,KAAK,EAAE;EAAA,EAAC;AACjD,CAAC;AAED,IAAMC,kBAAkB,GAAG,IAAAC,iBAAU,EACnC,UAACC,KAAqB,EAAEC,GAA0B,EAAK;EACrD,IAAMC,iBAAiB,GAAG,IAAAC,oBAAc,EAACH,KAAK,CAAC;EAC/C,IAAMI,EAAE,GAAG,IAAAC,YAAK,EAACL,KAAK,CAACI,EAAE,CAAC;EAC1B,OACE,gCAAC,yBAAkB,gCACb,IAAAE,qBAAc,EAACN,KAAK,CAAC;IACzB,EAAE,EAAEI,EAAG;IACP,iBAAiB,EAAEF,iBAAkB;IACrC,QAAQ,EAAE,IAAAK,6BAAW,EAACP,KAAK,CAAE;IAC7B,gBAAgB,EAAEb;EAAiB,IAEnC,gCAAC,oBAAS,gCACJ,IAAAqB,qBAAc,EAACR,KAAK,CAAC;IACzB,KAAK,EAAC,MAAM;IACZ,0CAAiCI,EAAE,CAAG;IACtC,wCAA+BA,EAAE,CAAG;IACpC,EAAE,EAAEA,EAAG;IACP,cAAc,EAAEF,iBAAiB,IAAIA,iBAAiB,CAACO,IAAK;IAC5D,GAAG,EAAER;EAAI,GACT,CACiB;AAEzB,CAAC,CACF;AAEM,IAAMS,SAAS,GAAG,IAAAC,4BAAM,EAACb,kBAAkB,CAAC;EAAA;EAAA;AAAA,wFAAE;AAAA"}