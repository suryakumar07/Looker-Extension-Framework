{"version":3,"file":"FieldDateRange.js","names":["checkValueOnBlur","e","inputs","Array","from","currentTarget","querySelectorAll","some","input","value","FieldDateRange","styled","forwardRef","props","ref","validationMessage","useFormContext","id","useID","pickFieldProps","omitFieldProps","onChange","type"],"sources":["../../../../../src/Form/Fields/FieldDateRange/FieldDateRange.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { FocusEvent, Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { FloatingLabelField } from '../Field/FloatingLabelField'\nimport { omitFieldProps, pickFieldProps } from '../Field/Field'\nimport { useFormContext } from '../../Form'\nimport { useID } from '../../../utils'\nimport type { InputDateRangeProps } from '../../Inputs/InputDateRange'\nimport { InputDateRange } from '../../Inputs/InputDateRange'\nimport type { FieldProps, FloatingLabelFieldProps } from '../Field'\n\nexport interface FieldInputDateRangeProps\n  extends FieldProps,\n    FloatingLabelFieldProps,\n    InputDateRangeProps {\n  ref: Ref<HTMLInputElement>\n}\n\nconst checkValueOnBlur = (e: FocusEvent) => {\n  const inputs = Array.from(e.currentTarget.querySelectorAll('input'))\n  // Check both inputs (to - from) for a value\n  return inputs.some(input => input.value !== '')\n}\n\nexport const FieldDateRange = styled(\n  forwardRef((props: FieldInputDateRangeProps, ref: Ref<HTMLInputElement>) => {\n    const validationMessage = useFormContext(props)\n    const id = useID(props.id)\n\n    return (\n      <FloatingLabelField\n        {...pickFieldProps(props)}\n        checkValueOnBlur={checkValueOnBlur}\n        hasValue={!!props.value}\n        id={id}\n        validationMessage={validationMessage}\n      >\n        <InputDateRange\n          {...omitFieldProps(props)}\n          aria-describedby={`describedby-${id}`}\n          aria-labelledby={`labelledby-${id}`}\n          id={id}\n          onChange={props.onChange}\n          value={props.value}\n          validationType={validationMessage && validationMessage.type}\n          ref={ref}\n        />\n      </FloatingLabelField>\n    )\n  })\n)``\n"],"mappings":";;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAA4D;AAAA;AAAA;AAU5D,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,CAAa,EAAK;EAC1C,IAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,aAAa,CAACC,gBAAgB,CAAC,OAAO,CAAC,CAAC;EAEpE,OAAOJ,MAAM,CAACK,IAAI,CAAC,UAAAC,KAAK;IAAA,OAAIA,KAAK,CAACC,KAAK,KAAK,EAAE;EAAA,EAAC;AACjD,CAAC;AAEM,IAAMC,cAAc,GAAG,IAAAC,4BAAM,EAClC,IAAAC,iBAAU,EAAC,UAACC,KAA+B,EAAEC,GAA0B,EAAK;EAC1E,IAAMC,iBAAiB,GAAG,IAAAC,oBAAc,EAACH,KAAK,CAAC;EAC/C,IAAMI,EAAE,GAAG,IAAAC,YAAK,EAACL,KAAK,CAACI,EAAE,CAAC;EAE1B,OACE,gCAAC,sCAAkB,gCACb,IAAAE,qBAAc,EAACN,KAAK,CAAC;IACzB,gBAAgB,EAAEb,gBAAiB;IACnC,QAAQ,EAAE,CAAC,CAACa,KAAK,CAACJ,KAAM;IACxB,EAAE,EAAEQ,EAAG;IACP,iBAAiB,EAAEF;EAAkB,IAErC,gCAAC,8BAAc,gCACT,IAAAK,qBAAc,EAACP,KAAK,CAAC;IACzB,0CAAiCI,EAAE,CAAG;IACtC,wCAA+BA,EAAE,CAAG;IACpC,EAAE,EAAEA,EAAG;IACP,QAAQ,EAAEJ,KAAK,CAACQ,QAAS;IACzB,KAAK,EAAER,KAAK,CAACJ,KAAM;IACnB,cAAc,EAAEM,iBAAiB,IAAIA,iBAAiB,CAACO,IAAK;IAC5D,GAAG,EAAER;EAAI,GACT,CACiB;AAEzB,CAAC,CAAC,CACH;EAAA;EAAA;AAAA,wFAAE;AAAA"}