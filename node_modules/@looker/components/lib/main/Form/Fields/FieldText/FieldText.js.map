{"version":3,"file":"FieldText.js","names":["FieldTextComponent","forwardRef","props","ref","id","useID","validationMessage","useFormContext","useTheme","space","useState","beforeWidth","setBeforeWidth","labelOffset","iconBefore","u8","before","getHasValue","pickFieldProps","omitFieldProps","type","displayName","FieldText","styled"],"sources":["../../../../../src/Form/Fields/FieldText/FieldText.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { useID } from '../../../utils'\nimport { useFormContext } from '../../Form'\nimport type { InputTextProps } from '../../Inputs/InputText'\nimport { InputText, InputTextContext } from '../../Inputs/InputText'\nimport type { FieldProps } from '../Field'\nimport { FloatingLabelField, omitFieldProps, pickFieldProps } from '../Field'\nimport { getHasValue } from '../Field/useFloatingLabel'\n\nexport interface FieldTextProps extends FieldProps, InputTextProps {}\n\nconst FieldTextComponent = forwardRef(\n  (props: FieldTextProps, ref: Ref<HTMLInputElement>) => {\n    const id = useID(props.id)\n    const validationMessage = useFormContext(props)\n    const { space } = useTheme()\n    const [beforeWidth, setBeforeWidth] = useState(0)\n    let labelOffset\n    if (props.iconBefore) {\n      labelOffset = space.u8\n    } else if (props.before) {\n      labelOffset = `${beforeWidth}px`\n    }\n\n    return (\n      <InputTextContext.Provider value={{ beforeWidth, setBeforeWidth }}>\n        <FloatingLabelField\n          id={id}\n          validationMessage={validationMessage}\n          hasValue={getHasValue(props)}\n          labelOffset={labelOffset}\n          {...pickFieldProps(props)}\n        >\n          <InputText\n            {...omitFieldProps(props)}\n            id={id}\n            aria-describedby={`describedby-${id}`}\n            validationType={validationMessage && validationMessage.type}\n            ref={ref}\n          />\n        </FloatingLabelField>\n      </InputTextContext.Provider>\n    )\n  }\n)\n\nFieldTextComponent.displayName = 'FieldTextComponent'\n\nexport const FieldText = styled(FieldTextComponent)``\n"],"mappings":";;;;;;;;;;;AAMA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAuD;AAAA;AAAA;AAIvD,IAAMA,kBAAkB,GAAG,IAAAC,iBAAU,EACnC,UAACC,KAAqB,EAAEC,GAA0B,EAAK;EACrD,IAAMC,EAAE,GAAG,IAAAC,YAAK,EAACH,KAAK,CAACE,EAAE,CAAC;EAC1B,IAAME,iBAAiB,GAAG,IAAAC,oBAAc,EAACL,KAAK,CAAC;EAC/C,gBAAkB,IAAAM,0BAAQ,GAAE;IAApBC,KAAK,aAALA,KAAK;EACb,gBAAsC,IAAAC,eAAQ,EAAC,CAAC,CAAC;IAAA;IAA1CC,WAAW;IAAEC,cAAc;EAClC,IAAIC,WAAW;EACf,IAAIX,KAAK,CAACY,UAAU,EAAE;IACpBD,WAAW,GAAGJ,KAAK,CAACM,EAAE;EACxB,CAAC,MAAM,IAAIb,KAAK,CAACc,MAAM,EAAE;IACvBH,WAAW,aAAMF,WAAW,OAAI;EAClC;EAEA,OACE,gCAAC,2BAAgB,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEA,WAAW,EAAXA,WAAW;MAAEC,cAAc,EAAdA;IAAe;EAAE,GAChE,gCAAC,yBAAkB;IACjB,EAAE,EAAER,EAAG;IACP,iBAAiB,EAAEE,iBAAkB;IACrC,QAAQ,EAAE,IAAAW,6BAAW,EAACf,KAAK,CAAE;IAC7B,WAAW,EAAEW;EAAY,GACrB,IAAAK,qBAAc,EAAChB,KAAK,CAAC,GAEzB,gCAAC,oBAAS,gCACJ,IAAAiB,qBAAc,EAACjB,KAAK,CAAC;IACzB,EAAE,EAAEE,EAAG;IACP,0CAAiCA,EAAE,CAAG;IACtC,cAAc,EAAEE,iBAAiB,IAAIA,iBAAiB,CAACc,IAAK;IAC5D,GAAG,EAAEjB;EAAI,GACT,CACiB,CACK;AAEhC,CAAC,CACF;AAEDH,kBAAkB,CAACqB,WAAW,GAAG,oBAAoB;AAE9C,IAAMC,SAAS,GAAG,IAAAC,4BAAM,EAACvB,kBAAkB,CAAC;EAAA;EAAA;AAAA,wFAAE;AAAA"}