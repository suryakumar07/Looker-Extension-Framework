{"version":3,"file":"Breakpoint.js","names":["Breakpoint","children","show","isArray","from","to","useState","document","body","clientWidth","screenWidth","setScreenWidth","theme","useTheme","breakpointPx","breakpoints","map","b","convertRemToPx","parseInt","replace","fromIndex","indexOf","BreakpointRamp","toIndex","handleResize","useCallback","useResize","screenMin","screenMax","Infinity"],"sources":["../../../src/Breakpoint/Breakpoint.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React, { useCallback, useState } from 'react'\nimport type { ReactNode } from 'react'\nimport type { NamedBreakpoints } from '@looker/design-tokens'\nimport { convertRemToPx, BreakpointRamp } from '@looker/design-tokens'\nimport isArray from 'lodash/isArray'\nimport { useTheme } from 'styled-components'\nimport { useResize } from '../utils'\n\nexport interface BreakpointProps {\n  /*\n   * Define a single screen size or range of screen sizes to render the children.\n   */\n  show: NamedBreakpoints | [NamedBreakpoints?, NamedBreakpoints?]\n  children?: ReactNode\n}\n\nexport const Breakpoint = ({ children, show }: BreakpointProps) => {\n  // Define screen size range.\n  // If they pass a single value, e.g. 'mobile', it should be equivalent to\n  // \"from mobile, to mobile\"\n  const [from = 'mobile', to = 'xl'] = isArray(show) ? show : [show, show]\n  const [screenWidth, setScreenWidth] = useState(\n    typeof document === 'undefined' ? 800 : document.body.clientWidth\n  )\n  const theme = useTheme()\n  const breakpointPx = theme.breakpoints.map((b: string) =>\n    convertRemToPx(parseInt(b.replace('rem', '')))\n  )\n\n  const fromIndex = theme.breakpoints.indexOf(BreakpointRamp[from])\n  const toIndex = theme.breakpoints.indexOf(BreakpointRamp[to])\n\n  const handleResize = useCallback(() => {\n    if (document) {\n      // document is not available in server side rendering\n      setScreenWidth(document.body.clientWidth)\n    }\n  }, [])\n\n  useResize(\n    typeof document === 'undefined' ? null : document.body,\n    handleResize\n  )\n\n  const screenMin = from === 'mobile' ? 0 : breakpointPx[fromIndex - 1] // mobile screens start at 0px\n  const screenMax = to === 'xl' ? Infinity : breakpointPx[toIndex] // xl includes xl breakpoint and above\n\n  return (\n    <>{screenWidth > screenMin && screenWidth <= screenMax ? children : null}</>\n  )\n}\n"],"mappings":";;;;;;;;;AAKA;AAGA;AACA;AACA;AACA;AAAoC;AAAA;;AAU7B,IAAMA,UAAU,GAAG,SAAbA,UAAU,OAA4C;EAAA,IAAtCC,QAAQ,QAARA,QAAQ;IAAEC,IAAI,QAAJA,IAAI;EAIzC,YAAqC,IAAAC,mBAAO,EAACD,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,EAAEA,IAAI,CAAC;IAAA;IAAA;IAAjEE,IAAI,uBAAG,QAAQ;IAAA;IAAEC,EAAE,wBAAG,IAAI;EACjC,gBAAsC,IAAAC,eAAQ,EAC5C,OAAOC,QAAQ,KAAK,WAAW,GAAG,GAAG,GAAGA,QAAQ,CAACC,IAAI,CAACC,WAAW,CAClE;IAAA;IAFMC,WAAW;IAAEC,cAAc;EAGlC,IAAMC,KAAK,GAAG,IAAAC,0BAAQ,GAAE;EACxB,IAAMC,YAAY,GAAGF,KAAK,CAACG,WAAW,CAACC,GAAG,CAAC,UAACC,CAAS;IAAA,OACnD,IAAAC,4BAAc,EAACC,QAAQ,CAACF,CAAC,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;EAAA,EAC/C;EAED,IAAMC,SAAS,GAAGT,KAAK,CAACG,WAAW,CAACO,OAAO,CAACC,4BAAc,CAACnB,IAAI,CAAC,CAAC;EACjE,IAAMoB,OAAO,GAAGZ,KAAK,CAACG,WAAW,CAACO,OAAO,CAACC,4BAAc,CAAClB,EAAE,CAAC,CAAC;EAE7D,IAAMoB,YAAY,GAAG,IAAAC,kBAAW,EAAC,YAAM;IACrC,IAAInB,QAAQ,EAAE;MAEZI,cAAc,CAACJ,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC;IAC3C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAAkB,gBAAS,EACP,OAAOpB,QAAQ,KAAK,WAAW,GAAG,IAAI,GAAGA,QAAQ,CAACC,IAAI,EACtDiB,YAAY,CACb;EAED,IAAMG,SAAS,GAAGxB,IAAI,KAAK,QAAQ,GAAG,CAAC,GAAGU,YAAY,CAACO,SAAS,GAAG,CAAC,CAAC;EACrE,IAAMQ,SAAS,GAAGxB,EAAE,KAAK,IAAI,GAAGyB,QAAQ,GAAGhB,YAAY,CAACU,OAAO,CAAC;;EAEhE,OACE,kEAAGd,WAAW,GAAGkB,SAAS,IAAIlB,WAAW,IAAImB,SAAS,GAAG5B,QAAQ,GAAG,IAAI,CAAI;AAEhF,CAAC;AAAA"}