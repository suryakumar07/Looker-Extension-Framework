{"version":3,"file":"edgeShadow.js","names":["edgeShadow","placement","depth","pseudo","relativeTo","shadowReverse","shadow","position","css"],"sources":["../../../../src/DataTable/utils/edgeShadow.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { css } from 'styled-components'\n\n/**\n * This utility function produces a shadow on the outside edge of the DOM element to which it is assigned\n * @param placement which side to place the shadow on\n * @param depth size of the shadow in pixels\n */\nexport const edgeShadow = (placement: 'left' | 'right' = 'left', depth = 4) => {\n  let pseudo = ':after'\n  let relativeTo = 'right'\n  let shadowReverse = ''\n\n  if (placement === 'right') {\n    pseudo = ':before'\n    relativeTo = 'left'\n    shadowReverse = '-'\n  }\n\n  const shadow = `${`${shadowReverse}${depth}px`} 0 ${depth}px -${depth}px rgba( 0, 0, 0, 0.25) inset`\n\n  /**\n   * NOTE: In Safari for reasons we can't entirely explain the `::after`` pseudo element\n   * is obscured by a black area unless it's moved at least 11px\n   **/\n  const position = depth + 7\n\n  return css`\n    &${pseudo} {\n      box-shadow: ${shadow};\n      content: ' ';\n      height: 100%;\n      position: absolute;\n      ${`${relativeTo}: -${position}px;`}\n      top: 0;\n      width: ${position}px;\n    }\n  `\n}\n"],"mappings":";;;;;;;;AAKA;AAAuC;AAOhC,IAAMA,UAAU,GAAG,SAAbA,UAAU,GAAwD;EAAA,IAApDC,SAA2B,uEAAG,MAAM;EAAA,IAAEC,KAAK,uEAAG,CAAC;EACxE,IAAIC,MAAM,GAAG,QAAQ;EACrB,IAAIC,UAAU,GAAG,OAAO;EACxB,IAAIC,aAAa,GAAG,EAAE;EAEtB,IAAIJ,SAAS,KAAK,OAAO,EAAE;IACzBE,MAAM,GAAG,SAAS;IAClBC,UAAU,GAAG,MAAM;IACnBC,aAAa,GAAG,GAAG;EACrB;EAEA,IAAMC,MAAM,uBAASD,aAAa,SAAGH,KAAK,gBAAUA,KAAK,iBAAOA,KAAK,kCAA+B;;EAMpG,IAAMK,QAAQ,GAAGL,KAAK,GAAG,CAAC;EAE1B,WAAOM,qBAAG,+PACLL,MAAM,EACOG,MAAM,YAIfF,UAAU,gBAAMG,QAAQ,UAEpBA,QAAQ;AAGvB,CAAC;AAAA"}