{"version":3,"file":"dataTableFormatting.js","names":["filterUndefined","t","undefined","getNumericColumnIndices","columns","visibleColumns","filter","c","includes","id","hide","map","index","type","numericColumnCSS","columnIndices","css","columnIndex","DataTableCell","SpaceVertical"],"sources":["../../../../src/DataTable/utils/dataTableFormatting.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { css } from 'styled-components'\nimport { SpaceVertical } from '../../Layout/Space'\nimport type { DataTableColumns } from '..'\nimport { DataTableCell } from '..'\n\nfunction filterUndefined<T>(t: T | undefined): t is T {\n  return t !== undefined\n}\n\nexport const getNumericColumnIndices = (\n  columns: DataTableColumns,\n  visibleColumns: string[]\n) =>\n  columns\n    .filter(c => visibleColumns.includes(c.id) || c.hide === undefined)\n    .map((c, index) => (c.type === 'number' ? index + 1 : undefined))\n    .filter(filterUndefined)\n\nexport const numericColumnCSS = (columnIndices: number[]) =>\n  css`\n    ${columnIndices.map(\n      columnIndex =>\n        css`\n          ${DataTableCell}:nth-child(${columnIndex + 1}) {\n            text-align: right;\n            ${SpaceVertical} {\n              flex-direction: row-reverse;\n            }\n          }\n        `\n    )}\n  `\n"],"mappings":";;;;;;;;AAKA;AACA;AAEA;AAAkC;AAElC,SAASA,eAAe,CAAIC,CAAgB,EAAU;EACpD,OAAOA,CAAC,KAAKC,SAAS;AACxB;AAEO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuB,CAClCC,OAAyB,EACzBC,cAAwB;EAAA,OAExBD,OAAO,CACJE,MAAM,CAAC,UAAAC,CAAC;IAAA,OAAIF,cAAc,CAACG,QAAQ,CAACD,CAAC,CAACE,EAAE,CAAC,IAAIF,CAAC,CAACG,IAAI,KAAKR,SAAS;EAAA,EAAC,CAClES,GAAG,CAAC,UAACJ,CAAC,EAAEK,KAAK;IAAA,OAAML,CAAC,CAACM,IAAI,KAAK,QAAQ,GAAGD,KAAK,GAAG,CAAC,GAAGV,SAAS;EAAA,CAAC,CAAC,CAChEI,MAAM,CAACN,eAAe,CAAC;AAAA;AAAA;AAErB,IAAMc,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,aAAuB;EAAA,WACtDC,qBAAG,sGACCD,aAAa,CAACJ,GAAG,CACjB,UAAAM,WAAW;IAAA,WACTD,qBAAG,kQACCE,eAAa,EAAcD,WAAW,GAAG,CAAC,EAExCE,oBAAa;EAAA,CAIlB,CACJ;AAAA,CACF;AAAA"}