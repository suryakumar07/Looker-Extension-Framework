{"version":3,"file":"useDataTableSortManager.js","names":["useDataTableSortManager","caption","defaultData","defaultColumns","generateActions","onClickItem","useState","data","setData","columns","setColumns","onSort","id","sortDirection","doDataTableSort","sortedColumns","sortedData","items","map","dataObj","defaultOrderColumn","column"],"sources":["../../../../src/DataTable/utils/useDataTableSortManager.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { MouseEvent, ReactNode } from 'react'\nimport React, { useState } from 'react'\nimport { DataTable } from '../DataTable'\nimport { DataTableItem } from '../Item'\nimport type { DataTableColumns } from '../Column'\nimport { DataTableCell } from '../Column'\nimport { doDataTableSort } from './sort_utils'\nimport type { DataTableDatum, DataTableData } from './sort_utils'\n\nexport const useDataTableSortManager = (\n  caption: string,\n  defaultData: DataTableData,\n  defaultColumns: DataTableColumns,\n  generateActions: (item: DataTableDatum) => ReactNode,\n  onClickItem?: (e: MouseEvent<HTMLTableDataCellElement>) => void\n) => {\n  const [data, setData] = useState(defaultData)\n  const [columns, setColumns] = useState(defaultColumns)\n\n  const onSort = (id: string, sortDirection: 'asc' | 'desc') => {\n    const { columns: sortedColumns, data: sortedData } = doDataTableSort(\n      data,\n      columns,\n      id,\n      sortDirection\n    )\n    setData(sortedData)\n    setColumns(sortedColumns)\n  }\n\n  const items = data.map(dataObj => {\n    const defaultOrderColumn = columns[0].id\n    const id = dataObj[defaultOrderColumn]\n\n    return (\n      <DataTableItem\n        id={id}\n        key={id}\n        onClick={onClickItem}\n        actions={generateActions(dataObj)}\n      >\n        {columns.map(column => (\n          <DataTableCell key={column.id}>{dataObj[column.id]}</DataTableCell>\n        ))}\n      </DataTableItem>\n    )\n  })\n\n  return (\n    <DataTable caption={caption} columns={columns} onSort={onSort}>\n      {items}\n    </DataTable>\n  )\n}\n"],"mappings":";;;;;;;;;AAMA;AACA;AACA;AAEA;AACA;AAA8C;AAAA;;AAGvC,IAAMA,uBAAuB,GAAG,SAA1BA,uBAAuB,CAClCC,OAAe,EACfC,WAA0B,EAC1BC,cAAgC,EAChCC,eAAoD,EACpDC,WAA+D,EAC5D;EACH,gBAAwB,IAAAC,eAAQ,EAACJ,WAAW,CAAC;IAAA;IAAtCK,IAAI;IAAEC,OAAO;EACpB,iBAA8B,IAAAF,eAAQ,EAACH,cAAc,CAAC;IAAA;IAA/CM,OAAO;IAAEC,UAAU;EAE1B,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAIC,EAAU,EAAEC,aAA6B,EAAK;IAC5D,uBAAqD,IAAAC,2BAAe,EAClEP,IAAI,EACJE,OAAO,EACPG,EAAE,EACFC,aAAa,CACd;MALgBE,aAAa,oBAAtBN,OAAO;MAAuBO,UAAU,oBAAhBT,IAAI;IAMpCC,OAAO,CAACQ,UAAU,CAAC;IACnBN,UAAU,CAACK,aAAa,CAAC;EAC3B,CAAC;EAED,IAAME,KAAK,GAAGV,IAAI,CAACW,GAAG,CAAC,UAAAC,OAAO,EAAI;IAChC,IAAMC,kBAAkB,GAAGX,OAAO,CAAC,CAAC,CAAC,CAACG,EAAE;IACxC,IAAMA,EAAE,GAAGO,OAAO,CAACC,kBAAkB,CAAC;IAEtC,OACE,gCAAC,mBAAa;MACZ,EAAE,EAAER,EAAG;MACP,GAAG,EAAEA,EAAG;MACR,OAAO,EAAEP,WAAY;MACrB,OAAO,EAAED,eAAe,CAACe,OAAO;IAAE,GAEjCV,OAAO,CAACS,GAAG,CAAC,UAAAG,MAAM;MAAA,OACjB,gCAAC,qBAAa;QAAC,GAAG,EAAEA,MAAM,CAACT;MAAG,GAAEO,OAAO,CAACE,MAAM,CAACT,EAAE,CAAC,CAAiB;IAAA,CACpE,CAAC,CACY;EAEpB,CAAC,CAAC;EAEF,OACE,gCAAC,oBAAS;IAAC,OAAO,EAAEX,OAAQ;IAAC,OAAO,EAAEQ,OAAQ;IAAC,MAAM,EAAEE;EAAO,GAC3DM,KAAK,CACI;AAEhB,CAAC;AAAA"}