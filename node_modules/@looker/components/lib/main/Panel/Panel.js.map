{"version":3,"file":"Panel.js","names":["isRenderProp","children","Panel","content","props","usePanel","domProps","panel","isValidElement","cloneElement","console","warn"],"sources":["../../../src/Panel/Panel.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ReactNode } from 'react'\nimport React, { isValidElement, cloneElement } from 'react'\nimport type { PanelProps, PanelRenderProp } from './types'\nimport { usePanel } from './usePanel'\n\nconst isRenderProp = (\n  children: ReactNode | PanelRenderProp\n): children is PanelRenderProp => typeof children === 'function'\n\nexport const Panel = ({ children, content, ...props }: PanelProps) => {\n  const { domProps, panel } = usePanel({ content, ...props })\n\n  if (isValidElement(children)) {\n    children = cloneElement(children, {\n      ...domProps,\n    })\n  } else if (isRenderProp(children)) {\n    children = children(domProps)\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Element \"${typeof children}\" can't be used as target for Panel`\n    )\n  }\n\n  return (\n    <>\n      {children}\n      {panel}\n    </>\n  )\n}\n"],"mappings":";;;;;;;;;;;AAMA;AAEA;AAAqC;AAAA;AAAA;AAAA;AAAA;AAErC,IAAMA,YAAY,GAAG,SAAfA,YAAY,CAChBC,QAAqC;EAAA,OACL,OAAOA,QAAQ,KAAK,UAAU;AAAA;AAEzD,IAAMC,KAAK,GAAG,SAARA,KAAK,OAAoD;EAAA,IAA9CD,QAAQ,QAARA,QAAQ;IAAEE,OAAO,QAAPA,OAAO;IAAKC,KAAK;EACjD,gBAA4B,IAAAC,mBAAQ;MAAGF,OAAO,EAAPA;IAAO,GAAKC,KAAK,EAAG;IAAnDE,QAAQ,aAARA,QAAQ;IAAEC,KAAK,aAALA,KAAK;EAEvB,IAAI,IAAAC,qBAAc,EAACP,QAAQ,CAAC,EAAE;IAC5BA,QAAQ,GAAG,IAAAQ,mBAAY,EAACR,QAAQ,oBAC3BK,QAAQ,EACX;EACJ,CAAC,MAAM,IAAIN,YAAY,CAACC,QAAQ,CAAC,EAAE;IACjCA,QAAQ,GAAGA,QAAQ,CAACK,QAAQ,CAAC;EAC/B,CAAC,MAAM;IAELI,OAAO,CAACC,IAAI,8CACSV,QAAQ,2CAC5B;EACH;EAEA,OACE,kEACGA,QAAQ,EACRM,KAAK,CACL;AAEP,CAAC;AAAA"}