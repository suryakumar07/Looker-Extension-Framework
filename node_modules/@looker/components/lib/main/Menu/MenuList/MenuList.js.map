{"version":3,"file":"MenuList.js","names":["MenuListInternal","forwardRef","forwardedRef","children","closeParentMenu","props","displayName","MenuList","styled","listPadding"],"sources":["../../../../src/Menu/MenuList/MenuList.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport type { ListProps } from '../../List'\nimport { List } from '../../List'\nimport { listPadding } from '../../List/utils'\nimport type { CloseParentMenuProps } from '../NestedMenuProvider'\nimport { NestedMenuProvider } from '../NestedMenuProvider'\n\nexport type MenuListProps = Omit<ListProps, 'color'> & CloseParentMenuProps\n\nexport const MenuListInternal = forwardRef(\n  (\n    { children, closeParentMenu, ...props }: MenuListProps,\n    forwardedRef: Ref<HTMLUListElement>\n  ) => (\n    <NestedMenuProvider closeParentMenu={closeParentMenu}>\n      <List role=\"menu\" ref={forwardedRef} {...props}>\n        {children}\n      </List>\n    </NestedMenuProvider>\n  )\n)\nMenuListInternal.displayName = 'MenuListInternal'\n\n/**\n * @private Should only be used when a more complicated <Popover> + <MenuList>\n * composition is needed over a normal <Menu> element.\n */\nexport const MenuList = styled(MenuListInternal)`\n  min-width: 12rem;\n\n  ${listPadding}\n`\n"],"mappings":";;;;;;;;;;;AAMA;AACA;AAEA;AACA;AAEA;AAA0D;AAAA;AAAA;AAAA;AAInD,IAAMA,gBAAgB,GAAG,IAAAC,iBAAU,EACxC,gBAEEC,YAAmC;EAAA,IADjCC,QAAQ,QAARA,QAAQ;IAAEC,eAAe,QAAfA,eAAe;IAAKC,KAAK;EAAA,OAGrC,gCAAC,sCAAkB;IAAC,eAAe,EAAED;EAAgB,GACnD,gCAAC,UAAI;IAAC,IAAI,EAAC,MAAM;IAAC,GAAG,EAAEF;EAAa,GAAKG,KAAK,GAC3CF,QAAQ,CACJ,CACY;AAAA,CACtB,CACF;AAAA;AACDH,gBAAgB,CAACM,WAAW,GAAG,kBAAkB;;AAM1C,IAAMC,QAAQ,GAAG,IAAAC,4BAAM,EAACR,gBAAgB,CAAC;EAAA;EAAA;AAAA,0HAG5CS,kBAAW,CACd;AAAA"}